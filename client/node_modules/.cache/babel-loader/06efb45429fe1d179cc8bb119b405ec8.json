{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\hassan.ali\\\\Downloads\\\\HR-SYSTEM-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\hassan.ali\\\\Downloads\\\\HR-SYSTEM-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\hassan.ali\\\\Downloads\\\\HR-SYSTEM-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\hassan.ali\\\\Downloads\\\\HR-SYSTEM-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\hassan.ali\\\\Downloads\\\\HR-SYSTEM-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\hassan.ali\\\\Downloads\\\\HR-SYSTEM-main\\\\client\\\\src\\\\Components\\\\Employee Data\\\\All Employees\\\\EmployeeData.js\",\n  _this2 = this;\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n// import React from \"react\";\n// import { useState } from \"react\";\n// import {\n//   Typography,\n//   TextField,\n//   Button,\n//   Stepper,\n//   Step,\n//   StepLabel,\n// } from \"@material-ui/core\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import {\n//   Modal,\n\n//   Form,\n//   Col,\n//   Row,\n//   Container,\n//   FormGroup,\n// } from \"react-bootstrap\";\n// import {\n//   useForm,\n//   Controller,\n//   FormProvider,\n//   useFormContext,\n// } from \"react-hook-form\";\n// import Card from 'react-bootstrap/Card';\n// import Table from \"react-bootstrap/Table\";\n// import { Link } from 'react-router-dom'\n\n// // const [emp, setEmp] = useState({\n// //   profilepic: \"\",\n// //   firstname: \"\",\n// //   lastname: \"\",\n// //   dob: \"\",\n// //   cnic: \"\",\n// //   gender: \"\",\n// //   martialStatus: \"\",\n// //   religion: \"\",\n// //   jobtitle: \"\",\n// //   username: \"\",\n// //   primaryemail: \"\",\n// //   secondaryemail: \"\",\n// //   password: \"\", \n// //   primaryphone: \"\",\n// //   secondaryphone: \"\",\n// //   permanentaddress: \"\",\n// //   temporaryaddress: \"\",\n// //   province: \"\",\n// //   city: \"\",\n// //   postalCode: \"\",\n// //   departments: \"\",\n// //   designation: \"\",\n// //   joiningdate: \"\",\n// //   educationdetails: \"\",\n// //   employementhistory: \"\",\n\n// //   currentSalary: \"\",\n// //   employementstatus: \"\",\n//   //bank information\n//   // bankname: \"\",\n//   // paymentmode: \"\",\n//   // accounttitle: \"\",\n//   // accountno: \"\",\n//   // IBAN: \"\",\n//   // branchcode: \"\",\n//   // country:\"\",\n//   // degree info:\"\"\n// // });\n// // let name, value;\n// //   const handleinput = (e) => {\n// //     console.log(e);\n// //     name = e.target.name;\n// //     value = e.target.value;\n// //     setEmp({ ...emp, [name]: value });\n// //   };\n\n// // const [testUpdate, setTestUpdate] = useState(false);\n// // const [employement, setemployement] = useState([]);\n\n// // const removemployement = (i) =>{\n// //   const temp = employement;\n// //   employement.splice(i,1); \n// //   console.log(\"splice\",temp)\n//   // setemployement(temp);\n//   // setTestUpdate(!testUpdate)\n// // }\n\n// // const [empdetails, setempdetails] = useState({\n// //   company: \"\",\n// //   position: \"\",\n// //   joiningdate: \"\",\n// //   resignationdate: \"\",\n// //   duration: \"\",\n// //   jobdescription: \"\",\n// // });\n\n// // const addhistory = () => {\n// //   var empl = employement;\n// //   empl.push({\n// //     company: empdetails.company,\n// //     position: empdetails.position,\n// //     joiningdate: empdetails.joiningdate,\n// //     resignationdate: empdetails.resignationdate,\n// //     duration: empdetails.duration,\n// //     jobdescription: empdetails.jobdescription,\n// //   });\n// //   console.log(\"emplllllllll\", empl);\n// //   setemployement(empl);\n// //   setEmp({ ...emp, employementhistory: empl });\n// // };\n\n// const useStyles = makeStyles((theme) => ({\n//   button: {\n//     marginRight: theme.spacing(1),\n//   },\n// }));\n\n// function getSteps() {\n//   return [\n//     \"Personal Information\",\n//     \"Address & Region\",\n//     \"Education Information\",\n//     \"Previous Information\",\n//     \"Employement Details\",\n//     \"Bank Details\"\n//   ];\n// }\n\n// function getStepContent({props,activeStep}) {\n//   // console\n//   const step =activeStep\n//   // const [childModel1, setShowChildModel1] = useState(false);\n//   // const [childModel, setShowChildModel] = useState(false);\n//   // const Closechildmodal = () => setShowChildModel(false);\n//   // const Closechildmodal1 = () => setShowChildModel1(false);\n\n//   switch (step) {\n//     case 0:\n//       return (\n//         <>\n//         <div style={{height:'20%'}}>\n\n//           <div className=\"w-75\" id=\"responsivewidth\" style={{width:'60%', height:'40%'}}>\n//                   <Col>\n//                     <Row >\n//                       <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\n//                         <Form.Group\n//                           as={Col}\n//                           controlId=\"formGridFirstName\"\n//                           className=\"formmargin\"\n//                         >\n//                           <Form.Label>First Name</Form.Label>\n//                           <Form.Control\n//                             type=\"text\"\n//                             required\n//                             name=\"firstname\"\n//                             placeholder=\"First Name\"\n//                             // value={emp.firstname}\n//                             value={props.value}\n//                             // onChange={handleinput}\n//                             onChange={props.onChange}\n//                           />\n//                         </Form.Group>\n//                       </Col>\n//                       <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\n//                         <Form.Group\n//                           as={Col}\n//                           controlId=\"formGridLastName\"\n//                           className=\"formmargin\"\n//                         >\n//                           <Form.Label>Last Name</Form.Label>\n//                           <Form.Control\n//                             type=\"text\"\n//                             required\n//                             name=\"lastname\"\n//                             placeholder=\"Last Name\"\n//                             // value={emp.lastname}\n//                             value={props.value1}\n//                             // onChange={handleinput}\n//                             onChange={props.onChange}\n//                           />\n//                         </Form.Group>\n//                       </Col>\n//                     </Row>\n//                     <Row>\n//                       <Col xxl='6' xl='6' lg='6' md='6'>\n//                         <Form.Group\n//                           as={Col}\n//                           controlId=\"formGridgender\"\n//                           className=\"formmargin\"\n//                         >\n//                           <Form.Label>Gender</Form.Label>\n//                           <Form.Select\n//                             required\n//                             name=\"gender\"\n//                             // value={emp.gender}\n//                             value={props.value2}\n//                             // onChange={handleinput}\n//                             onChange={props.onChange}\n//                           >\n//                             <option value=\"\" selected hidden disabled>\n//                               Please Select\n//                             </option>\n//                             <option>Male</option>\n//                             <option>Female</option>\n//                             <option>Other</option>\n//                           </Form.Select>\n//                         </Form.Group>\n//                       </Col>\n//                       <Col xl='6' lg=\"6\" md=\"6\">\n//                         <Form.Group\n//                           as={Col}\n//                           controlId=\"formGridFirstName\"\n//                           className=\"formmargin\"\n//                         >\n//                           <Form.Label>National ID </Form.Label>\n//                           <Form.Control\n//                             type=\"number\"\n//                             required\n//                             name=\"cnic\"\n//                             placeholder=\"CNIC\"\n//                             // value={emp.cnic}\n//                             value={props.value3}\n//                             // onChange={handleinput}\n//                             onChange={props.onChange}\n//                             //   disabled={disableFields}\n//                           />\n//                         </Form.Group>\n//                       </Col>\n//                     </Row>\n//                     <Row>\n//                       <Col xxl='6' xl='6' lg='6'>\n//                         <Form.Group\n//                           as={Col}\n//                           controlId=\"formGridLastName\"\n//                           className=\"formmargin\"\n//                         >\n//                           <Form.Label>D-0-B</Form.Label>\n//                           {/* <DatePicker\n//                             required\n//                             selected={emp.dob}\n//                             onChange={(date)=>{setEmp({...emp,dob:moment(date).format('dd/mm/yyyy')})}}\n//                             // dateFormat='d MMMM, yyyy'\n//                             dateFormat='dd/mm/yyyy'\n//                             dropDownMode=\"select\"\n//                           /> */}\n//                           <Form.Control\n//                             type=\"date\"\n//                             required\n//                             placeholder=\"dd/mm/yyyy\"\n//                             name=\"dob\"\n//                             // value={emp.dob}\n//                             value={props.value4}\n//                             // onChange={handleinput}\n//                             onChange={props.onChange}\n//                             //   disabled={disableFields}\n//                           />\n//                         </Form.Group>\n//                       </Col>\n\n//                       <Col  xl='6' lg=\"6\" >\n//                         <Form.Group\n//                           as={Col}\n//                           controlId=\"formGridMartialStatus\"\n//                           className=\"formmargin\"\n//                         >\n//                           <Form.Label>Martial Status</Form.Label>\n//                           <Form.Select\n//                             required\n//                             name=\"martialStatus\"\n//                             placeholder=\"martial status..\"\n//                             // value={emp.martialStatus}\n//                             value={props.value5}\n//                             // onChange={handleinput}\n//                             onChange={props.onChange}\n//                             //   disabled={disableFields}\n//                           >\n//                             <option value=\"\" selected hidden disabled>\n//                               Please Select\n//                             </option>\n//                             <option>Single</option>\n//                             <option>Married</option>\n//                             <option>Divorced</option>\n//                             <option>widow</option>\n//                           </Form.Select>\n//                         </Form.Group>\n//                       </Col>\n//                       <Col xl='6' lg='6'>\n//                         <Form.Group\n//                           as={Col}\n//                           controlId=\"formGridLastName\"\n//                           className=\"formmargin\"\n//                         >\n//                           <Form.Label>Religion</Form.Label>\n//                           <Form.Select\n//                             required\n//                             name=\"religion\"\n//                             placeholder=\"Religion\"\n//                             // value={emp.religion}\n//                             value={props.value6}\n//                             // onChange={handleinput}\n//                             onChange={props.onChange}\n//                             //   disabled={disableFields}\n//                           >\n//                             <option value=\"\" selected hidden disabled>\n//                               Please Select\n//                             </option>\n//                             <option>Islam</option>\n//                             <option>Christianity</option>\n//                             <option>Buddhism</option>\n//                             <option> Sikhism</option>\n//                             <option> Hinduism</option>\n//                             <option>Bahá’í</option>\n//                             <option>Confucianism</option>\n//                             <option>Jainism</option>\n//                             <option>Judaism</option>\n//                             <option>Zoroastrianism</option>\n//                             <option>Druze</option>\n//                           </Form.Select>\n//                         </Form.Group>\n//                       </Col>\n//                     </Row>\n//                   </Col>\n\n//                   </div>\n//                   </div>\n\n//         </>\n//       );\n\n//     case 1:\n//       return (\n//         <>\n\n//             <div style={{height:'20%'}}>\n//           <Row>\n//                     <h5\n//                       className=\"py-2 \"\n//                       style={{ fontSize: \"22px\", padding: \"0px 19px\" }}\n//                     >\n//                       Primary\n//                     </h5>\n//            <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\n//                       <Form.Group\n//                         as={Col}\n//                         controlId=\"formGridphone\"\n//                         className=\"formmargin \"\n//                       >\n//                         <Form.Label>Phone</Form.Label>\n//                         <Form.Control\n//                           type=\"number\"\n//                           required\n//                           name=\"primaryphone\"\n//                           placeholder=\"phone\"\n//                           // value={emp.primaryphone}\n//                           value={props.value8}\n//                           // onChange={handleinput}\n//                           onChange={props.onChange}\n//                         />\n//                       </Form.Group>\n//                     </Col>\n//                     <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\n//                       <Form.Group\n//                         as={Col}\n//                         controlId=\"formGridcompanyemail\"\n//                         className=\"formmargin \"\n//                       >\n//                         <Form.Label>Email</Form.Label>\n//                         <Form.Control\n//                           type=\"email\"\n//                           required\n//                           name=\"primaryemail\"\n//                           placeholder=\"email\"\n//                           // value={emp.primaryemail}\n//                           value={props.value9}\n//                           // onChange={handleinput}\n//                           onChange={props.onChange}\n//                         />\n//                       </Form.Group>\n//                     </Col>\n//                   </Row>\n\n//                   <Row>\n//                     <h5\n//                       className=\"py-2 \"\n//                       style={{ fontSize: \"22px\", padding: \"0px 19px\" }}\n//                     >\n//                       Secondary\n//                     </h5>\n//                     <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\n//                       <Form.Group\n//                         as={Col}\n//                         controlId=\"formGridcompanyemail\"\n//                         className=\"formmargin \"\n//                       >\n//                         <Form.Label>Phone</Form.Label>\n//                         <Form.Control\n//                           type=\"number\"\n//                           required\n//                           name=\"secondaryphone\"\n//                           placeholder=\"secondary phone\"\n//                           // value={emp.secondaryphone}\n//                           value={props.value10}\n//                           // onChange={handleinput}\n//                           onChange={props.onChange}\n//                         />\n//                       </Form.Group>\n//                     </Col>\n//                     <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\n//                       <Form.Group\n//                         as={Col}\n//                         controlId=\"formGridcompanyemail\"\n//                         className=\"formmargin \"\n//                       >\n//                         <Form.Label>Email</Form.Label>\n//                         <Form.Control\n//                           type=\"email\"\n//                           required\n//                           name=\"secondaryemail\"\n//                           placeholder=\"secondary Email\"\n//                           // value={emp.secondaryemail}\n//                           value={props.value11}\n//                           // onChange={handleinput}\n//                           onChange={props.onChange}\n//                         />\n//                       </Form.Group>\n//                     </Col>\n//                     </Row>\n//                     </div>\n//         </>\n//       );\n//     case 2:\n//       return (\n//         <>\n//          <div style={{height:'20%'}}>\n//             <Col lg={12}>\n//                   <Form.Group\n//                     as={Col}\n//                     controlId=\"formGridFirstName\"\n//                     className=\"formmargin\"\n//                   >\n//                     <Form.Label>Temporary Address</Form.Label>\n//                     <Form.Control\n//                       type=\"text\"\n//                       required\n//                       name=\"temporaryaddress\"\n//                       placeholder=\"complete address\"\n//                       // value={emp.temporaryaddress}\n//                       value={props.value12}\n//                       // onChange={handleinput}\n//                       onChange={props.onChange}\n//                       //   disabled={disableFields}\n//                     />\n//                   </Form.Group>\n//                 </Col>\n\n//                 <Col lg={12}>\n//                   <Form.Group\n//                     as={Col}\n//                     controlId=\"formGridFirstName\"\n//                     className=\"formmargin\"\n//                   >\n//                     <Form.Label>Permanent Address</Form.Label>\n//                     <Form.Control\n//                       type=\"text\"\n//                       required\n//                       name=\"permanentaddress\"\n//                       placeholder=\"complete address\"\n//                       // value={emp.permanentaddress}\n//                       value={props.value13}\n//                       // onChange={handleinput}\n//                       onChange={props.onChange}\n//                       //   disabled={disableFields}\n//                     />\n//                   </Form.Group>\n//                 </Col>\n//                 {/* </Row> */}\n//                 <div style={{marginLeft:'0.75%'}}>\n//                 <Row>\n//                   <Col>\n//                     <Form.Label style={{marginLeft:'2%'}}>City</Form.Label>\n//                     <Form.Group\n//                       as={Col}\n//                       controlId=\"formGridLastName\"\n//                       className=\"formmargin\"\n//                     >\n//                       <Form.Select\n//                         required\n//                         // onChange={handleinput}\n//                         onChange={props.onChange}\n//                         name=\"city\"\n//                         // value={emp.city}\n//                         value={props.value14}\n//                       >\n//                         <option value=\"\" selected hidden disabled>\n//                           Select City\n//                         </option>\n//                         {/* {cities.map((d, i) => {\n//                           return <option key={i}>{d}</option>;\n//                         })} */}\n//                       </Form.Select>\n//                     </Form.Group>\n//                   </Col>\n//                   <Col>\n//                     <Form.Label>Province</Form.Label>\n//                     <Form.Group\n//                       as={Col}\n//                       controlId=\"formGridLastName\"\n//                       className=\"formmargin\"\n//                     >\n//                       <Form.Select\n//                         required\n//                         name=\"province\"\n//                         placeholder=\"province\"\n//                         // value={emp.province}\n//                         value={props.value15}\n//                         // onChange={handleinput}\n//                         onChange={props.onChange}\n//                         //   disabled={disableFields}\n//                       >\n//                         <option value=\"\" selected hidden disabled>\n//                           Select Province\n//                         </option>\n//                         <option>Punjab</option>\n//                         <option>Sindh</option>\n//                         <option>KPK</option>\n//                         <option>Gilgit Baltistan</option>\n//                         <option>Islamabad(Capital Territory)</option>\n//                       </Form.Select>\n//                     </Form.Group>\n//                   </Col>\n//                   <Col>\n//                     <Form.Label>Country</Form.Label>\n//                     <Form.Group\n//                       as={Col}\n//                       controlId=\"formGridLastName\"\n//                       className=\"formmargin\"\n//                     >\n//                       {/* <ReactFlags\n//                         countries={[\"PK\"]}\n//                         selected={selected}\n//                         onSelect={(code) => {\n//                           setSelected(code);\n//                           code === \"PK\" && setcountry(\"Pakistan\");\n//                           setEmp({...emp,country:\"Pakistan\"})\n//                         }}\n//                       /> */}\n//                     </Form.Group>\n//                   </Col>\n//                 </Row>\n//                 <Row>\n//                   <Col lg={4} xl={4}>\n//                     <Form.Group\n//                       as={Col}\n//                       controlId=\"formGridLastName\"\n//                       className=\"formmargin\"\n//                     >\n//                       <Form.Label>Postal Code</Form.Label>\n//                       <Form.Control\n//                         type=\"text\"\n//                         required\n//                         name=\"postalCode\"\n//                         placeholder=\"postal code\"\n//                         // value={emp.postalCode}\n//                         value={props.value16}\n//                         // onChange={handleinput}\n//                         onChange={props.onChange}\n//                         //   disabled={disableFields}\n//                       />\n//                     </Form.Group>\n//                   </Col>\n//                 </Row>\n//                 </div>\n//                 </div>\n//         </>\n//       );\n//     case 3:\n//       return (\n//         <>\n//         <div style={{width:'85%',marginLeft:'4%',height:'20%'}}>\n//         <Row>\n//                   <Container>\n//                       <Row className=\"my-3\">\n\n//                       </Row>\n//                     </Container>\n//                   <div className=\"my-3 d-flex \">\n\n//                     <div className=\"d-flex justify-content-end\">\n//                       <Button className=\"btn ml-2\"\n//                         // onClick={()=>{props.onClick}}\n//                       >\n//                         Add Employement\n//                       </Button>\n//                     </div>\n//                   </div> \n//                   <Row className=\"my-3\">\n//                       <Table striped bordered hover className=\"ml-4\">\n//                           <thead>\n//                             <tr>\n//                               <th>#</th>\n//                               <th style={{textAlign:\"center\"}}>Company</th>\n//                               <th style={{textAlign:\"center\"}}>Position</th>\n//                               <th style={{textAlign:\"center\"}}>start Date</th>\n//                               <th style={{textAlign:\"center\"}}>Left Date</th>\n//                               <th style={{textAlign:\"center\"}}>duration</th>\n//                               <th style={{textAlign:\"center\"}}>Remove</th>\n//                             </tr>\n//                           </thead>\n//                           <tbody>\n//                             {/* {employement &&\n//                               employement.map((d, i) => {\n//                                 return (\n//                                   <>\n//                                     <tr key={i}>\n//                                       <th>{i+1}</th>\n//                                       <td>{d.company}</td>\n//                                       <td>{d.position}</td>\n//                                       <td>{d.joiningdate}</td>\n//                                       <td>{d.resignationdate}</td>\n//                                       <td>{d.duration}</td>\n//                                       <td><i class=\"fa fa-trash-can\" aria-hidden=\"true\" style={{color:'red'}} onClick={()=>removemployement(i)}></i></td>\n//                                     </tr>\n//                                   </>\n//                                 );\n//                               })} */}\n//                               {props.employement}\n//                           </tbody>\n//                         </Table>\n//                       </Row>\n\n//           </Row>\n//           </div>\n\n//         </>\n//       );\n//       case 4:{\n//         return (\n//         <div style={{height:'20%'}}>\n//           <Row>\n//         <Col>\n//                     <Form.Group\n//                       as={Col}\n//                       controlId=\"formGridLastName\"\n//                       className=\"formmargin\"\n//                     >\n//                       <Form.Label>Username</Form.Label>\n//                       <Form.Control\n//                         type=\"text\"\n//                         required\n//                         name=\"username\"\n//                         placeholder=\"username\"\n//                         // value={emp.username}\n//                         value={props.value21}\n//                         // onChange={handleinput}\n//                         onChange={props.onChange}\n//                         //   disabled={disableFields}\n//                       />\n//                     </Form.Group>\n//                   </Col>\n//                   <Col>\n//                     <Form.Group\n//                       as={Col}\n//                       controlId=\"formGridLastName\"\n//                       className=\"formmargin\"\n//                     >\n//                       <Form.Label>Password</Form.Label>\n//                       <Form.Control\n//                         type=\"password\"\n//                         required\n//                         name=\"password\"\n//                         placeholder=\"password\"\n//                         // value={emp.password}\n//                         value={props.value22}\n//                         // onChange={handleinput}\n//                         onChange={props.onChange}\n//                         //   disabled={disableFields}\n//                       />\n//                     </Form.Group>\n//                   </Col>\n//                   <Col>\n//                     <Form.Group\n//                       as={Col}\n//                       controlId=\"formGridFirstName\"\n//                       className=\"formmargin\"\n//                     >\n//                       <Form.Label>Joining Date</Form.Label>\n//                       <Form.Control\n//                         type=\"date\"\n//                         required\n//                         name=\"joiningdate\"\n//                         placeholder=\"joining date\"\n//                         // value={emp.joiningdate}\n//                         value={props.value19}\n//                         // onChange={handleinput}\n//                         onChange={props.onChange}\n//                         //   disabled={disableFields}\n//                       />\n//                     </Form.Group>\n//                   </Col>\n//                 </Row>\n//                 <Row>\n//                   <Col>\n//                     <Form.Group\n//                       as={Col}\n//                       controlId=\"formGridLastName\"\n//                       className=\"formmargin\"\n//                     >\n//                       <Form.Label>Salary</Form.Label>\n//                       <Form.Control\n//                         type=\"Number\"\n//                         required\n//                         name=\"currentSalary\"\n//                         placeholder=\"salary\"\n//                         // value={emp.currentSalary}\n//                         value={props.value23}\n//                         // onChange={handleinput}\n//                         onChange={props.onChange}\n//                         //   disabled={disableFields}\n//                       />\n//                     </Form.Group>\n//                   </Col>\n//                   <Col>\n//                     <Form.Group\n//                       as={Col}\n//                       controlId=\"formGridLastName\"\n//                       className=\"formmargin\"\n//                     >\n//                       <Form.Label>Designation</Form.Label>\n//                       <Form.Control\n//                         type=\"text\"\n//                         required\n//                         name=\"designation\"\n//                         placeholder=\"designation..\"\n//                         // value={emp.terminationreason}\n//                         value={props.value20}\n//                         // onChange={handleinput}\n//                         onChange={props.onChange}\n//                         //   disabled={disableFields}\n//                       />\n//                     </Form.Group>\n//                   </Col>\n//                   <Col>\n//                     <Form.Group\n//                       as={Col}\n//                       controlId=\"formGridFirstName\"\n//                       className=\"formmargin\"\n//                     >\n//                       <Form.Label>Payment Mode</Form.Label>\n//                       <Form.Select\n//                         required\n//                         name=\"paymentmode\"\n//                         // value={emp.paymentmode}\n//                         value={props.value25}\n//                         // onChange={handleinput}\n//                         onChange={props.onChange}\n//                         //   disabled={disableFields}\n//                       >\n//                         <option value=\"\" selected hidden disabled>\n//                           Please Select\n//                         </option>\n//                         <option>Cheque</option>\n//                         <option>Cash</option>\n//                         <option>Bank Transfer</option>\n//                       </Form.Select>\n//                     </Form.Group>\n//                   </Col>\n//                 </Row>\n//                 <Row>\n//                   <Col lg={4}>\n//                     <Form.Group\n//                       as={Col}\n//                       controlId=\"formGriddepartments\"\n//                       className=\"formmargin\"\n//                     >\n//                       <Form.Label>Department</Form.Label>\n//                       <Form.Select                 name=\"departments\">\n//                         {/* onChange={handleinput} */}\n//                         onChange={props.onChange}\n//                         <option disabled selected defaultValue={\"\"}>\n//                           Select department..\n//                         </option>\n//                         {/* {dep.map((d) => {\n//                           return (\n//                             <>\n//                               <option key={d._id} value={d._id}>\n//                                 {d.departmentname}\n//                               </option>\n//                             </>\n//                           );\n//                         })} */}\n//                       </Form.Select>\n//                     </Form.Group>\n//                   </Col>\n//                   <Col xl='4'>\n//                   <Form.Group\n//                       as={Col}\n//                       controlId=\"formGriddepartments\"\n//                       className=\"formmargin\"\n//                     >\n//                       <Form.Label>Employement Status</Form.Label>\n//                       <Form.Select\n//                       //  onChange={handleinput} \n//                       onChange={props.onChange}\n//                        name=\"employementstatus\" \n//                       //  value={emp.employementstatus}\n//                       value={props.value41}\n//                        >\n//                         <option defaultValue={\"\"} disbaled selected hidden>Select Please</option>\n//                         <option>Intern</option>\n//                         <option>Probation</option>\n//                         <option>Permanent</option>\n//                         <option>Left</option>\n//                       </Form.Select>\n//                     </Form.Group>\n//                   </Col>\n//                   </Row>\n//         </div>\n\n//         )\n//       };\n//       case 5:{\n//         return(\n//           <div style={{height:'20%'}}>\n//             <Row>\n//             <Col>\n//                     <Form.Group\n//                       as={Col}\n//                       controlId=\"formGridLastName\"\n//                       className=\"formmargin\"\n//                     >\n//                       <Form.Label>Bank Name</Form.Label>\n//                       <Form.Select\n\n//                         required\n//                         name=\"bankname\"\n//                         placeholder=\"bank name..\"\n//                         // value={emp.bankname}\n//                         // onChange={handleinput}\n//                         //   disabled={disableFields}\n//                       >\n//                         <option>Please Select</option>\n//                         <option>MCB Limited</option>\n//                         <option>Bank Islami Limited</option>\n//                         <option>Allied Bank Limited</option>\n//                         <option>Bank Al-Habib Limited</option>\n//                         <option>Faysal Bank Limited</option>\n//                         <option>Mezaan Bank Limited</option>\n//                         <option>National Bank of Pakistan</option>\n//                         <option>MCB Islamic Limited</option>\n//                         <option>HBL</option>\n//                         <option>UBL</option>\n//                         <option>Askari Bank </option>\n//                       </Form.Select>\n//                     </Form.Group>\n//                   </Col>\n//                   <Col>\n//                     <Form.Group\n//                       as={Col}\n//                       controlId=\"formGridLastName\"\n//                       className=\"formmargin\"\n//                     >\n//                       <Form.Label>Account Title</Form.Label>\n//                       <Form.Control\n//                         type=\"text\"\n//                         required\n//                         name=\"accounttitle\"\n//                         placeholder=\"account title..\"\n//                         // value={emp.accounttitle}\n//                         value={props.value27}\n//                         // onChange={handleinput}\n//                         onChange={props.onChange}\n//                         //   disabled={disableFields}\n//                       />\n//                     </Form.Group>\n//                   </Col>\n//                   <Col>\n//                     <Form.Group\n//                       as={Col}\n//                       controlId=\"formGridLastName\"\n//                       className=\"formmargin\"\n//                     >\n//                       <Form.Label>Account No</Form.Label>\n//                       <Form.Control\n//                         type=\"text\"\n//                         required\n//                         name=\"accountno\"\n//                         placeholder=\"account no..\"\n//                         // value={emp.accountno}\n//                         value={props.value28}\n//                         // onChange={handleinput}\n//                         onChange={props.onChange}\n//                         //   disabled={disableFields}\n//                       />\n//                     </Form.Group>\n//                   </Col>\n//                 </Row>\n//                 <Row className=\"p-0\">\n//                   <Col xxl={4}>\n//                     <Form.Group\n//                       as={Col}\n//                       controlId=\"formGridLastName\"\n//                       className=\"formmargin\"\n//                     >\n//                       <Form.Label> IBAN</Form.Label>\n//                       <Form.Control\n//                         type=\"text\"\n//                         required\n//                         name=\"IBAN\"\n//                         placeholder=\"iban..\"\n//                         // value={emp.IBAN}\n//                         value={props.value29}\n//                         // onChange={handleinput}\n//                         onChange={props.onChange}\n//                         //  disabled={disableFields}\n//                       />\n//                     </Form.Group>\n//                   </Col>\n\n//                   <Col xxl={4}>\n//                     <Form.Group\n//                       as={Col}\n//                       controlId=\"formGridLastName\"\n//                       className=\"formmargin\"\n//                     >\n//                       <Form.Label>Branch code</Form.Label>\n//                       <Form.Control\n//                         type=\"text\"\n//                         required\n//                         name=\"branchcode\"\n//                         placeholder=\"branch code..\"\n//                         // value={emp.branchcode}\n//                         value={props.value30}\n//                         // onChange={handleinput}\n//                         onChange={props.onChange}\n//                         //  disabled={disableFields}\n//                       />\n//                     </Form.Group>\n//                   </Col>\n//                 </Row>\n//           </div>\n//         )\n//       }\n//     default:\n//       return \"unknown step\";\n//   }\n// }\n\n// const EmployeeData = (props) => {\n\n//   console.log(\"props\", props)\n\n//   const classes = useStyles();\n//   const [activeStep, setActiveStep] = useState(0);\n//   const [skippedSteps, setSkippedSteps] = useState([]);\n//   const steps = getSteps();\n\n//   const isStepOptional = (step) => {\n//     return step === 1 || step === 2;\n//   };\n\n//   const isStepSkipped = (step) => {\n//     return skippedSteps.includes(step);\n//   };\n\n//   const handleNext = () => {\n//     setActiveStep(activeStep + 1);\n//     setSkippedSteps(skippedSteps.filter((skipItem) => skipItem !== activeStep));\n//   };\n\n//   const handleBack = () => {\n//     setActiveStep(activeStep - 1);\n//   };\n\n//   const handleSkip = () => {\n//     if (!isStepSkipped(activeStep)) {\n//       setSkippedSteps([...skippedSteps, activeStep]);\n//     }\n//     setActiveStep(activeStep + 1);\n//   };\n\n//   return (\n\n//     <div className=\"content-wrapper \">\n\n//     <div className=\"col\">\n//                 <h3 className=\"page-title\">Add Employees</h3>\n//                 <ul\n//                   className=\"breadcrumb\"\n//                   style={{ backgroundColor: \"#f7f7f7\" }}\n//                 >\n//                   <li className=\"breadcrumb-item\">\n//                     <Link to=\"/\" style={{ color: \"#1f1f1f\" }}>\n//                       Dashboard\n//                     </Link>\n//                   </li>\n//                   <li className=\"breadcrumb-item active\">Add Employee</li>\n//                 </ul>\n\n//               </div>\n//               <div className=\" d-flex justify-content-center \" style={{marginTop:'5%'}}>\n//     <Card style={{height:\"40%\"}}>\n//       <div style={{height:'40%'}}>\n//       <Card.Body >\n//     <div style={{display:'flex',justifyContent:'center'}}>\n//     <div>\n//       <Stepper alternativeLabel activeStep={activeStep}>\n//         {steps.map((step, index) => {\n//           const labelProps = {};\n//           const stepProps = {};\n//           // if (isStepOptional(index)) {\n//           //   labelProps.optional = (\n//           //     <Typography\n//           //       variant=\"caption\"\n//           //       align=\"center\"\n//           //       style={{ display: \"block\" }}\n//           //     >\n//           //       optional\n//           //     </Typography>\n//           //   );\n//           // }\n//           if (isStepSkipped(index)) {\n//             stepProps.completed = false;\n//           }\n//           return (\n//             <Step {...stepProps} key={index}>\n//               <StepLabel {...labelProps}>{step}</StepLabel>\n//             </Step>\n//           );\n//         })}\n//       </Stepper>\n\n//       {activeStep === steps.length ? (\n//         <Typography variant=\"h3\" align=\"center\">\n//           Thank You\n//         </Typography>\n//       ) : (\n//         <>\n//           <form>{getStepContent({props, activeStep})}</form>\n//           <Button\n//             className={classes.button}\n//             disabled={activeStep === 0}\n//             onClick={handleBack}\n//           >\n//             back\n//           </Button>\n//           {/* {isStepOptional(activeStep) && (\n//             <Button\n//               className={classes.button}\n//               variant=\"contained\"\n//               color=\"primary\"\n//               onClick={handleSkip}\n//             >\n//               skip\n//             </Button>\n//           )} */}\n//           <Button\n//             className={classes.button}\n//             variant=\"contained\"\n//             color=\"primary\"\n//             onClick={handleNext}\n//             type=\"submit\"\n//            >\n//             {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n//           </Button>\n//         </>\n//       )}\n//     </div>\n//     </div>\n//     </Card.Body>\n//     </div>\n//     </Card>\n//     </div>\n//     </div>\n//   );\n// };\n\n// export default EmployeeData;\n\nimport React, { useState, useEffect } from \"react\";\nimport { Typography, TextField, Button, Stepper, Step, StepLabel } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Modal, Form, Col, Row, Container, FormGroup } from \"react-bootstrap\";\nimport Table from \"react-bootstrap/Table\";\nimport Card from 'react-bootstrap/Card';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-notifications/lib/notifications.css\";\nimport axios from \"axios\";\n// import Table from \"react-bootstrap/Table\";\nimport { Link } from 'react-router-dom';\nimport { NotificationContainer, NotificationManager } from \"react-notifications\";\nimport ViewListIcon from \"@mui/icons-material/ViewList\";\nimport ViewModuleIcon from \"@mui/icons-material/ViewModule\";\nimport ToggleButton from \"@mui/material/ToggleButton\";\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\nimport TableView from \"../TableView/Table\";\nimport { useNavigate } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\nimport ReactFlags from \"react-flags-select\";\nimport { cities } from \"./cities\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    button: {\n      marginRight: theme.spacing(1)\n    }\n  };\n});\nvar moment = require(\"moment\");\nfunction getSteps() {\n  return [\"Personal Information\", \"Address & Region\", \"Education Information\", \"Previous Information\", \"Employement Details\", \"Bank Details\"];\n}\nfunction getStepContent(_ref) {\n  var _this = this;\n  var props = _ref.props,\n    activeStep = _ref.activeStep;\n  var navigate = useNavigate();\n  var url2 = \"/departments\";\n  var url = \"/employees\";\n  var url1 = \"/auth/register\";\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    dep = _useState2[0],\n    setDep = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    datas = _useState4[0],\n    setData = _useState4[1]; // const [modalShow, setModalShow] = React.useState(false);\n  var handleClose = function handleClose() {\n    return setShow(false);\n  };\n  var Closechildmodal = function Closechildmodal() {\n    return setShowChildModel(false);\n  };\n  var Closechildmodal1 = function Closechildmodal1() {\n    return setShowChildModel1(false);\n  };\n  var showChildModel = function showChildModel() {\n    return setShowChildModel(true);\n  };\n  var showChildModel1 = function showChildModel1() {\n    return setShowChildModel1(true);\n  };\n  var handleShow = function handleShow() {\n    return setShow(true);\n  };\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    childModel = _useState6[0],\n    setShowChildModel = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    childModel1 = _useState8[0],\n    setShowChildModel1 = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    show = _useState10[0],\n    setShow = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    birth = _useState12[0],\n    setbirth = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    testUpdate = _useState14[0],\n    setTestUpdate = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    list = _useState16[0],\n    setlist = _useState16[1]; //for profile pic\n  var _useState17 = useState(),\n    _useState18 = _slicedToArray(_useState17, 2),\n    file = _useState18[0],\n    setfile = _useState18[1]; //Employee Add\n  var _useState19 = useState({\n      profilepic: \"\",\n      firstname: \"\",\n      lastname: \"\",\n      dob: \"\",\n      cnic: \"\",\n      gender: \"\",\n      martialStatus: \"\",\n      religion: \"\",\n      jobtitle: \"\",\n      username: \"\",\n      primaryemail: \"\",\n      secondaryemail: \"\",\n      password: \"\",\n      primaryphone: \"\",\n      secondaryphone: \"\",\n      permanentaddress: \"\",\n      temporaryaddress: \"\",\n      province: \"\",\n      city: \"\",\n      postalCode: \"\",\n      departments: \"\",\n      designation: \"\",\n      joiningdate: \"\",\n      educationdetails: \"\",\n      employementhistory: \"\",\n      currentSalary: \"\",\n      employementstatus: \"\",\n      //bank information\n      bankname: \"\",\n      paymentmode: \"\",\n      accounttitle: \"\",\n      accountno: \"\",\n      IBAN: \"\",\n      branchcode: \"\",\n      country: \"\"\n      //degree info\n    }),\n    _useState20 = _slicedToArray(_useState19, 2),\n    emp = _useState20[0],\n    setEmp = _useState20[1]; //educaion details add and remove //\n  var _useState21 = useState([]),\n    _useState22 = _slicedToArray(_useState21, 2),\n    education = _useState22[0],\n    seteducation = _useState22[1];\n  var _useState23 = useState(\"\"),\n    _useState24 = _slicedToArray(_useState23, 2),\n    selected = _useState24[0],\n    setSelected = _useState24[1];\n  var _useState25 = useState(\"\"),\n    _useState26 = _slicedToArray(_useState25, 2),\n    country = _useState26[0],\n    setcountry = _useState26[1];\n  var _useState27 = useState([]),\n    _useState28 = _slicedToArray(_useState27, 2),\n    employement = _useState28[0],\n    setemployement = _useState28[1];\n  var _useState29 = useState({\n      company: \"\",\n      position: \"\",\n      joiningdate: \"\",\n      resignationdate: \"\",\n      duration: \"\",\n      jobdescription: \"\"\n    }),\n    _useState30 = _slicedToArray(_useState29, 2),\n    empdetails = _useState30[0],\n    setempdetails = _useState30[1];\n  var _useState31 = useState({\n      degreetitle: \"\",\n      institute: \"\",\n      start: \"\",\n      end: \"\",\n      status: \"\"\n    }),\n    _useState32 = _slicedToArray(_useState31, 2),\n    details = _useState32[0],\n    setdetails = _useState32[1];\n  var removeitem = function removeitem(i) {\n    var temp = education;\n    temp.splice(i, 1);\n    console.log(\"splice\", temp);\n    seteducation(temp);\n    setTestUpdate(!testUpdate);\n  };\n  var removemployement = function removemployement(i) {\n    var temp = employement;\n    employement.splice(i, 1);\n    console.log(\"splice\", temp);\n    setemployement(temp);\n    setTestUpdate(!testUpdate);\n  };\n  var addhistory = function addhistory() {\n    var empl = employement;\n    empl.push({\n      company: empdetails.company,\n      position: empdetails.position,\n      joiningdate: empdetails.joiningdate,\n      resignationdate: empdetails.resignationdate,\n      duration: empdetails.duration,\n      jobdescription: empdetails.jobdescription\n    });\n    console.log(\"emplllllllll\", empl);\n    setemployement(empl);\n    setEmp(_objectSpread({}, emp, {\n      employementhistory: empl\n    }));\n  };\n  var name, value;\n  var handleinput = function handleinput(e) {\n    console.log(e);\n    name = e.target.name;\n    value = e.target.value;\n    setEmp(_objectSpread({}, emp, _defineProperty({}, name, value)));\n  };\n  var handleeducationdetails = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(e) {\n      var name, value;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              name = e.target.name;\n              value = e.target.value;\n              _context.next = 4;\n              return setdetails(_objectSpread({}, details, _defineProperty({}, name, value)));\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function handleeducationdetails(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  //handle user input form data\n\n  var handleempinput = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(e) {\n      var name, value;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              name = e.target.name;\n              value = e.target.value;\n              _context2.next = 4;\n              return setempdetails(_objectSpread({}, empdetails, _defineProperty({}, name, value)));\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return function handleempinput(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var addeducation = function addeducation() {\n    var temp = education;\n    temp.push({\n      degreetitle: details.degreetitle,\n      institute: details.institute,\n      start: details.start,\n      end: details.end,\n      status: details.status\n    });\n    seteducation(temp);\n    setEmp(_objectSpread({}, emp, {\n      educationdetails: education\n    }));\n  };\n  var handleempinputJoiningDate = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(e) {\n      var _objectSpread5;\n      var name, value, a, b, years, months, days;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              name = e.target.name;\n              value = e.target.value;\n              console.log(\"change\", empdetails);\n              a = moment(empdetails.resignationdate);\n              b = moment(e.target.value);\n              years = a.diff(b, \"year\");\n              b.add(years, \"years\");\n              months = a.diff(b, \"months\");\n              b.add(months, \"months\");\n              days = a.diff(b, \"days\");\n              console.log(years + \" years \" + months + \" months \" + days + \" days\");\n              _context3.next = 13;\n              return setempdetails(_objectSpread({}, empdetails, (_objectSpread5 = {}, _defineProperty(_objectSpread5, name, e.target.value), _defineProperty(_objectSpread5, \"duration\", \"\".concat(years, \"  years  \").concat(months, \"  months  \").concat(days, \" days\")), _objectSpread5)));\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return function handleempinputJoiningDate(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleempinputResignationDate = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(e) {\n      var _objectSpread6;\n      var name, value, a, b, years, months, days;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              name = e.target.name;\n              value = e.target.value;\n              a = moment(e.target.value);\n              b = moment(empdetails.joiningdate);\n              years = a.diff(b, \"year\");\n              b.add(years, \"years\");\n              months = a.diff(b, \"months\");\n              b.add(months, \"months\");\n              days = a.diff(b, \"days\");\n              console.log(years + \" years \" + months + \" months \" + days + \" days\");\n              _context4.next = 12;\n              return setempdetails(_objectSpread({}, empdetails, (_objectSpread6 = {}, _defineProperty(_objectSpread6, name, e.target.value), _defineProperty(_objectSpread6, \"duration\", \"\".concat(years, \"  years  \").concat(months, \"  months  \").concat(days, \" days\")), _objectSpread6)));\n            case 12:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    return function handleempinputResignationDate(_x4) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  ///education & employement details code end;\n\n  //list and grid view start\n  var _useState33 = useState(false),\n    _useState34 = _slicedToArray(_useState33, 2),\n    view = _useState34[0],\n    setView = _useState34[1];\n  var handleChange = function handleChange(event, nextView) {\n    setView(!view);\n    setView(nextView);\n    setView(!view);\n    // setlist(nextView)\n    console.log(nextView);\n  };\n  //   const handleChange = () => {\n  //     setlist(!list)\n  //   };\n  //submitting values of user\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(e) {\n      var data, filename, res;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              e.preventDefault();\n              if (!file) {\n                _context5.next = 16;\n                break;\n              }\n              data = new FormData();\n              filename = Date.now() + file.name;\n              data.append(\"name\", filename);\n              data.append(\"file\", file);\n              emp.profilepic = filename;\n              _context5.prev = 7;\n              _context5.next = 10;\n              return axios.post(\"/upload\", data);\n            case 10:\n              _context5.next = 16;\n              break;\n            case 12:\n              _context5.prev = 12;\n              _context5.t0 = _context5[\"catch\"](7);\n              console.log(_context5.t0);\n              NotificationManager.error(\"Pic not Uploaded\");\n            case 16:\n              _context5.prev = 16;\n              _context5.next = 19;\n              return axios.post(url1, emp);\n            case 19:\n              res = _context5.sent;\n              console.log(res);\n              res && NotificationManager.success(\"Sucessfully Added Employee\");\n              // res && window.location.replace(\"/employees\");\n              _context5.next = 28;\n              break;\n            case 24:\n              _context5.prev = 24;\n              _context5.t1 = _context5[\"catch\"](16);\n              console.log(_context5.t1);\n              NotificationManager.error(\"Something went wrong \");\n            case 28:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[7, 12], [16, 24]]);\n    }));\n    return function handleSubmit(_x5) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  //fetching employees data\n  var fetchData = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n      var res, data;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return axios.get(url);\n            case 3:\n              res = _context6.sent;\n              console.log(res.data);\n              data = res.data.employees;\n              setData(data);\n              _context6.next = 13;\n              break;\n            case 9:\n              _context6.prev = 9;\n              _context6.t0 = _context6[\"catch\"](0);\n              console.log(_context6.t0);\n              NotificationManager.error(\"Api Error 404\");\n            case 13:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 9]]);\n    }));\n    return function fetchData() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  //getting Employees\n  var getEmp = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n      var res, _datas;\n      return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return axios.get(url2);\n            case 3:\n              res = _context7.sent;\n              _datas = res.data.departments;\n              console.log(\"departments\", _datas);\n              setDep(_datas);\n              _context7.next = 12;\n              break;\n            case 9:\n              _context7.prev = 9;\n              _context7.t0 = _context7[\"catch\"](0);\n              console.log(_context7.t0);\n            case 12:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[0, 9]]);\n    }));\n    return function getEmp() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    fetchData();\n    getEmp();\n  }, []);\n  var PF = \"http://localhost:5002/images/\";\n  console.log('propss', props);\n  var step = activeStep;\n  switch (step) {\n    case 0:\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"w-75\",\n        id: \"responsivewidth\",\n        style: {\n          width: '60%',\n          height: '40%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1435,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1436,\n          columnNumber: 20\n        }\n      }, \"                     \", /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1436,\n          columnNumber: 46\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xxl: \"6\",\n        xl: \"6\",\n        lg: \"6\",\n        md: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1437,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridFirstName\",\n        className: \"formmargin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1438,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1443,\n          columnNumber: 27\n        }\n      }, \"First Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        required: true,\n        name: \"firstname\",\n        placeholder: \"First Name\",\n        value: emp.firstname\n        // value={props.value}\n        ,\n        onChange: handleinput\n        // onChange={props.onChange}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1444,\n          columnNumber: 27\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        xxl: \"6\",\n        xl: \"6\",\n        lg: \"6\",\n        md: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1456,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridLastName\",\n        className: \"formmargin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1457,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1462,\n          columnNumber: 27\n        }\n      }, \"Last Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        required: true,\n        name: \"lastname\",\n        placeholder: \"Last Name\",\n        value: emp.lastname\n        // value={props.value1}\n        ,\n        onChange: handleinput\n        // onChange={props.onChange}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1463,\n          columnNumber: 27\n        }\n      })))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1476,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xxl: \"6\",\n        xl: \"6\",\n        lg: \"6\",\n        md: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1477,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridgender\",\n        className: \"formmargin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1478,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1483,\n          columnNumber: 27\n        }\n      }, \"Gender\"), /*#__PURE__*/React.createElement(Form.Select, {\n        required: true,\n        name: \"gender\",\n        value: emp.gender\n        // value={props.value2}\n        ,\n        onChange: handleinput\n        // onChange={props.onChange}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1484,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        selected: true,\n        hidden: true,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1492,\n          columnNumber: 29\n        }\n      }, \"Please Select\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1495,\n          columnNumber: 29\n        }\n      }, \"Male\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1496,\n          columnNumber: 29\n        }\n      }, \"Female\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1497,\n          columnNumber: 29\n        }\n      }, \"Other\")))), /*#__PURE__*/React.createElement(Col, {\n        xl: \"6\",\n        lg: \"6\",\n        md: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1501,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridFirstName\",\n        className: \"formmargin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1502,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1507,\n          columnNumber: 27\n        }\n      }, \"National ID \"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"number\",\n        required: true,\n        name: \"cnic\",\n        placeholder: \"CNIC\",\n        value: emp.cnic\n        // value={props.value3}\n        ,\n        onChange: handleinput\n        // onChange={props.onChange}\n        //   disabled={disableFields}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1508,\n          columnNumber: 27\n        }\n      })))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1522,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xxl: \"6\",\n        xl: \"6\",\n        lg: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1523,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridLastName\",\n        className: \"formmargin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1524,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1529,\n          columnNumber: 27\n        }\n      }, \"D-0-B\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"date\",\n        required: true,\n        placeholder: \"dd/mm/yyyy\",\n        name: \"dob\",\n        value: emp.dob\n        // value={props.value4}\n        ,\n        onChange: handleinput\n        // onChange={props.onChange}\n        //   disabled={disableFields}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1539,\n          columnNumber: 27\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        xl: \"6\",\n        lg: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1553,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridMartialStatus\",\n        className: \"formmargin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1554,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1559,\n          columnNumber: 27\n        }\n      }, \"Martial Status\"), /*#__PURE__*/React.createElement(Form.Select, {\n        required: true,\n        name: \"martialStatus\",\n        placeholder: \"martial status..\",\n        value: emp.martialStatus\n        // value={props.value5}\n        ,\n        onChange: handleinput\n        // onChange={props.onChange}\n        //   disabled={disableFields}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1560,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        selected: true,\n        hidden: true,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1570,\n          columnNumber: 29\n        }\n      }, \"Please Select\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1573,\n          columnNumber: 29\n        }\n      }, \"Single\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1574,\n          columnNumber: 29\n        }\n      }, \"Married\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1575,\n          columnNumber: 29\n        }\n      }, \"Divorced\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1576,\n          columnNumber: 29\n        }\n      }, \"widow\")))), /*#__PURE__*/React.createElement(Col, {\n        xl: \"6\",\n        lg: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1580,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridLastName\",\n        className: \"formmargin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1581,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1586,\n          columnNumber: 27\n        }\n      }, \"Religion\"), /*#__PURE__*/React.createElement(Form.Select, {\n        required: true,\n        name: \"religion\",\n        placeholder: \"Religion\",\n        value: emp.religion\n        // value={props.value6}\n        ,\n        onChange: handleinput\n        // onChange={props.onChange}\n        //   disabled={disableFields}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1587,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        selected: true,\n        hidden: true,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1597,\n          columnNumber: 29\n        }\n      }, \"Please Select\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1600,\n          columnNumber: 29\n        }\n      }, \"Islam\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1601,\n          columnNumber: 29\n        }\n      }, \"Christianity\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1602,\n          columnNumber: 29\n        }\n      }, \"Buddhism\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1603,\n          columnNumber: 29\n        }\n      }, \" Sikhism\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1604,\n          columnNumber: 29\n        }\n      }, \" Hinduism\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1605,\n          columnNumber: 29\n        }\n      }, \"Bah\\xE1\\u2019\\xED\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1606,\n          columnNumber: 29\n        }\n      }, \"Confucianism\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1607,\n          columnNumber: 29\n        }\n      }, \"Jainism\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1608,\n          columnNumber: 29\n        }\n      }, \"Judaism\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1609,\n          columnNumber: 29\n        }\n      }, \"Zoroastrianism\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1610,\n          columnNumber: 29\n        }\n      }, \"Druze\"))))))));\n    case 1:\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: '20%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1628,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1629,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"py-2 \",\n        style: {\n          fontSize: \"22px\",\n          padding: \"0px 19px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1630,\n          columnNumber: 22\n        }\n      }, \"Primary\"), /*#__PURE__*/React.createElement(Col, {\n        xxl: \"6\",\n        xl: \"6\",\n        lg: \"6\",\n        md: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1636,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridphone\",\n        className: \"formmargin \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1637,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1642,\n          columnNumber: 25\n        }\n      }, \"Phone\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"number\",\n        required: true,\n        name: \"primaryphone\",\n        placeholder: \"phone\",\n        value: emp.primaryphone\n        // value={props.value8}\n        ,\n        onChange: handleinput\n        // onChange={props.onChange}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1643,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        xxl: \"6\",\n        xl: \"6\",\n        lg: \"6\",\n        md: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1655,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridcompanyemail\",\n        className: \"formmargin \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1656,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1661,\n          columnNumber: 25\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"email\",\n        required: true,\n        name: \"primaryemail\",\n        placeholder: \"email\",\n        value: emp.primaryemail\n        // value={props.value9}\n        ,\n        onChange: handleinput\n        // onChange={props.onChange}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1662,\n          columnNumber: 25\n        }\n      })))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1676,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"py-2 \",\n        style: {\n          fontSize: \"22px\",\n          padding: \"0px 19px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1677,\n          columnNumber: 21\n        }\n      }, \"Secondary\"), /*#__PURE__*/React.createElement(Col, {\n        xxl: \"6\",\n        xl: \"6\",\n        lg: \"6\",\n        md: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1683,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridcompanyemail\",\n        className: \"formmargin \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1684,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1689,\n          columnNumber: 25\n        }\n      }, \"Phone\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"number\",\n        required: true,\n        name: \"secondaryphone\",\n        placeholder: \"secondary phone\",\n        value: emp.secondaryphone\n        // value={props.value10}\n        ,\n        onChange: handleinput\n        // onChange={props.onChange}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1690,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        xxl: \"6\",\n        xl: \"6\",\n        lg: \"6\",\n        md: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1702,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridcompanyemail\",\n        className: \"formmargin \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1703,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1708,\n          columnNumber: 25\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"email\",\n        required: true,\n        name: \"secondaryemail\",\n        placeholder: \"secondary Email\",\n        value: emp.secondaryemail\n        // value={props.value11}\n        ,\n        onChange: handleinput\n        // onChange={props.onChange}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1709,\n          columnNumber: 25\n        }\n      }))))));\n    case 2:\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: '20%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1728,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        lg: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1729,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridFirstName\",\n        className: \"formmargin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1730,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1735,\n          columnNumber: 21\n        }\n      }, \"Temporary Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        required: true,\n        name: \"temporaryaddress\",\n        placeholder: \"complete address\",\n        value: emp.temporaryaddress\n        // value={props.value12}\n        ,\n        onChange: handleinput\n        // onChange={props.onChange}\n        //   disabled={disableFields}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1736,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        lg: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1750,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridFirstName\",\n        className: \"formmargin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1751,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1756,\n          columnNumber: 21\n        }\n      }, \"Permanent Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        required: true,\n        name: \"permanentaddress\",\n        placeholder: \"complete address\",\n        value: emp.permanentaddress\n        // value={props.value13}\n        ,\n        onChange: handleinput\n        // onChange={props.onChange}\n        //   disabled={disableFields}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1757,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginLeft: '0.75%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1771,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1772,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1773,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        style: {\n          marginLeft: '2%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1774,\n          columnNumber: 21\n        }\n      }, \"City\"), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridLastName\",\n        className: \"formmargin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1775,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Select, {\n        required: true,\n        onChange: handleinput\n        // onChange={props.onChange}\n        ,\n        name: \"city\",\n        value: emp.city\n        // value={props.value14}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1780,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        selected: true,\n        hidden: true,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1788,\n          columnNumber: 25\n        }\n      }, \"Select City\")))), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1795,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1796,\n          columnNumber: 21\n        }\n      }, \"Province\"), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridLastName\",\n        className: \"formmargin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1797,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Select, {\n        required: true,\n        name: \"province\",\n        placeholder: \"province\",\n        value: emp.province\n        // value={props.value15}\n        ,\n        onChange: handleinput\n        // onChange={props.onChange}\n        //   disabled={disableFields}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1802,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        selected: true,\n        hidden: true,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1812,\n          columnNumber: 25\n        }\n      }, \"Select Province\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1815,\n          columnNumber: 25\n        }\n      }, \"Punjab\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1816,\n          columnNumber: 25\n        }\n      }, \"Sindh\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1817,\n          columnNumber: 25\n        }\n      }, \"KPK\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1818,\n          columnNumber: 25\n        }\n      }, \"Gilgit Baltistan\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1819,\n          columnNumber: 25\n        }\n      }, \"Islamabad(Capital Territory)\")))), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1823,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1824,\n          columnNumber: 21\n        }\n      }, \"Country\"), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridLastName\",\n        className: \"formmargin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1825,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ReactFlags, {\n        countries: [\"PK\"],\n        selected: selected,\n        onSelect: function onSelect(code) {\n          setSelected(code);\n          code === \"PK\" && setcountry(\"Pakistan\");\n          setEmp(_objectSpread({}, emp, {\n            country: \"Pakistan\"\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1830,\n          columnNumber: 23\n        }\n      })))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1842,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        lg: 4,\n        xl: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1843,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridLastName\",\n        className: \"formmargin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1844,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1849,\n          columnNumber: 23\n        }\n      }, \"Postal Code\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        required: true,\n        name: \"postalCode\",\n        placeholder: \"postal code\",\n        value: emp.postalCode\n        // value={props.value16}\n        ,\n        onChange: handleinput\n        // onChange={props.onChange}\n        //   disabled={disableFields}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1850,\n          columnNumber: 23\n        }\n      })))))));\n    case 3:\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: '85%',\n          marginLeft: '4%',\n          height: '20%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1871,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1872,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1873,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"my-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1874,\n          columnNumber: 24\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"my-3 d-flex \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1878,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1881,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn ml-2\"\n        // onClick={()=>{props.onClick}}\n        ,\n        onClick: function onClick() {\n          setShowChildModel1(true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1882,\n          columnNumber: 24\n        }\n      }, \"Add Employement\"))), /*#__PURE__*/React.createElement(Row, {\n        className: \"my-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1892,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        className: \"ml-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1893,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1894,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1895,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1896,\n          columnNumber: 31\n        }\n      }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1897,\n          columnNumber: 31\n        }\n      }, \"Company\"), /*#__PURE__*/React.createElement(\"th\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1898,\n          columnNumber: 31\n        }\n      }, \"Position\"), /*#__PURE__*/React.createElement(\"th\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1899,\n          columnNumber: 31\n        }\n      }, \"start Date\"), /*#__PURE__*/React.createElement(\"th\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1900,\n          columnNumber: 31\n        }\n      }, \"Left Date\"), /*#__PURE__*/React.createElement(\"th\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1901,\n          columnNumber: 31\n        }\n      }, \"duration\"), /*#__PURE__*/React.createElement(\"th\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1902,\n          columnNumber: 31\n        }\n      }, \"Remove\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1905,\n          columnNumber: 27\n        }\n      }, employement && employement.map(function (d, i) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"tr\", {\n          key: i,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1910,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"th\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1911,\n            columnNumber: 39\n          }\n        }, i + 1), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1912,\n            columnNumber: 39\n          }\n        }, d.company), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1913,\n            columnNumber: 39\n          }\n        }, d.position), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1914,\n            columnNumber: 39\n          }\n        }, d.joiningdate), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1915,\n            columnNumber: 39\n          }\n        }, d.resignationdate), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1916,\n            columnNumber: 39\n          }\n        }, d.duration), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1917,\n            columnNumber: 39\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-trash-can\",\n          \"aria-hidden\": \"true\",\n          style: {\n            color: 'red'\n          },\n          onClick: function onClick() {\n            return removemployement(i);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1917,\n            columnNumber: 43\n          }\n        }))));\n      })))))), /*#__PURE__*/React.createElement(Modal, {\n        \"aria-labelledby\": \"contained-modal-title-vcenter\",\n        centered: true,\n        show: childModel,\n        onHide: Closechildmodal,\n        size: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1929,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        closeButton: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1936,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        id: \"contained-modal-title-vcenter \",\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1937,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1941,\n          columnNumber: 15\n        }\n      }, \"Eployement Details\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1944,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1945,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1946,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"py-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1947,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1948,\n          columnNumber: 19\n        }\n      }, \"Previous Employment\"), /*#__PURE__*/React.createElement(\"hr\", {\n        style: {\n          fontWeight: \"bold\",\n          borderWidth: \"2px\",\n          border: \"1px solid black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1949,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1958,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridempcompany\",\n        className: \"formmargin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1959,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1964,\n          columnNumber: 21\n        }\n      }, \"Company\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        required: true,\n        name: \"company\",\n        placeholder: \"company name..\",\n        value: empdetails.company\n        // onChange={handleempinput}\n        ,\n        onChange: handleinput\n        // disabled={disableFields}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1965,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1977,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridLastName\",\n        className: \"formmargin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1978,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1983,\n          columnNumber: 21\n        }\n      }, \"Position\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        required: true,\n        name: \"position\",\n        placeholder: \"position..\",\n        value: empdetails.position,\n        onChange: handleempinput\n        // disabled={disableFields}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1984,\n          columnNumber: 21\n        }\n      })))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1996,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1997,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridFirstName\",\n        className: \"formmargin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1998,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2003,\n          columnNumber: 21\n        }\n      }, \"Joining Date\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"date\",\n        required: true,\n        name: \"joiningdate\",\n        placeholder: \"joining date\",\n        value: empdetails.joiningdate,\n        onChange: /*#__PURE__*/function () {\n          var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(e) {\n            return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n              while (1) {\n                switch (_context8.prev = _context8.next) {\n                  case 0:\n                    _context8.next = 2;\n                    return handleempinputJoiningDate(e);\n                  case 2:\n                    return _context8.abrupt(\"return\", _context8.sent);\n                  case 3:\n                  case \"end\":\n                    return _context8.stop();\n                }\n              }\n            }, _callee8);\n          }));\n          return function (_x6) {\n            return _ref9.apply(this, arguments);\n          };\n        }()\n        // disabled={disableFields}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2004,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2015,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridFirstName\",\n        className: \"formmargin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2016,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2021,\n          columnNumber: 21\n        }\n      }, \"Resignation Date\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"date\",\n        required: true,\n        name: \"resignationdate\",\n        placeholder: \"resignation date\",\n        value: empdetails.resignationdate,\n        onChange: /*#__PURE__*/function () {\n          var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(e) {\n            return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n              while (1) {\n                switch (_context9.prev = _context9.next) {\n                  case 0:\n                    _context9.next = 2;\n                    return handleempinputResignationDate(e);\n                  case 2:\n                    return _context9.abrupt(\"return\", _context9.sent);\n                  case 3:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }\n            }, _callee9);\n          }));\n          return function (_x7) {\n            return _ref10.apply(this, arguments);\n          };\n        }()\n        // disabled={disableFields}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2022,\n          columnNumber: 21\n        }\n      })))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2036,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2037,\n          columnNumber: 17\n        }\n      }, \"Job Description\"), /*#__PURE__*/React.createElement(FormGroup, {\n        as: Col,\n        controlId: \"formGridFirstName\",\n        className: \"formmargin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2038,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"textarea\",\n        rows: \"3\",\n        style: {\n          resize: \"none\"\n        },\n        required: true,\n        name: \"jobdescription\",\n        placeholder: \"Tell us about your job role & experience in previous company \",\n        value: empdetails.jobdescription,\n        onChange: handleempinput\n        // disabled={disableFields}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2043,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-center my-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2056,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: function onClick() {\n          addhistory();\n          Closechildmodal();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2057,\n          columnNumber: 17\n        }\n      }, \"Add Employement\"))))));\n    case 4:\n      {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            height: '20%'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2073,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2074,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2075,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Form.Group, {\n          as: Col,\n          controlId: \"formGridLastName\",\n          className: \"formmargin\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2076,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Form.Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2081,\n            columnNumber: 31\n          }\n        }, \"Username\"), /*#__PURE__*/React.createElement(Form.Control, {\n          type: \"text\",\n          required: true,\n          name: \"username\",\n          placeholder: \"username\",\n          value: emp.username\n          // value={props.value21}\n          ,\n          onChange: handleinput\n          // onChange={props.onChange}\n          //   disabled={disableFields}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2082,\n            columnNumber: 31\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2095,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Form.Group, {\n          as: Col,\n          controlId: \"formGridLastName\",\n          className: \"formmargin\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2096,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Form.Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2101,\n            columnNumber: 31\n          }\n        }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n          type: \"password\",\n          required: true,\n          name: \"password\",\n          placeholder: \"password\",\n          value: emp.password\n          // value={props.value22}\n          ,\n          onChange: handleinput\n          // onChange={props.onChange}\n          //   disabled={disableFields}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2102,\n            columnNumber: 31\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2115,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Form.Group, {\n          as: Col,\n          controlId: \"formGridFirstName\",\n          className: \"formmargin\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2116,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Form.Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2121,\n            columnNumber: 31\n          }\n        }, \"Joining Date\"), /*#__PURE__*/React.createElement(Form.Control, {\n          type: \"date\",\n          required: true,\n          name: \"joiningdate\",\n          placeholder: \"joining date\",\n          value: emp.joiningdate\n          // value={props.value19}\n          ,\n          onChange: handleinput\n          // onChange={props.onChange}\n          //   disabled={disableFields}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2122,\n            columnNumber: 31\n          }\n        })))), /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2136,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2137,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Form.Group, {\n          as: Col,\n          controlId: \"formGridLastName\",\n          className: \"formmargin\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2138,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Form.Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2143,\n            columnNumber: 31\n          }\n        }, \"Salary\"), /*#__PURE__*/React.createElement(Form.Control, {\n          type: \"Number\",\n          required: true,\n          name: \"currentSalary\",\n          placeholder: \"salary\",\n          value: emp.currentSalary\n          // value={props.value23}\n          ,\n          onChange: handleinput\n          // onChange={props.onChange}\n          //   disabled={disableFields}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2144,\n            columnNumber: 31\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2157,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Form.Group, {\n          as: Col,\n          controlId: \"formGridLastName\",\n          className: \"formmargin\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2158,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Form.Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2163,\n            columnNumber: 31\n          }\n        }, \"Designation\"), /*#__PURE__*/React.createElement(Form.Control, {\n          type: \"text\",\n          required: true,\n          name: \"designation\",\n          placeholder: \"designation..\",\n          value: emp.terminationreason\n          // value={props.value20}\n          ,\n          onChange: handleinput\n          // onChange={props.onChange}\n          //   disabled={disableFields}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2164,\n            columnNumber: 31\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2177,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Form.Group, {\n          as: Col,\n          controlId: \"formGridFirstName\",\n          className: \"formmargin\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2178,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Form.Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2183,\n            columnNumber: 31\n          }\n        }, \"Payment Mode\"), /*#__PURE__*/React.createElement(Form.Select, {\n          required: true,\n          name: \"paymentmode\",\n          value: emp.paymentmode\n          // value={props.value25}\n          ,\n          onChange: handleinput\n          // onChange={props.onChange}\n          //   disabled={disableFields}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2184,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          selected: true,\n          hidden: true,\n          disabled: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2193,\n            columnNumber: 33\n          }\n        }, \"Please Select\"), /*#__PURE__*/React.createElement(\"option\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2196,\n            columnNumber: 33\n          }\n        }, \"Cheque\"), /*#__PURE__*/React.createElement(\"option\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2197,\n            columnNumber: 33\n          }\n        }, \"Cash\"), /*#__PURE__*/React.createElement(\"option\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2198,\n            columnNumber: 33\n          }\n        }, \"Bank Transfer\"))))), /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2203,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: 4,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2204,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Form.Group, {\n          as: Col,\n          controlId: \"formGriddepartments\",\n          className: \"formmargin\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2205,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Form.Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2210,\n            columnNumber: 31\n          }\n        }, \"Department\"), /*#__PURE__*/React.createElement(Form.Select, {\n          name: \"departments\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2211,\n            columnNumber: 31\n          }\n        }, \"onChange=\", handleinput, /*#__PURE__*/React.createElement(\"option\", {\n          disabled: true,\n          selected: true,\n          defaultValue: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2214,\n            columnNumber: 33\n          }\n        }, \"Select department..\"), dep.map(function (d) {\n          return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n            key: d._id,\n            value: d._id,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2220,\n              columnNumber: 39\n            }\n          }, d.departmentname));\n        })))), /*#__PURE__*/React.createElement(Col, {\n          xl: \"4\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2229,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Form.Group, {\n          as: Col,\n          controlId: \"formGriddepartments\",\n          className: \"formmargin\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2230,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Form.Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2235,\n            columnNumber: 31\n          }\n        }, \"Employement Status\"), /*#__PURE__*/React.createElement(Form.Select, {\n          onChange: handleinput\n          // onChange={props.onChange}\n          ,\n          name: \"employementstatus\",\n          value: emp.employementstatus\n          // value={props.value41}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2236,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          defaultValue: \"\",\n          disbaled: true,\n          selected: true,\n          hidden: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2243,\n            columnNumber: 33\n          }\n        }, \"Select Please\"), /*#__PURE__*/React.createElement(\"option\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2244,\n            columnNumber: 33\n          }\n        }, \"Intern\"), /*#__PURE__*/React.createElement(\"option\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2245,\n            columnNumber: 33\n          }\n        }, \"Probation\"), /*#__PURE__*/React.createElement(\"option\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2246,\n            columnNumber: 33\n          }\n        }, \"Permanent\"), /*#__PURE__*/React.createElement(\"option\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2247,\n            columnNumber: 33\n          }\n        }, \"Left\"))))));\n      }\n      ;\n    case 5:\n      {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            height: '20%'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2260,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2261,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2262,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Form.Group, {\n          as: Col,\n          controlId: \"formGridLastName\",\n          className: \"formmargin\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2263,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Form.Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2268,\n            columnNumber: 31\n          }\n        }, \"Bank Name\"), /*#__PURE__*/React.createElement(Form.Select, {\n          required: true,\n          name: \"bankname\",\n          placeholder: \"bank name..\",\n          value: emp.bankname,\n          onChange: handleinput\n          //   disabled={disableFields}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2269,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2278,\n            columnNumber: 33\n          }\n        }, \"Please Select\"), /*#__PURE__*/React.createElement(\"option\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2279,\n            columnNumber: 33\n          }\n        }, \"MCB Limited\"), /*#__PURE__*/React.createElement(\"option\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2280,\n            columnNumber: 33\n          }\n        }, \"Bank Islami Limited\"), /*#__PURE__*/React.createElement(\"option\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2281,\n            columnNumber: 33\n          }\n        }, \"Allied Bank Limited\"), /*#__PURE__*/React.createElement(\"option\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2282,\n            columnNumber: 33\n          }\n        }, \"Bank Al-Habib Limited\"), /*#__PURE__*/React.createElement(\"option\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2283,\n            columnNumber: 33\n          }\n        }, \"Faysal Bank Limited\"), /*#__PURE__*/React.createElement(\"option\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2284,\n            columnNumber: 33\n          }\n        }, \"Mezaan Bank Limited\"), /*#__PURE__*/React.createElement(\"option\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2285,\n            columnNumber: 33\n          }\n        }, \"National Bank of Pakistan\"), /*#__PURE__*/React.createElement(\"option\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2286,\n            columnNumber: 33\n          }\n        }, \"MCB Islamic Limited\"), /*#__PURE__*/React.createElement(\"option\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2287,\n            columnNumber: 33\n          }\n        }, \"HBL\"), /*#__PURE__*/React.createElement(\"option\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2288,\n            columnNumber: 33\n          }\n        }, \"UBL\"), /*#__PURE__*/React.createElement(\"option\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2289,\n            columnNumber: 33\n          }\n        }, \"Askari Bank \")))), /*#__PURE__*/React.createElement(Col, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2293,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Form.Group, {\n          as: Col,\n          controlId: \"formGridLastName\",\n          className: \"formmargin\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2294,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Form.Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2299,\n            columnNumber: 31\n          }\n        }, \"Account Title\"), /*#__PURE__*/React.createElement(Form.Control, {\n          type: \"text\",\n          required: true,\n          name: \"accounttitle\",\n          placeholder: \"account title..\",\n          value: emp.accounttitle\n          // value={props.value27}\n          ,\n          onChange: handleinput\n          // onChange={props.onChange}\n          //   disabled={disableFields}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2300,\n            columnNumber: 31\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2313,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Form.Group, {\n          as: Col,\n          controlId: \"formGridLastName\",\n          className: \"formmargin\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2314,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Form.Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2319,\n            columnNumber: 31\n          }\n        }, \"Account No\"), /*#__PURE__*/React.createElement(Form.Control, {\n          type: \"text\",\n          required: true,\n          name: \"accountno\",\n          placeholder: \"account no..\",\n          value: emp.accountno\n          // value={props.value28}\n          ,\n          onChange: handleinput\n          // onChange={props.onChange}\n          //   disabled={disableFields}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2320,\n            columnNumber: 31\n          }\n        })))), /*#__PURE__*/React.createElement(Row, {\n          className: \"p-0\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2334,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          xxl: 4,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2335,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Form.Group, {\n          as: Col,\n          controlId: \"formGridLastName\",\n          className: \"formmargin\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2336,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Form.Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2341,\n            columnNumber: 31\n          }\n        }, \" IBAN\"), /*#__PURE__*/React.createElement(Form.Control, {\n          type: \"text\",\n          required: true,\n          name: \"IBAN\",\n          placeholder: \"iban..\",\n          value: emp.IBAN\n          // value={props.value29}\n          ,\n          onChange: handleinput\n          // onChange={props.onChange}\n          //  disabled={disableFields}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2342,\n            columnNumber: 31\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          xxl: 4,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2356,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Form.Group, {\n          as: Col,\n          controlId: \"formGridLastName\",\n          className: \"formmargin\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2357,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Form.Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2362,\n            columnNumber: 31\n          }\n        }, \"Branch code\"), /*#__PURE__*/React.createElement(Form.Control, {\n          type: \"text\",\n          required: true,\n          name: \"branchcode\",\n          placeholder: \"branch code..\",\n          value: emp.branchcode\n          // value={props.value30}\n          ,\n          onChange: handleinput\n          // onChange={props.onChange}\n          //  disabled={disableFields}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2363,\n            columnNumber: 31\n          }\n        })))));\n      }\n    default:\n      return \"unknown step\";\n  }\n}\nvar EmployeeData = function EmployeeData(props) {\n  console.log('props1', props);\n  var classes = useStyles();\n  var _useState35 = useState(0),\n    _useState36 = _slicedToArray(_useState35, 2),\n    activeStep = _useState36[0],\n    setActiveStep = _useState36[1];\n  var _useState37 = useState([]),\n    _useState38 = _slicedToArray(_useState37, 2),\n    skippedSteps = _useState38[0],\n    setSkippedSteps = _useState38[1];\n  var steps = getSteps();\n  var isStepOptional = function isStepOptional(step) {\n    return step === 1 || step === 2;\n  };\n  var isStepSkipped = function isStepSkipped(step) {\n    return skippedSteps.includes(step);\n  };\n  var handleNext = function handleNext() {\n    setActiveStep(activeStep + 1);\n    setSkippedSteps(skippedSteps.filter(function (skipItem) {\n      return skipItem !== activeStep;\n    }));\n  };\n  var handleBack = function handleBack() {\n    setActiveStep(activeStep - 1);\n  };\n  var handleSkip = function handleSkip() {\n    if (!isStepSkipped(activeStep)) {\n      setSkippedSteps([].concat(_toConsumableArray(skippedSteps), [activeStep]));\n    }\n    setActiveStep(activeStep + 1);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-wrapper \",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2417,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2419,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"page-title\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2420,\n      columnNumber: 22\n    }\n  }, \"Add Employees\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"breadcrumb\",\n    style: {\n      backgroundColor: \"#f7f7f7\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2421,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"breadcrumb-item\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2425,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    style: {\n      color: \"#1f1f1f\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2426,\n      columnNumber: 25\n    }\n  }, \"Dashboard\")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"breadcrumb-item active\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2430,\n      columnNumber: 23\n    }\n  }, \"Add Employee\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \" d-flex justify-content-center \",\n    style: {\n      marginTop: '5%'\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2434,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      height: \"40%\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2435,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '40%'\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2436,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2437,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2438,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2439,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Stepper, {\n    alternativeLabel: true,\n    activeStep: activeStep,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2440,\n      columnNumber: 11\n    }\n  }, steps.map(function (step, index) {\n    var labelProps = {};\n    var stepProps = {};\n    // if (isStepOptional(index)) {\n    //   labelProps.optional = (\n    //     <Typography\n    //       variant=\"caption\"\n    //       align=\"center\"\n    //       style={{ display: \"block\" }}\n    //     >\n    //       optional\n    //     </Typography>\n    //   );\n    // }\n    if (isStepSkipped(index)) {\n      stepProps.completed = false;\n    }\n    return /*#__PURE__*/React.createElement(Step, Object.assign({}, stepProps, {\n      key: index,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2459,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(StepLabel, Object.assign({}, labelProps, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2460,\n        columnNumber: 19\n      }\n    }), step));\n  })), activeStep === steps.length ? /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    align: \"center\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2467,\n      columnNumber: 13\n    }\n  }, \"Thank You\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2472,\n      columnNumber: 15\n    }\n  }, getStepContent({\n    props: props,\n    activeStep: activeStep\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    disabled: activeStep === 0,\n    onClick: handleBack,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2473,\n      columnNumber: 15\n    }\n  }, \"back\"), /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleNext,\n    type: \"submit\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2490,\n      columnNumber: 15\n    }\n  }, activeStep === steps.length - 1 ? \"Finish\" : \"Next\")))))))));\n};\nexport default EmployeeData;","map":{"version":3,"names":["React","useState","useEffect","Typography","TextField","Button","Stepper","Step","StepLabel","makeStyles","Modal","Form","Col","Row","Container","FormGroup","Table","Card","axios","Link","NotificationContainer","NotificationManager","ViewListIcon","ViewModuleIcon","ToggleButton","ToggleButtonGroup","TableView","useNavigate","DatePicker","ReactFlags","cities","useStyles","theme","button","marginRight","spacing","moment","require","getSteps","getStepContent","props","activeStep","navigate","url2","url","url1","dep","setDep","datas","setData","handleClose","setShow","Closechildmodal","setShowChildModel","Closechildmodal1","setShowChildModel1","showChildModel","showChildModel1","handleShow","childModel","childModel1","show","birth","setbirth","testUpdate","setTestUpdate","list","setlist","file","setfile","profilepic","firstname","lastname","dob","cnic","gender","martialStatus","religion","jobtitle","username","primaryemail","secondaryemail","password","primaryphone","secondaryphone","permanentaddress","temporaryaddress","province","city","postalCode","departments","designation","joiningdate","educationdetails","employementhistory","currentSalary","employementstatus","bankname","paymentmode","accounttitle","accountno","IBAN","branchcode","country","emp","setEmp","education","seteducation","selected","setSelected","setcountry","employement","setemployement","company","position","resignationdate","duration","jobdescription","empdetails","setempdetails","degreetitle","institute","start","end","status","details","setdetails","removeitem","i","temp","splice","console","log","removemployement","addhistory","empl","push","name","value","handleinput","e","target","handleeducationdetails","handleempinput","addeducation","handleempinputJoiningDate","a","b","years","diff","add","months","days","handleempinputResignationDate","view","setView","handleChange","event","nextView","handleSubmit","preventDefault","data","FormData","filename","Date","now","append","post","error","res","success","fetchData","get","employees","getEmp","PF","step","width","height","fontSize","padding","marginLeft","code","textAlign","map","d","color","fontWeight","borderWidth","border","resize","terminationreason","_id","departmentname","EmployeeData","classes","setActiveStep","skippedSteps","setSkippedSteps","steps","isStepOptional","isStepSkipped","includes","handleNext","filter","skipItem","handleBack","handleSkip","backgroundColor","marginTop","display","justifyContent","index","labelProps","stepProps","completed","length"],"sources":["C:/Users/hassan.ali/Downloads/HR-SYSTEM-main/client/src/Components/Employee Data/All Employees/EmployeeData.js"],"sourcesContent":["// import React from \"react\";\r\n// import { useState } from \"react\";\r\n// import {\r\n//   Typography,\r\n//   TextField,\r\n//   Button,\r\n//   Stepper,\r\n//   Step,\r\n//   StepLabel,\r\n// } from \"@material-ui/core\";\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\n// import {\r\n//   Modal,\r\n\r\n//   Form,\r\n//   Col,\r\n//   Row,\r\n//   Container,\r\n//   FormGroup,\r\n// } from \"react-bootstrap\";\r\n// import {\r\n//   useForm,\r\n//   Controller,\r\n//   FormProvider,\r\n//   useFormContext,\r\n// } from \"react-hook-form\";\r\n// import Card from 'react-bootstrap/Card';\r\n// import Table from \"react-bootstrap/Table\";\r\n// import { Link } from 'react-router-dom'\r\n\r\n// // const [emp, setEmp] = useState({\r\n// //   profilepic: \"\",\r\n// //   firstname: \"\",\r\n// //   lastname: \"\",\r\n// //   dob: \"\",\r\n// //   cnic: \"\",\r\n// //   gender: \"\",\r\n// //   martialStatus: \"\",\r\n// //   religion: \"\",\r\n// //   jobtitle: \"\",\r\n// //   username: \"\",\r\n// //   primaryemail: \"\",\r\n// //   secondaryemail: \"\",\r\n// //   password: \"\", \r\n// //   primaryphone: \"\",\r\n// //   secondaryphone: \"\",\r\n// //   permanentaddress: \"\",\r\n// //   temporaryaddress: \"\",\r\n// //   province: \"\",\r\n// //   city: \"\",\r\n// //   postalCode: \"\",\r\n// //   departments: \"\",\r\n// //   designation: \"\",\r\n// //   joiningdate: \"\",\r\n// //   educationdetails: \"\",\r\n// //   employementhistory: \"\",\r\n\r\n// //   currentSalary: \"\",\r\n// //   employementstatus: \"\",\r\n//   //bank information\r\n//   // bankname: \"\",\r\n//   // paymentmode: \"\",\r\n//   // accounttitle: \"\",\r\n//   // accountno: \"\",\r\n//   // IBAN: \"\",\r\n//   // branchcode: \"\",\r\n//   // country:\"\",\r\n//   // degree info:\"\"\r\n// // });\r\n// // let name, value;\r\n// //   const handleinput = (e) => {\r\n// //     console.log(e);\r\n// //     name = e.target.name;\r\n// //     value = e.target.value;\r\n// //     setEmp({ ...emp, [name]: value });\r\n// //   };\r\n\r\n// // const [testUpdate, setTestUpdate] = useState(false);\r\n// // const [employement, setemployement] = useState([]);\r\n\r\n// // const removemployement = (i) =>{\r\n// //   const temp = employement;\r\n// //   employement.splice(i,1); \r\n// //   console.log(\"splice\",temp)\r\n//   // setemployement(temp);\r\n//   // setTestUpdate(!testUpdate)\r\n// // }\r\n\r\n\r\n// // const [empdetails, setempdetails] = useState({\r\n// //   company: \"\",\r\n// //   position: \"\",\r\n// //   joiningdate: \"\",\r\n// //   resignationdate: \"\",\r\n// //   duration: \"\",\r\n// //   jobdescription: \"\",\r\n// // });\r\n\r\n// // const addhistory = () => {\r\n// //   var empl = employement;\r\n// //   empl.push({\r\n// //     company: empdetails.company,\r\n// //     position: empdetails.position,\r\n// //     joiningdate: empdetails.joiningdate,\r\n// //     resignationdate: empdetails.resignationdate,\r\n// //     duration: empdetails.duration,\r\n// //     jobdescription: empdetails.jobdescription,\r\n// //   });\r\n// //   console.log(\"emplllllllll\", empl);\r\n// //   setemployement(empl);\r\n// //   setEmp({ ...emp, employementhistory: empl });\r\n// // };\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   button: {\r\n//     marginRight: theme.spacing(1),\r\n//   },\r\n// }));\r\n\r\n// function getSteps() {\r\n//   return [\r\n//     \"Personal Information\",\r\n//     \"Address & Region\",\r\n//     \"Education Information\",\r\n//     \"Previous Information\",\r\n//     \"Employement Details\",\r\n//     \"Bank Details\"\r\n//   ];\r\n// }\r\n\r\n// function getStepContent({props,activeStep}) {\r\n//   // console\r\n//   const step =activeStep\r\n//   // const [childModel1, setShowChildModel1] = useState(false);\r\n//   // const [childModel, setShowChildModel] = useState(false);\r\n//   // const Closechildmodal = () => setShowChildModel(false);\r\n//   // const Closechildmodal1 = () => setShowChildModel1(false);\r\n\r\n\r\n \r\n\r\n//   switch (step) {\r\n//     case 0:\r\n//       return (\r\n//         <>\r\n//         <div style={{height:'20%'}}>\r\n          \r\n//           <div className=\"w-75\" id=\"responsivewidth\" style={{width:'60%', height:'40%'}}>\r\n//                   <Col>\r\n//                     <Row >\r\n//                       <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\r\n//                         <Form.Group\r\n//                           as={Col}\r\n//                           controlId=\"formGridFirstName\"\r\n//                           className=\"formmargin\"\r\n//                         >\r\n//                           <Form.Label>First Name</Form.Label>\r\n//                           <Form.Control\r\n//                             type=\"text\"\r\n//                             required\r\n//                             name=\"firstname\"\r\n//                             placeholder=\"First Name\"\r\n//                             // value={emp.firstname}\r\n//                             value={props.value}\r\n//                             // onChange={handleinput}\r\n//                             onChange={props.onChange}\r\n//                           />\r\n//                         </Form.Group>\r\n//                       </Col>\r\n//                       <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\r\n//                         <Form.Group\r\n//                           as={Col}\r\n//                           controlId=\"formGridLastName\"\r\n//                           className=\"formmargin\"\r\n//                         >\r\n//                           <Form.Label>Last Name</Form.Label>\r\n//                           <Form.Control\r\n//                             type=\"text\"\r\n//                             required\r\n//                             name=\"lastname\"\r\n//                             placeholder=\"Last Name\"\r\n//                             // value={emp.lastname}\r\n//                             value={props.value1}\r\n//                             // onChange={handleinput}\r\n//                             onChange={props.onChange}\r\n//                           />\r\n//                         </Form.Group>\r\n//                       </Col>\r\n//                     </Row>\r\n//                     <Row>\r\n//                       <Col xxl='6' xl='6' lg='6' md='6'>\r\n//                         <Form.Group\r\n//                           as={Col}\r\n//                           controlId=\"formGridgender\"\r\n//                           className=\"formmargin\"\r\n//                         >\r\n//                           <Form.Label>Gender</Form.Label>\r\n//                           <Form.Select\r\n//                             required\r\n//                             name=\"gender\"\r\n//                             // value={emp.gender}\r\n//                             value={props.value2}\r\n//                             // onChange={handleinput}\r\n//                             onChange={props.onChange}\r\n//                           >\r\n//                             <option value=\"\" selected hidden disabled>\r\n//                               Please Select\r\n//                             </option>\r\n//                             <option>Male</option>\r\n//                             <option>Female</option>\r\n//                             <option>Other</option>\r\n//                           </Form.Select>\r\n//                         </Form.Group>\r\n//                       </Col>\r\n//                       <Col xl='6' lg=\"6\" md=\"6\">\r\n//                         <Form.Group\r\n//                           as={Col}\r\n//                           controlId=\"formGridFirstName\"\r\n//                           className=\"formmargin\"\r\n//                         >\r\n//                           <Form.Label>National ID </Form.Label>\r\n//                           <Form.Control\r\n//                             type=\"number\"\r\n//                             required\r\n//                             name=\"cnic\"\r\n//                             placeholder=\"CNIC\"\r\n//                             // value={emp.cnic}\r\n//                             value={props.value3}\r\n//                             // onChange={handleinput}\r\n//                             onChange={props.onChange}\r\n//                             //   disabled={disableFields}\r\n//                           />\r\n//                         </Form.Group>\r\n//                       </Col>\r\n//                     </Row>\r\n//                     <Row>\r\n//                       <Col xxl='6' xl='6' lg='6'>\r\n//                         <Form.Group\r\n//                           as={Col}\r\n//                           controlId=\"formGridLastName\"\r\n//                           className=\"formmargin\"\r\n//                         >\r\n//                           <Form.Label>D-0-B</Form.Label>\r\n//                           {/* <DatePicker\r\n//                             required\r\n//                             selected={emp.dob}\r\n//                             onChange={(date)=>{setEmp({...emp,dob:moment(date).format('dd/mm/yyyy')})}}\r\n//                             // dateFormat='d MMMM, yyyy'\r\n//                             dateFormat='dd/mm/yyyy'\r\n//                             dropDownMode=\"select\"\r\n//                           /> */}\r\n//                           <Form.Control\r\n//                             type=\"date\"\r\n//                             required\r\n//                             placeholder=\"dd/mm/yyyy\"\r\n//                             name=\"dob\"\r\n//                             // value={emp.dob}\r\n//                             value={props.value4}\r\n//                             // onChange={handleinput}\r\n//                             onChange={props.onChange}\r\n//                             //   disabled={disableFields}\r\n//                           />\r\n//                         </Form.Group>\r\n//                       </Col>\r\n\r\n//                       <Col  xl='6' lg=\"6\" >\r\n//                         <Form.Group\r\n//                           as={Col}\r\n//                           controlId=\"formGridMartialStatus\"\r\n//                           className=\"formmargin\"\r\n//                         >\r\n//                           <Form.Label>Martial Status</Form.Label>\r\n//                           <Form.Select\r\n//                             required\r\n//                             name=\"martialStatus\"\r\n//                             placeholder=\"martial status..\"\r\n//                             // value={emp.martialStatus}\r\n//                             value={props.value5}\r\n//                             // onChange={handleinput}\r\n//                             onChange={props.onChange}\r\n//                             //   disabled={disableFields}\r\n//                           >\r\n//                             <option value=\"\" selected hidden disabled>\r\n//                               Please Select\r\n//                             </option>\r\n//                             <option>Single</option>\r\n//                             <option>Married</option>\r\n//                             <option>Divorced</option>\r\n//                             <option>widow</option>\r\n//                           </Form.Select>\r\n//                         </Form.Group>\r\n//                       </Col>\r\n//                       <Col xl='6' lg='6'>\r\n//                         <Form.Group\r\n//                           as={Col}\r\n//                           controlId=\"formGridLastName\"\r\n//                           className=\"formmargin\"\r\n//                         >\r\n//                           <Form.Label>Religion</Form.Label>\r\n//                           <Form.Select\r\n//                             required\r\n//                             name=\"religion\"\r\n//                             placeholder=\"Religion\"\r\n//                             // value={emp.religion}\r\n//                             value={props.value6}\r\n//                             // onChange={handleinput}\r\n//                             onChange={props.onChange}\r\n//                             //   disabled={disableFields}\r\n//                           >\r\n//                             <option value=\"\" selected hidden disabled>\r\n//                               Please Select\r\n//                             </option>\r\n//                             <option>Islam</option>\r\n//                             <option>Christianity</option>\r\n//                             <option>Buddhism</option>\r\n//                             <option> Sikhism</option>\r\n//                             <option> Hinduism</option>\r\n//                             <option>Bahá’í</option>\r\n//                             <option>Confucianism</option>\r\n//                             <option>Jainism</option>\r\n//                             <option>Judaism</option>\r\n//                             <option>Zoroastrianism</option>\r\n//                             <option>Druze</option>\r\n//                           </Form.Select>\r\n//                         </Form.Group>\r\n//                       </Col>\r\n//                     </Row>\r\n//                   </Col>\r\n                  \r\n                  \r\n//                   </div>\r\n//                   </div>\r\n                  \r\n//         </>\r\n//       );\r\n\r\n//     case 1:\r\n//       return (\r\n//         <>\r\n         \r\n//             <div style={{height:'20%'}}>\r\n//           <Row>\r\n//                     <h5\r\n//                       className=\"py-2 \"\r\n//                       style={{ fontSize: \"22px\", padding: \"0px 19px\" }}\r\n//                     >\r\n//                       Primary\r\n//                     </h5>\r\n//            <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\r\n//                       <Form.Group\r\n//                         as={Col}\r\n//                         controlId=\"formGridphone\"\r\n//                         className=\"formmargin \"\r\n//                       >\r\n//                         <Form.Label>Phone</Form.Label>\r\n//                         <Form.Control\r\n//                           type=\"number\"\r\n//                           required\r\n//                           name=\"primaryphone\"\r\n//                           placeholder=\"phone\"\r\n//                           // value={emp.primaryphone}\r\n//                           value={props.value8}\r\n//                           // onChange={handleinput}\r\n//                           onChange={props.onChange}\r\n//                         />\r\n//                       </Form.Group>\r\n//                     </Col>\r\n//                     <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\r\n//                       <Form.Group\r\n//                         as={Col}\r\n//                         controlId=\"formGridcompanyemail\"\r\n//                         className=\"formmargin \"\r\n//                       >\r\n//                         <Form.Label>Email</Form.Label>\r\n//                         <Form.Control\r\n//                           type=\"email\"\r\n//                           required\r\n//                           name=\"primaryemail\"\r\n//                           placeholder=\"email\"\r\n//                           // value={emp.primaryemail}\r\n//                           value={props.value9}\r\n//                           // onChange={handleinput}\r\n//                           onChange={props.onChange}\r\n//                         />\r\n//                       </Form.Group>\r\n//                     </Col>\r\n//                   </Row>\r\n\r\n//                   <Row>\r\n//                     <h5\r\n//                       className=\"py-2 \"\r\n//                       style={{ fontSize: \"22px\", padding: \"0px 19px\" }}\r\n//                     >\r\n//                       Secondary\r\n//                     </h5>\r\n//                     <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\r\n//                       <Form.Group\r\n//                         as={Col}\r\n//                         controlId=\"formGridcompanyemail\"\r\n//                         className=\"formmargin \"\r\n//                       >\r\n//                         <Form.Label>Phone</Form.Label>\r\n//                         <Form.Control\r\n//                           type=\"number\"\r\n//                           required\r\n//                           name=\"secondaryphone\"\r\n//                           placeholder=\"secondary phone\"\r\n//                           // value={emp.secondaryphone}\r\n//                           value={props.value10}\r\n//                           // onChange={handleinput}\r\n//                           onChange={props.onChange}\r\n//                         />\r\n//                       </Form.Group>\r\n//                     </Col>\r\n//                     <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\r\n//                       <Form.Group\r\n//                         as={Col}\r\n//                         controlId=\"formGridcompanyemail\"\r\n//                         className=\"formmargin \"\r\n//                       >\r\n//                         <Form.Label>Email</Form.Label>\r\n//                         <Form.Control\r\n//                           type=\"email\"\r\n//                           required\r\n//                           name=\"secondaryemail\"\r\n//                           placeholder=\"secondary Email\"\r\n//                           // value={emp.secondaryemail}\r\n//                           value={props.value11}\r\n//                           // onChange={handleinput}\r\n//                           onChange={props.onChange}\r\n//                         />\r\n//                       </Form.Group>\r\n//                     </Col>\r\n//                     </Row>\r\n//                     </div>\r\n//         </>\r\n//       );\r\n//     case 2:\r\n//       return (\r\n//         <>\r\n//          <div style={{height:'20%'}}>\r\n//             <Col lg={12}>\r\n//                   <Form.Group\r\n//                     as={Col}\r\n//                     controlId=\"formGridFirstName\"\r\n//                     className=\"formmargin\"\r\n//                   >\r\n//                     <Form.Label>Temporary Address</Form.Label>\r\n//                     <Form.Control\r\n//                       type=\"text\"\r\n//                       required\r\n//                       name=\"temporaryaddress\"\r\n//                       placeholder=\"complete address\"\r\n//                       // value={emp.temporaryaddress}\r\n//                       value={props.value12}\r\n//                       // onChange={handleinput}\r\n//                       onChange={props.onChange}\r\n//                       //   disabled={disableFields}\r\n//                     />\r\n//                   </Form.Group>\r\n//                 </Col>\r\n\r\n//                 <Col lg={12}>\r\n//                   <Form.Group\r\n//                     as={Col}\r\n//                     controlId=\"formGridFirstName\"\r\n//                     className=\"formmargin\"\r\n//                   >\r\n//                     <Form.Label>Permanent Address</Form.Label>\r\n//                     <Form.Control\r\n//                       type=\"text\"\r\n//                       required\r\n//                       name=\"permanentaddress\"\r\n//                       placeholder=\"complete address\"\r\n//                       // value={emp.permanentaddress}\r\n//                       value={props.value13}\r\n//                       // onChange={handleinput}\r\n//                       onChange={props.onChange}\r\n//                       //   disabled={disableFields}\r\n//                     />\r\n//                   </Form.Group>\r\n//                 </Col>\r\n//                 {/* </Row> */}\r\n//                 <div style={{marginLeft:'0.75%'}}>\r\n//                 <Row>\r\n//                   <Col>\r\n//                     <Form.Label style={{marginLeft:'2%'}}>City</Form.Label>\r\n//                     <Form.Group\r\n//                       as={Col}\r\n//                       controlId=\"formGridLastName\"\r\n//                       className=\"formmargin\"\r\n//                     >\r\n//                       <Form.Select\r\n//                         required\r\n//                         // onChange={handleinput}\r\n//                         onChange={props.onChange}\r\n//                         name=\"city\"\r\n//                         // value={emp.city}\r\n//                         value={props.value14}\r\n//                       >\r\n//                         <option value=\"\" selected hidden disabled>\r\n//                           Select City\r\n//                         </option>\r\n//                         {/* {cities.map((d, i) => {\r\n//                           return <option key={i}>{d}</option>;\r\n//                         })} */}\r\n//                       </Form.Select>\r\n//                     </Form.Group>\r\n//                   </Col>\r\n//                   <Col>\r\n//                     <Form.Label>Province</Form.Label>\r\n//                     <Form.Group\r\n//                       as={Col}\r\n//                       controlId=\"formGridLastName\"\r\n//                       className=\"formmargin\"\r\n//                     >\r\n//                       <Form.Select\r\n//                         required\r\n//                         name=\"province\"\r\n//                         placeholder=\"province\"\r\n//                         // value={emp.province}\r\n//                         value={props.value15}\r\n//                         // onChange={handleinput}\r\n//                         onChange={props.onChange}\r\n//                         //   disabled={disableFields}\r\n//                       >\r\n//                         <option value=\"\" selected hidden disabled>\r\n//                           Select Province\r\n//                         </option>\r\n//                         <option>Punjab</option>\r\n//                         <option>Sindh</option>\r\n//                         <option>KPK</option>\r\n//                         <option>Gilgit Baltistan</option>\r\n//                         <option>Islamabad(Capital Territory)</option>\r\n//                       </Form.Select>\r\n//                     </Form.Group>\r\n//                   </Col>\r\n//                   <Col>\r\n//                     <Form.Label>Country</Form.Label>\r\n//                     <Form.Group\r\n//                       as={Col}\r\n//                       controlId=\"formGridLastName\"\r\n//                       className=\"formmargin\"\r\n//                     >\r\n//                       {/* <ReactFlags\r\n//                         countries={[\"PK\"]}\r\n//                         selected={selected}\r\n//                         onSelect={(code) => {\r\n//                           setSelected(code);\r\n//                           code === \"PK\" && setcountry(\"Pakistan\");\r\n//                           setEmp({...emp,country:\"Pakistan\"})\r\n//                         }}\r\n//                       /> */}\r\n//                     </Form.Group>\r\n//                   </Col>\r\n//                 </Row>\r\n//                 <Row>\r\n//                   <Col lg={4} xl={4}>\r\n//                     <Form.Group\r\n//                       as={Col}\r\n//                       controlId=\"formGridLastName\"\r\n//                       className=\"formmargin\"\r\n//                     >\r\n//                       <Form.Label>Postal Code</Form.Label>\r\n//                       <Form.Control\r\n//                         type=\"text\"\r\n//                         required\r\n//                         name=\"postalCode\"\r\n//                         placeholder=\"postal code\"\r\n//                         // value={emp.postalCode}\r\n//                         value={props.value16}\r\n//                         // onChange={handleinput}\r\n//                         onChange={props.onChange}\r\n//                         //   disabled={disableFields}\r\n//                       />\r\n//                     </Form.Group>\r\n//                   </Col>\r\n//                 </Row>\r\n//                 </div>\r\n//                 </div>\r\n//         </>\r\n//       );\r\n//     case 3:\r\n//       return (\r\n//         <>\r\n//         <div style={{width:'85%',marginLeft:'4%',height:'20%'}}>\r\n//         <Row>\r\n//                   <Container>\r\n//                       <Row className=\"my-3\">\r\n                        \r\n//                       </Row>\r\n//                     </Container>\r\n//                   <div className=\"my-3 d-flex \">\r\n                    \r\n\r\n//                     <div className=\"d-flex justify-content-end\">\r\n//                       <Button className=\"btn ml-2\"\r\n//                         // onClick={()=>{props.onClick}}\r\n//                       >\r\n//                         Add Employement\r\n//                       </Button>\r\n//                     </div>\r\n//                   </div> \r\n//                   <Row className=\"my-3\">\r\n//                       <Table striped bordered hover className=\"ml-4\">\r\n//                           <thead>\r\n//                             <tr>\r\n//                               <th>#</th>\r\n//                               <th style={{textAlign:\"center\"}}>Company</th>\r\n//                               <th style={{textAlign:\"center\"}}>Position</th>\r\n//                               <th style={{textAlign:\"center\"}}>start Date</th>\r\n//                               <th style={{textAlign:\"center\"}}>Left Date</th>\r\n//                               <th style={{textAlign:\"center\"}}>duration</th>\r\n//                               <th style={{textAlign:\"center\"}}>Remove</th>\r\n//                             </tr>\r\n//                           </thead>\r\n//                           <tbody>\r\n//                             {/* {employement &&\r\n//                               employement.map((d, i) => {\r\n//                                 return (\r\n//                                   <>\r\n//                                     <tr key={i}>\r\n//                                       <th>{i+1}</th>\r\n//                                       <td>{d.company}</td>\r\n//                                       <td>{d.position}</td>\r\n//                                       <td>{d.joiningdate}</td>\r\n//                                       <td>{d.resignationdate}</td>\r\n//                                       <td>{d.duration}</td>\r\n//                                       <td><i class=\"fa fa-trash-can\" aria-hidden=\"true\" style={{color:'red'}} onClick={()=>removemployement(i)}></i></td>\r\n//                                     </tr>\r\n//                                   </>\r\n//                                 );\r\n//                               })} */}\r\n//                               {props.employement}\r\n//                           </tbody>\r\n//                         </Table>\r\n//                       </Row>\r\n            \r\n//           </Row>\r\n//           </div>\r\n\r\n//         </>\r\n//       );\r\n//       case 4:{\r\n//         return (\r\n//         <div style={{height:'20%'}}>\r\n//           <Row>\r\n//         <Col>\r\n//                     <Form.Group\r\n//                       as={Col}\r\n//                       controlId=\"formGridLastName\"\r\n//                       className=\"formmargin\"\r\n//                     >\r\n//                       <Form.Label>Username</Form.Label>\r\n//                       <Form.Control\r\n//                         type=\"text\"\r\n//                         required\r\n//                         name=\"username\"\r\n//                         placeholder=\"username\"\r\n//                         // value={emp.username}\r\n//                         value={props.value21}\r\n//                         // onChange={handleinput}\r\n//                         onChange={props.onChange}\r\n//                         //   disabled={disableFields}\r\n//                       />\r\n//                     </Form.Group>\r\n//                   </Col>\r\n//                   <Col>\r\n//                     <Form.Group\r\n//                       as={Col}\r\n//                       controlId=\"formGridLastName\"\r\n//                       className=\"formmargin\"\r\n//                     >\r\n//                       <Form.Label>Password</Form.Label>\r\n//                       <Form.Control\r\n//                         type=\"password\"\r\n//                         required\r\n//                         name=\"password\"\r\n//                         placeholder=\"password\"\r\n//                         // value={emp.password}\r\n//                         value={props.value22}\r\n//                         // onChange={handleinput}\r\n//                         onChange={props.onChange}\r\n//                         //   disabled={disableFields}\r\n//                       />\r\n//                     </Form.Group>\r\n//                   </Col>\r\n//                   <Col>\r\n//                     <Form.Group\r\n//                       as={Col}\r\n//                       controlId=\"formGridFirstName\"\r\n//                       className=\"formmargin\"\r\n//                     >\r\n//                       <Form.Label>Joining Date</Form.Label>\r\n//                       <Form.Control\r\n//                         type=\"date\"\r\n//                         required\r\n//                         name=\"joiningdate\"\r\n//                         placeholder=\"joining date\"\r\n//                         // value={emp.joiningdate}\r\n//                         value={props.value19}\r\n//                         // onChange={handleinput}\r\n//                         onChange={props.onChange}\r\n//                         //   disabled={disableFields}\r\n//                       />\r\n//                     </Form.Group>\r\n//                   </Col>\r\n//                 </Row>\r\n//                 <Row>\r\n//                   <Col>\r\n//                     <Form.Group\r\n//                       as={Col}\r\n//                       controlId=\"formGridLastName\"\r\n//                       className=\"formmargin\"\r\n//                     >\r\n//                       <Form.Label>Salary</Form.Label>\r\n//                       <Form.Control\r\n//                         type=\"Number\"\r\n//                         required\r\n//                         name=\"currentSalary\"\r\n//                         placeholder=\"salary\"\r\n//                         // value={emp.currentSalary}\r\n//                         value={props.value23}\r\n//                         // onChange={handleinput}\r\n//                         onChange={props.onChange}\r\n//                         //   disabled={disableFields}\r\n//                       />\r\n//                     </Form.Group>\r\n//                   </Col>\r\n//                   <Col>\r\n//                     <Form.Group\r\n//                       as={Col}\r\n//                       controlId=\"formGridLastName\"\r\n//                       className=\"formmargin\"\r\n//                     >\r\n//                       <Form.Label>Designation</Form.Label>\r\n//                       <Form.Control\r\n//                         type=\"text\"\r\n//                         required\r\n//                         name=\"designation\"\r\n//                         placeholder=\"designation..\"\r\n//                         // value={emp.terminationreason}\r\n//                         value={props.value20}\r\n//                         // onChange={handleinput}\r\n//                         onChange={props.onChange}\r\n//                         //   disabled={disableFields}\r\n//                       />\r\n//                     </Form.Group>\r\n//                   </Col>\r\n//                   <Col>\r\n//                     <Form.Group\r\n//                       as={Col}\r\n//                       controlId=\"formGridFirstName\"\r\n//                       className=\"formmargin\"\r\n//                     >\r\n//                       <Form.Label>Payment Mode</Form.Label>\r\n//                       <Form.Select\r\n//                         required\r\n//                         name=\"paymentmode\"\r\n//                         // value={emp.paymentmode}\r\n//                         value={props.value25}\r\n//                         // onChange={handleinput}\r\n//                         onChange={props.onChange}\r\n//                         //   disabled={disableFields}\r\n//                       >\r\n//                         <option value=\"\" selected hidden disabled>\r\n//                           Please Select\r\n//                         </option>\r\n//                         <option>Cheque</option>\r\n//                         <option>Cash</option>\r\n//                         <option>Bank Transfer</option>\r\n//                       </Form.Select>\r\n//                     </Form.Group>\r\n//                   </Col>\r\n//                 </Row>\r\n//                 <Row>\r\n//                   <Col lg={4}>\r\n//                     <Form.Group\r\n//                       as={Col}\r\n//                       controlId=\"formGriddepartments\"\r\n//                       className=\"formmargin\"\r\n//                     >\r\n//                       <Form.Label>Department</Form.Label>\r\n//                       <Form.Select                 name=\"departments\">\r\n//                         {/* onChange={handleinput} */}\r\n//                         onChange={props.onChange}\r\n//                         <option disabled selected defaultValue={\"\"}>\r\n//                           Select department..\r\n//                         </option>\r\n//                         {/* {dep.map((d) => {\r\n//                           return (\r\n//                             <>\r\n//                               <option key={d._id} value={d._id}>\r\n//                                 {d.departmentname}\r\n//                               </option>\r\n//                             </>\r\n//                           );\r\n//                         })} */}\r\n//                       </Form.Select>\r\n//                     </Form.Group>\r\n//                   </Col>\r\n//                   <Col xl='4'>\r\n//                   <Form.Group\r\n//                       as={Col}\r\n//                       controlId=\"formGriddepartments\"\r\n//                       className=\"formmargin\"\r\n//                     >\r\n//                       <Form.Label>Employement Status</Form.Label>\r\n//                       <Form.Select\r\n//                       //  onChange={handleinput} \r\n//                       onChange={props.onChange}\r\n//                        name=\"employementstatus\" \r\n//                       //  value={emp.employementstatus}\r\n//                       value={props.value41}\r\n//                        >\r\n//                         <option defaultValue={\"\"} disbaled selected hidden>Select Please</option>\r\n//                         <option>Intern</option>\r\n//                         <option>Probation</option>\r\n//                         <option>Permanent</option>\r\n//                         <option>Left</option>\r\n//                       </Form.Select>\r\n//                     </Form.Group>\r\n//                   </Col>\r\n//                   </Row>\r\n//         </div>\r\n       \r\n\r\n       \r\n//         )\r\n//       };\r\n//       case 5:{\r\n//         return(\r\n//           <div style={{height:'20%'}}>\r\n//             <Row>\r\n//             <Col>\r\n//                     <Form.Group\r\n//                       as={Col}\r\n//                       controlId=\"formGridLastName\"\r\n//                       className=\"formmargin\"\r\n//                     >\r\n//                       <Form.Label>Bank Name</Form.Label>\r\n//                       <Form.Select\r\n                        \r\n//                         required\r\n//                         name=\"bankname\"\r\n//                         placeholder=\"bank name..\"\r\n//                         // value={emp.bankname}\r\n//                         // onChange={handleinput}\r\n//                         //   disabled={disableFields}\r\n//                       >\r\n//                         <option>Please Select</option>\r\n//                         <option>MCB Limited</option>\r\n//                         <option>Bank Islami Limited</option>\r\n//                         <option>Allied Bank Limited</option>\r\n//                         <option>Bank Al-Habib Limited</option>\r\n//                         <option>Faysal Bank Limited</option>\r\n//                         <option>Mezaan Bank Limited</option>\r\n//                         <option>National Bank of Pakistan</option>\r\n//                         <option>MCB Islamic Limited</option>\r\n//                         <option>HBL</option>\r\n//                         <option>UBL</option>\r\n//                         <option>Askari Bank </option>\r\n//                       </Form.Select>\r\n//                     </Form.Group>\r\n//                   </Col>\r\n//                   <Col>\r\n//                     <Form.Group\r\n//                       as={Col}\r\n//                       controlId=\"formGridLastName\"\r\n//                       className=\"formmargin\"\r\n//                     >\r\n//                       <Form.Label>Account Title</Form.Label>\r\n//                       <Form.Control\r\n//                         type=\"text\"\r\n//                         required\r\n//                         name=\"accounttitle\"\r\n//                         placeholder=\"account title..\"\r\n//                         // value={emp.accounttitle}\r\n//                         value={props.value27}\r\n//                         // onChange={handleinput}\r\n//                         onChange={props.onChange}\r\n//                         //   disabled={disableFields}\r\n//                       />\r\n//                     </Form.Group>\r\n//                   </Col>\r\n//                   <Col>\r\n//                     <Form.Group\r\n//                       as={Col}\r\n//                       controlId=\"formGridLastName\"\r\n//                       className=\"formmargin\"\r\n//                     >\r\n//                       <Form.Label>Account No</Form.Label>\r\n//                       <Form.Control\r\n//                         type=\"text\"\r\n//                         required\r\n//                         name=\"accountno\"\r\n//                         placeholder=\"account no..\"\r\n//                         // value={emp.accountno}\r\n//                         value={props.value28}\r\n//                         // onChange={handleinput}\r\n//                         onChange={props.onChange}\r\n//                         //   disabled={disableFields}\r\n//                       />\r\n//                     </Form.Group>\r\n//                   </Col>\r\n//                 </Row>\r\n//                 <Row className=\"p-0\">\r\n//                   <Col xxl={4}>\r\n//                     <Form.Group\r\n//                       as={Col}\r\n//                       controlId=\"formGridLastName\"\r\n//                       className=\"formmargin\"\r\n//                     >\r\n//                       <Form.Label> IBAN</Form.Label>\r\n//                       <Form.Control\r\n//                         type=\"text\"\r\n//                         required\r\n//                         name=\"IBAN\"\r\n//                         placeholder=\"iban..\"\r\n//                         // value={emp.IBAN}\r\n//                         value={props.value29}\r\n//                         // onChange={handleinput}\r\n//                         onChange={props.onChange}\r\n//                         //  disabled={disableFields}\r\n//                       />\r\n//                     </Form.Group>\r\n//                   </Col>\r\n                 \r\n//                   <Col xxl={4}>\r\n//                     <Form.Group\r\n//                       as={Col}\r\n//                       controlId=\"formGridLastName\"\r\n//                       className=\"formmargin\"\r\n//                     >\r\n//                       <Form.Label>Branch code</Form.Label>\r\n//                       <Form.Control\r\n//                         type=\"text\"\r\n//                         required\r\n//                         name=\"branchcode\"\r\n//                         placeholder=\"branch code..\"\r\n//                         // value={emp.branchcode}\r\n//                         value={props.value30}\r\n//                         // onChange={handleinput}\r\n//                         onChange={props.onChange}\r\n//                         //  disabled={disableFields}\r\n//                       />\r\n//                     </Form.Group>\r\n//                   </Col>\r\n//                 </Row>\r\n//           </div>\r\n//         )\r\n//       }\r\n//     default:\r\n//       return \"unknown step\";\r\n//   }\r\n// }\r\n\r\n// const EmployeeData = (props) => {\r\n\r\n\r\n//   console.log(\"props\", props)\r\n\r\n \r\n//   const classes = useStyles();\r\n//   const [activeStep, setActiveStep] = useState(0);\r\n//   const [skippedSteps, setSkippedSteps] = useState([]);\r\n//   const steps = getSteps();\r\n\r\n//   const isStepOptional = (step) => {\r\n//     return step === 1 || step === 2;\r\n//   };\r\n\r\n//   const isStepSkipped = (step) => {\r\n//     return skippedSteps.includes(step);\r\n//   };\r\n\r\n//   const handleNext = () => {\r\n//     setActiveStep(activeStep + 1);\r\n//     setSkippedSteps(skippedSteps.filter((skipItem) => skipItem !== activeStep));\r\n//   };\r\n\r\n//   const handleBack = () => {\r\n//     setActiveStep(activeStep - 1);\r\n//   };\r\n\r\n//   const handleSkip = () => {\r\n//     if (!isStepSkipped(activeStep)) {\r\n//       setSkippedSteps([...skippedSteps, activeStep]);\r\n//     }\r\n//     setActiveStep(activeStep + 1);\r\n//   };\r\n\r\n//   return (\r\n      \r\n//     <div className=\"content-wrapper \">\r\n   \r\n//     <div className=\"col\">\r\n//                 <h3 className=\"page-title\">Add Employees</h3>\r\n//                 <ul\r\n//                   className=\"breadcrumb\"\r\n//                   style={{ backgroundColor: \"#f7f7f7\" }}\r\n//                 >\r\n//                   <li className=\"breadcrumb-item\">\r\n//                     <Link to=\"/\" style={{ color: \"#1f1f1f\" }}>\r\n//                       Dashboard\r\n//                     </Link>\r\n//                   </li>\r\n//                   <li className=\"breadcrumb-item active\">Add Employee</li>\r\n//                 </ul>\r\n                \r\n//               </div>\r\n//               <div className=\" d-flex justify-content-center \" style={{marginTop:'5%'}}>\r\n//     <Card style={{height:\"40%\"}}>\r\n//       <div style={{height:'40%'}}>\r\n//       <Card.Body >\r\n//     <div style={{display:'flex',justifyContent:'center'}}>\r\n//     <div>\r\n//       <Stepper alternativeLabel activeStep={activeStep}>\r\n//         {steps.map((step, index) => {\r\n//           const labelProps = {};\r\n//           const stepProps = {};\r\n//           // if (isStepOptional(index)) {\r\n//           //   labelProps.optional = (\r\n//           //     <Typography\r\n//           //       variant=\"caption\"\r\n//           //       align=\"center\"\r\n//           //       style={{ display: \"block\" }}\r\n//           //     >\r\n//           //       optional\r\n//           //     </Typography>\r\n//           //   );\r\n//           // }\r\n//           if (isStepSkipped(index)) {\r\n//             stepProps.completed = false;\r\n//           }\r\n//           return (\r\n//             <Step {...stepProps} key={index}>\r\n//               <StepLabel {...labelProps}>{step}</StepLabel>\r\n//             </Step>\r\n//           );\r\n//         })}\r\n//       </Stepper>\r\n\r\n//       {activeStep === steps.length ? (\r\n//         <Typography variant=\"h3\" align=\"center\">\r\n//           Thank You\r\n//         </Typography>\r\n//       ) : (\r\n//         <>\r\n//           <form>{getStepContent({props, activeStep})}</form>\r\n//           <Button\r\n//             className={classes.button}\r\n//             disabled={activeStep === 0}\r\n//             onClick={handleBack}\r\n//           >\r\n//             back\r\n//           </Button>\r\n//           {/* {isStepOptional(activeStep) && (\r\n//             <Button\r\n//               className={classes.button}\r\n//               variant=\"contained\"\r\n//               color=\"primary\"\r\n//               onClick={handleSkip}\r\n//             >\r\n//               skip\r\n//             </Button>\r\n//           )} */}\r\n//           <Button\r\n//             className={classes.button}\r\n//             variant=\"contained\"\r\n//             color=\"primary\"\r\n//             onClick={handleNext}\r\n//             type=\"submit\"\r\n//            >\r\n//             {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\r\n//           </Button>\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//     </div>\r\n//     </Card.Body>\r\n//     </div>\r\n//     </Card>\r\n//     </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default EmployeeData;\r\n\r\nimport React, { useState,useEffect } from \"react\";\r\nimport {\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n    Modal,\r\n  \r\n    Form,\r\n    Col,\r\n    Row,\r\n    Container,\r\n    FormGroup,\r\n  } from \"react-bootstrap\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport axios from \"axios\";\r\n// import Table from \"react-bootstrap/Table\";\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\nimport ViewListIcon from \"@mui/icons-material/ViewList\";\r\nimport ViewModuleIcon from \"@mui/icons-material/ViewModule\";\r\nimport ToggleButton from \"@mui/material/ToggleButton\";\r\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\r\nimport TableView from \"../TableView/Table\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport ReactFlags from \"react-flags-select\";\r\nimport { cities } from \"./cities\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\nconst moment = require(\"moment\");\r\n\r\nfunction getSteps() {\r\n  return [\r\n        \"Personal Information\",\r\n        \"Address & Region\",\r\n        \"Education Information\",\r\n        \"Previous Information\",\r\n        \"Employement Details\",\r\n        \"Bank Details\"\r\n  ];\r\n}\r\n\r\nfunction getStepContent({props,activeStep}) {\r\n  let navigate = useNavigate();\r\n  const url2 = \"/departments\";\r\n  const url = \"/employees\";\r\n  const url1 = \"/auth/register\";\r\n  const [dep, setDep] = useState([]);\r\n  const [datas, setData] = useState();\r\n  // const [modalShow, setModalShow] = React.useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const Closechildmodal = () => setShowChildModel(false);\r\n  const Closechildmodal1 = () => setShowChildModel1(false);\r\n  const showChildModel = () => setShowChildModel(true);\r\n  const showChildModel1 = () => setShowChildModel1(true);\r\n  const handleShow = () => setShow(true);\r\n  const [childModel, setShowChildModel] = useState(false);\r\n  const [childModel1, setShowChildModel1] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [birth, setbirth] = useState(\"\");\r\n  const [testUpdate, setTestUpdate] = useState(false);\r\n\r\n  const [list, setlist] = useState(false);\r\n  //for profile pic\r\n  const [file, setfile] = useState();\r\n  //Employee Add\r\n  const [emp, setEmp] = useState({\r\n    profilepic: \"\",\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    dob: \"\",\r\n    cnic: \"\",\r\n    gender: \"\",\r\n    martialStatus: \"\",\r\n    religion: \"\",\r\n    jobtitle: \"\",\r\n    username: \"\",\r\n    primaryemail: \"\",\r\n    secondaryemail: \"\",\r\n    password: \"\",\r\n    primaryphone: \"\",\r\n    secondaryphone: \"\",\r\n    permanentaddress: \"\",\r\n    temporaryaddress: \"\",\r\n    province: \"\",\r\n    city: \"\",\r\n    postalCode: \"\",\r\n    departments: \"\",\r\n    designation: \"\",\r\n    joiningdate: \"\",\r\n    educationdetails: \"\",\r\n    employementhistory: \"\",\r\n\r\n    currentSalary: \"\",\r\n    employementstatus: \"\",\r\n    //bank information\r\n    bankname: \"\",\r\n    paymentmode: \"\",\r\n    accounttitle: \"\",\r\n    accountno: \"\",\r\n    IBAN: \"\",\r\n    branchcode: \"\",\r\n    country: \"\",\r\n    //degree info\r\n  });\r\n  //educaion details add and remove //\r\n  const [education, seteducation] = useState([]);\r\n  const [selected, setSelected] = useState(\"\");\r\n  const [country, setcountry] = useState(\"\");\r\n  const [employement, setemployement] = useState([]);\r\n  const [empdetails, setempdetails] = useState({\r\n    company: \"\",\r\n    position: \"\",\r\n    joiningdate: \"\",\r\n    resignationdate: \"\",\r\n    duration: \"\",\r\n    jobdescription: \"\",\r\n  });\r\n  const [details, setdetails] = useState({\r\n    degreetitle: \"\",\r\n    institute: \"\",\r\n    start: \"\",\r\n    end: \"\",\r\n    status: \"\",\r\n  });\r\n  const removeitem = (i) => {\r\n    const temp = education;\r\n    temp.splice(i, 1);\r\n    console.log(\"splice\", temp);\r\n    seteducation(temp);\r\n    setTestUpdate(!testUpdate);\r\n  };\r\n  const removemployement = (i) => {\r\n    const temp = employement;\r\n    employement.splice(i, 1);\r\n    console.log(\"splice\", temp);\r\n    setemployement(temp);\r\n    setTestUpdate(!testUpdate);\r\n  };\r\n  const addhistory = () => {\r\n    var empl = employement;\r\n    empl.push({\r\n      company: empdetails.company,\r\n      position: empdetails.position,\r\n      joiningdate: empdetails.joiningdate,\r\n      resignationdate: empdetails.resignationdate,\r\n      duration: empdetails.duration,\r\n      jobdescription: empdetails.jobdescription,\r\n    });\r\n    console.log(\"emplllllllll\", empl);\r\n    setemployement(empl);\r\n    setEmp({ ...emp, employementhistory: empl });\r\n  };\r\n\r\n  let name, value;\r\n  const handleinput = (e) => {\r\n    console.log(e);\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n    setEmp({ ...emp, [name]: value });\r\n  };\r\n\r\n  const handleeducationdetails = async (e) => {\r\n    let name, value;\r\n\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n\r\n    await setdetails({\r\n      ...details,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  //handle user input form data\r\n\r\n  const handleempinput = async (e) => {\r\n    let name, value;\r\n\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n\r\n    await setempdetails({\r\n      ...empdetails,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const addeducation = () => {\r\n    var temp = education;\r\n    temp.push({\r\n      degreetitle: details.degreetitle,\r\n      institute: details.institute,\r\n      start: details.start,\r\n      end: details.end,\r\n      status: details.status,\r\n    });\r\n    seteducation(temp);\r\n    setEmp({ ...emp, educationdetails: education });\r\n  };\r\n\r\n  const handleempinputJoiningDate = async (e) => {\r\n    let name, value;\r\n\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n\r\n    console.log(\"change\", empdetails);\r\n\r\n    var a = moment(empdetails.resignationdate);\r\n    var b = moment(e.target.value);\r\n\r\n    var years = a.diff(b, \"year\");\r\n    b.add(years, \"years\");\r\n\r\n    var months = a.diff(b, \"months\");\r\n    b.add(months, \"months\");\r\n\r\n    var days = a.diff(b, \"days\");\r\n\r\n    console.log(years + \" years \" + months + \" months \" + days + \" days\");\r\n\r\n    await setempdetails({\r\n      ...empdetails,\r\n      [name]: e.target.value,\r\n      duration: `${years}  years  ${months}  months  ${days} days`,\r\n    });\r\n  };\r\n\r\n  const handleempinputResignationDate = async (e) => {\r\n    let name, value;\r\n\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n\r\n    var a = moment(e.target.value);\r\n    var b = moment(empdetails.joiningdate);\r\n\r\n    var years = a.diff(b, \"year\");\r\n    b.add(years, \"years\");\r\n\r\n    var months = a.diff(b, \"months\");\r\n    b.add(months, \"months\");\r\n\r\n    var days = a.diff(b, \"days\");\r\n\r\n    console.log(years + \" years \" + months + \" months \" + days + \" days\");\r\n\r\n    await setempdetails({\r\n      ...empdetails,\r\n      [name]: e.target.value,\r\n      duration: `${years}  years  ${months}  months  ${days} days`,\r\n    });\r\n  };\r\n  ///education & employement details code end;\r\n\r\n  //list and grid view start\r\n  const [view, setView] = useState(false);\r\n  const handleChange = (event, nextView) => {\r\n    setView(!view);\r\n    setView(nextView);\r\n    setView(!view);\r\n    // setlist(nextView)\r\n    console.log(nextView);\r\n  };\r\n  //   const handleChange = () => {\r\n  //     setlist(!list)\r\n  //   };\r\n  //submitting values of user\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (file) {\r\n      const data = new FormData();\r\n      const filename = Date.now() + file.name;\r\n      data.append(\"name\", filename);\r\n      data.append(\"file\", file);\r\n      emp.profilepic = filename;\r\n      try {\r\n        await axios.post(\"/upload\", data);\r\n      } catch (err) {\r\n        console.log(err);\r\n        NotificationManager.error(\"Pic not Uploaded\");\r\n      }\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post(url1, emp);\r\n      console.log(res);\r\n      res && NotificationManager.success(\"Sucessfully Added Employee\");\r\n      // res && window.location.replace(\"/employees\");\r\n    } catch (error) {\r\n      console.log(error);\r\n      NotificationManager.error(\"Something went wrong \");\r\n    }\r\n  };\r\n  //fetching employees data\r\n  const fetchData = async () => {\r\n    try {\r\n      const res = await axios.get(url);\r\n      console.log(res.data);\r\n      const data = res.data.employees;\r\n      setData(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n      NotificationManager.error(\"Api Error 404\");\r\n    }\r\n  };\r\n  //getting Employees\r\n  const getEmp = async () => {\r\n    try {\r\n      const res = await axios.get(url2);\r\n      const datas = res.data.departments;\r\n      console.log(\"departments\", datas);\r\n      setDep(datas);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n    getEmp();\r\n  }, []);\r\n  const PF = \"http://localhost:5002/images/\";\r\n  console.log('propss',props)\r\n  const step=activeStep \r\n  switch (step) {\r\n    case 0:\r\n      return (\r\n        <>\r\n   <div className=\"w-75\" id=\"responsivewidth\" style={{width:'60%', height:'40%'}}>\r\n                   <Col>                     <Row >\r\n                      <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\r\n                        <Form.Group\r\n                          as={Col}\r\n                          controlId=\"formGridFirstName\"\r\n                          className=\"formmargin\"\r\n                        >\r\n                          <Form.Label>First Name</Form.Label>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            required\r\n                            name=\"firstname\"\r\n                            placeholder=\"First Name\"\r\n                            value={emp.firstname}\r\n                            // value={props.value}\r\n                            onChange={handleinput}\r\n                            // onChange={props.onChange}\r\n                          />\r\n                        </Form.Group>\r\n                      </Col>\r\n                      <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\r\n                        <Form.Group\r\n                          as={Col}\r\n                          controlId=\"formGridLastName\"\r\n                          className=\"formmargin\"\r\n                        >\r\n                          <Form.Label>Last Name</Form.Label>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            required\r\n                            name=\"lastname\"\r\n                            placeholder=\"Last Name\"\r\n                            value={emp.lastname}\r\n                            // value={props.value1}\r\n                            onChange={handleinput}\r\n                            // onChange={props.onChange}\r\n                          />\r\n                        </Form.Group>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col xxl='6' xl='6' lg='6' md='6'>\r\n                        <Form.Group\r\n                          as={Col}\r\n                          controlId=\"formGridgender\"\r\n                          className=\"formmargin\"\r\n                        >\r\n                          <Form.Label>Gender</Form.Label>\r\n                          <Form.Select\r\n                            required\r\n                            name=\"gender\"\r\n                            value={emp.gender}\r\n                            // value={props.value2}\r\n                            onChange={handleinput}\r\n                            // onChange={props.onChange}\r\n                          >\r\n                            <option value=\"\" selected hidden disabled>\r\n                              Please Select\r\n                            </option>\r\n                            <option>Male</option>\r\n                            <option>Female</option>\r\n                            <option>Other</option>\r\n                          </Form.Select>\r\n                        </Form.Group>\r\n                      </Col>\r\n                      <Col xl='6' lg=\"6\" md=\"6\">\r\n                        <Form.Group\r\n                          as={Col}\r\n                          controlId=\"formGridFirstName\"\r\n                          className=\"formmargin\"\r\n                        >\r\n                          <Form.Label>National ID </Form.Label>\r\n                          <Form.Control\r\n                            type=\"number\"\r\n                            required\r\n                            name=\"cnic\"\r\n                            placeholder=\"CNIC\"\r\n                            value={emp.cnic}\r\n                            // value={props.value3}\r\n                            onChange={handleinput}\r\n                            // onChange={props.onChange}\r\n                            //   disabled={disableFields}\r\n                          />\r\n                        </Form.Group>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col xxl='6' xl='6' lg='6'>\r\n                        <Form.Group\r\n                          as={Col}\r\n                          controlId=\"formGridLastName\"\r\n                          className=\"formmargin\"\r\n                        >\r\n                          <Form.Label>D-0-B</Form.Label>\r\n                          {/* <DatePicker\r\n                          \r\n                            required\r\n                            selected={emp.dob}\r\n                            onChange={(date)=>{setEmp({...emp,dob:moment(date).format('dd/mm/yyyy')})}}\r\n                            // dateFormat='d MMMM, yyyy'\r\n                            dateFormat='dd/mm/yyyy'\r\n                            dropDownMode=\"select\"\r\n                          /> */}\r\n                          <Form.Control\r\n                            type=\"date\"\r\n                            required\r\n                            placeholder=\"dd/mm/yyyy\"\r\n                            name=\"dob\"\r\n                            value={emp.dob}\r\n                            // value={props.value4}\r\n                            onChange={handleinput}\r\n                            // onChange={props.onChange}\r\n                            //   disabled={disableFields}\r\n                          />\r\n                        </Form.Group>\r\n                      </Col>\r\n\r\n                      <Col  xl='6' lg=\"6\" >\r\n                        <Form.Group\r\n                          as={Col}\r\n                          controlId=\"formGridMartialStatus\"\r\n                          className=\"formmargin\"\r\n                        >\r\n                          <Form.Label>Martial Status</Form.Label>\r\n                          <Form.Select\r\n                            required\r\n                            name=\"martialStatus\"\r\n                            placeholder=\"martial status..\"\r\n                            value={emp.martialStatus}\r\n                            // value={props.value5}\r\n                            onChange={handleinput}\r\n                            // onChange={props.onChange}\r\n                            //   disabled={disableFields}\r\n                          >\r\n                            <option value=\"\" selected hidden disabled>\r\n                              Please Select\r\n                            </option>\r\n                            <option>Single</option>\r\n                            <option>Married</option>\r\n                            <option>Divorced</option>\r\n                            <option>widow</option>\r\n                          </Form.Select>\r\n                        </Form.Group>\r\n                      </Col>\r\n                      <Col xl='6' lg='6'>\r\n                        <Form.Group\r\n                          as={Col}\r\n                          controlId=\"formGridLastName\"\r\n                          className=\"formmargin\"\r\n                        >\r\n                          <Form.Label>Religion</Form.Label>\r\n                          <Form.Select\r\n                            required\r\n                            name=\"religion\"\r\n                            placeholder=\"Religion\"\r\n                            value={emp.religion}\r\n                            // value={props.value6}\r\n                            onChange={handleinput}\r\n                            // onChange={props.onChange}\r\n                            //   disabled={disableFields}\r\n                          >\r\n                            <option value=\"\" selected hidden disabled>\r\n                              Please Select\r\n                            </option>\r\n                            <option>Islam</option>\r\n                            <option>Christianity</option>\r\n                            <option>Buddhism</option>\r\n                            <option> Sikhism</option>\r\n                            <option> Hinduism</option>\r\n                            <option>Bahá’í</option>\r\n                            <option>Confucianism</option>\r\n                            <option>Jainism</option>\r\n                            <option>Judaism</option>\r\n                            <option>Zoroastrianism</option>\r\n                            <option>Druze</option>\r\n                          </Form.Select>\r\n                        </Form.Group>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  \r\n                  \r\n                  </div>\r\n                \r\n                  \r\n        </>\r\n      );\r\n      \r\n\r\n    case 1:\r\n      return (\r\n        <>\r\n         <div style={{height:'20%'}}>\r\n           <Row>\r\n                     <h5\r\n                      className=\"py-2 \"\r\n                      style={{ fontSize: \"22px\", padding: \"0px 19px\" }}\r\n                    >\r\n                      Primary\r\n                    </h5>\r\n           <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\r\n                      <Form.Group\r\n                        as={Col}\r\n                        controlId=\"formGridphone\"\r\n                        className=\"formmargin \"\r\n                      >\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <Form.Control\r\n                          type=\"number\"\r\n                          required\r\n                          name=\"primaryphone\"\r\n                          placeholder=\"phone\"\r\n                          value={emp.primaryphone}\r\n                          // value={props.value8}\r\n                          onChange={handleinput}\r\n                          // onChange={props.onChange}\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\r\n                      <Form.Group\r\n                        as={Col}\r\n                        controlId=\"formGridcompanyemail\"\r\n                        className=\"formmargin \"\r\n                      >\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control\r\n                          type=\"email\"\r\n                          required\r\n                          name=\"primaryemail\"\r\n                          placeholder=\"email\"\r\n                          value={emp.primaryemail}\r\n                          // value={props.value9}\r\n                          onChange={handleinput}\r\n                          // onChange={props.onChange}\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <h5\r\n                      className=\"py-2 \"\r\n                      style={{ fontSize: \"22px\", padding: \"0px 19px\" }}\r\n                    >\r\n                      Secondary\r\n                    </h5>\r\n                    <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\r\n                      <Form.Group\r\n                        as={Col}\r\n                        controlId=\"formGridcompanyemail\"\r\n                        className=\"formmargin \"\r\n                      >\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <Form.Control\r\n                          type=\"number\"\r\n                          required\r\n                          name=\"secondaryphone\"\r\n                          placeholder=\"secondary phone\"\r\n                          value={emp.secondaryphone}\r\n                          // value={props.value10}\r\n                          onChange={handleinput}\r\n                          // onChange={props.onChange}\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\r\n                      <Form.Group\r\n                        as={Col}\r\n                        controlId=\"formGridcompanyemail\"\r\n                        className=\"formmargin \"\r\n                      >\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control\r\n                          type=\"email\"\r\n                          required\r\n                          name=\"secondaryemail\"\r\n                          placeholder=\"secondary Email\"\r\n                          value={emp.secondaryemail}\r\n                          // value={props.value11}\r\n                          onChange={handleinput}\r\n                          // onChange={props.onChange}\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                    </Row>\r\n                    </div>\r\n        </>\r\n      );\r\n    case 2:\r\n      return (\r\n        <>\r\n          <div style={{height:'20%'}}>\r\n             <Col lg={12}>\r\n                   <Form.Group\r\n                    as={Col}\r\n                    controlId=\"formGridFirstName\"\r\n                    className=\"formmargin\"\r\n                  >\r\n                    <Form.Label>Temporary Address</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      required\r\n                      name=\"temporaryaddress\"\r\n                      placeholder=\"complete address\"\r\n                      value={emp.temporaryaddress}\r\n                      // value={props.value12}\r\n                      onChange={handleinput}\r\n                      // onChange={props.onChange}\r\n                      //   disabled={disableFields}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n\r\n                <Col lg={12}>\r\n                  <Form.Group\r\n                    as={Col}\r\n                    controlId=\"formGridFirstName\"\r\n                    className=\"formmargin\"\r\n                  >\r\n                    <Form.Label>Permanent Address</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      required\r\n                      name=\"permanentaddress\"\r\n                      placeholder=\"complete address\"\r\n                      value={emp.permanentaddress}\r\n                      // value={props.value13}\r\n                      onChange={handleinput}\r\n                      // onChange={props.onChange}\r\n                      //   disabled={disableFields}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n                {/* </Row> */}\r\n                <div style={{marginLeft:'0.75%'}}>\r\n                <Row>\r\n                  <Col>\r\n                    <Form.Label style={{marginLeft:'2%'}}>City</Form.Label>\r\n                    <Form.Group\r\n                      as={Col}\r\n                      controlId=\"formGridLastName\"\r\n                      className=\"formmargin\"\r\n                    >\r\n                      <Form.Select\r\n                        required\r\n                        onChange={handleinput}\r\n                        // onChange={props.onChange}\r\n                        name=\"city\"\r\n                        value={emp.city}\r\n                        // value={props.value14}\r\n                      >\r\n                        <option value=\"\" selected hidden disabled>\r\n                          Select City\r\n                        </option>\r\n                        \r\n                      </Form.Select>\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Label>Province</Form.Label>\r\n                    <Form.Group\r\n                      as={Col}\r\n                      controlId=\"formGridLastName\"\r\n                      className=\"formmargin\"\r\n                    >\r\n                      <Form.Select\r\n                        required\r\n                        name=\"province\"\r\n                        placeholder=\"province\"\r\n                        value={emp.province}\r\n                        // value={props.value15}\r\n                        onChange={handleinput}\r\n                        // onChange={props.onChange}\r\n                        //   disabled={disableFields}\r\n                      >\r\n                        <option value=\"\" selected hidden disabled>\r\n                          Select Province\r\n                        </option>\r\n                        <option>Punjab</option>\r\n                        <option>Sindh</option>\r\n                        <option>KPK</option>\r\n                        <option>Gilgit Baltistan</option>\r\n                        <option>Islamabad(Capital Territory)</option>\r\n                      </Form.Select>\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Group\r\n                      as={Col}\r\n                      controlId=\"formGridLastName\"\r\n                      className=\"formmargin\"\r\n                    >\r\n                      <ReactFlags\r\n                        countries={[\"PK\"]}\r\n                        selected={selected}\r\n                        onSelect={(code) => {\r\n                          setSelected(code);\r\n                          code === \"PK\" && setcountry(\"Pakistan\");\r\n                          setEmp({...emp,country:\"Pakistan\"})\r\n                        }}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col lg={4} xl={4}>\r\n                    <Form.Group\r\n                      as={Col}\r\n                      controlId=\"formGridLastName\"\r\n                      className=\"formmargin\"\r\n                    >\r\n                      <Form.Label>Postal Code</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        required\r\n                        name=\"postalCode\"\r\n                        placeholder=\"postal code\"\r\n                        value={emp.postalCode}\r\n                        // value={props.value16}\r\n                        onChange={handleinput}\r\n                        // onChange={props.onChange}\r\n                        //   disabled={disableFields}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                </div>\r\n                </div>\r\n        </>\r\n      );\r\n    case 3:\r\n      return (\r\n        <>\r\n         <div style={{width:'85%',marginLeft:'4%',height:'20%'}}>\r\n        <Row>\r\n                   <Container>\r\n                       <Row className=\"my-3\">\r\n                        \r\n                       </Row>\r\n                     </Container>\r\n                   <div className=\"my-3 d-flex \">\r\n                    \r\n\r\n                     <div className=\"d-flex justify-content-end\">\r\n                       <Button className=\"btn ml-2\"\r\n                        // onClick={()=>{props.onClick}}\r\n                        onClick={() => {\r\n                          setShowChildModel1(true);\r\n                        }}\r\n                      >\r\n                        Add Employement\r\n                      </Button>\r\n                    </div>\r\n                  </div> \r\n                  <Row className=\"my-3\">\r\n                      <Table striped bordered hover className=\"ml-4\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th>#</th>\r\n                              <th style={{textAlign:\"center\"}}>Company</th>\r\n                              <th style={{textAlign:\"center\"}}>Position</th>\r\n                              <th style={{textAlign:\"center\"}}>start Date</th>\r\n                              <th style={{textAlign:\"center\"}}>Left Date</th>\r\n                              <th style={{textAlign:\"center\"}}>duration</th>\r\n                              <th style={{textAlign:\"center\"}}>Remove</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {employement &&\r\n                              employement.map((d, i) => {\r\n                                return (\r\n                                  <>\r\n                                    <tr key={i}>\r\n                                      <th>{i+1}</th>\r\n                                      <td>{d.company}</td>\r\n                                      <td>{d.position}</td>\r\n                                      <td>{d.joiningdate}</td>\r\n                                      <td>{d.resignationdate}</td>\r\n                                      <td>{d.duration}</td>\r\n                                      <td><i class=\"fa fa-trash-can\" aria-hidden=\"true\" style={{color:'red'}} onClick={()=>removemployement(i)}></i></td>\r\n                                    </tr>\r\n                                  </>\r\n                                );\r\n                              })}\r\n                              {/* {props.employement} */}\r\n                          </tbody>\r\n                        </Table>\r\n                      </Row>\r\n            \r\n          </Row>\r\n          </div>\r\n          <Modal\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={childModel}\r\n          onHide={Closechildmodal}\r\n          size=\"lg\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title\r\n              id=\"contained-modal-title-vcenter \"\r\n              style={{ textAlign: \"center\" }}\r\n            >\r\n              <h5>Eployement Details</h5>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Container fluid>\r\n              <Row>\r\n                <div className=\"py-3\">\r\n                  <h4>Previous Employment</h4>\r\n                  <hr\r\n                    style={{\r\n                      fontWeight: \"bold\",\r\n                      borderWidth: \"2px\",\r\n                      border: \"1px solid black\",\r\n                    }}\r\n                  ></hr>\r\n                </div>\r\n\r\n                <Col>\r\n                  <Form.Group\r\n                    as={Col}\r\n                    controlId=\"formGridempcompany\"\r\n                    className=\"formmargin\"\r\n                  >\r\n                    <Form.Label>Company</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      required\r\n                      name=\"company\"\r\n                      placeholder=\"company name..\"\r\n                      value={empdetails.company}\r\n                      // onChange={handleempinput}\r\n                      onChange={handleinput}\r\n                      // disabled={disableFields}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Group\r\n                    as={Col}\r\n                    controlId=\"formGridLastName\"\r\n                    className=\"formmargin\"\r\n                  >\r\n                    <Form.Label>Position</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      required\r\n                      name=\"position\"\r\n                      placeholder=\"position..\"\r\n                      value={empdetails.position}\r\n                      onChange={handleempinput}\r\n                      // disabled={disableFields}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Form.Group\r\n                    as={Col}\r\n                    controlId=\"formGridFirstName\"\r\n                    className=\"formmargin\"\r\n                  >\r\n                    <Form.Label>Joining Date</Form.Label>\r\n                    <Form.Control\r\n                      type=\"date\"\r\n                      required\r\n                      name=\"joiningdate\"\r\n                      placeholder=\"joining date\"\r\n                      value={empdetails.joiningdate}\r\n                      onChange={async (e) => await handleempinputJoiningDate(e)}\r\n                      // disabled={disableFields}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Group\r\n                    as={Col}\r\n                    controlId=\"formGridFirstName\"\r\n                    className=\"formmargin\"\r\n                  >\r\n                    <Form.Label>Resignation Date</Form.Label>\r\n                    <Form.Control\r\n                      type=\"date\"\r\n                      required\r\n                      name=\"resignationdate\"\r\n                      placeholder=\"resignation date\"\r\n                      value={empdetails.resignationdate}\r\n                      onChange={async (e) =>\r\n                        await handleempinputResignationDate(e)\r\n                      }\r\n                      // disabled={disableFields}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Form.Label>Job Description</Form.Label>\r\n                <FormGroup\r\n                  as={Col}\r\n                  controlId=\"formGridFirstName\"\r\n                  className=\"formmargin\"\r\n                >\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={\"3\"}\r\n                    style={{ resize: \"none\" }}\r\n                    required\r\n                    name=\"jobdescription\"\r\n                    placeholder=\"Tell us about your job role & experience in previous company \"\r\n                    value={empdetails.jobdescription}\r\n                    onChange={handleempinput}\r\n                    // disabled={disableFields}\r\n                  />\r\n                </FormGroup>\r\n              </Row>\r\n              <div className=\"d-flex justify-content-center my-3\">\r\n                <Button\r\n                  onClick={() => {\r\n                    addhistory();\r\n                    Closechildmodal();\r\n                  }}\r\n                >\r\n                  Add Employement\r\n                </Button>\r\n              </div>\r\n            </Container>\r\n          </Modal.Body>\r\n        </Modal>\r\n        </>\r\n      );\r\n      case 4:{\r\n                return (\r\n                <div style={{height:'20%'}}>\r\n                  <Row>\r\n                <Col>\r\n                            <Form.Group\r\n                              as={Col}\r\n                              controlId=\"formGridLastName\"\r\n                              className=\"formmargin\"\r\n                            >\r\n                              <Form.Label>Username</Form.Label>\r\n                              <Form.Control\r\n                                type=\"text\"\r\n                                required\r\n                                name=\"username\"\r\n                                placeholder=\"username\"\r\n                                value={emp.username}\r\n                                // value={props.value21}\r\n                                onChange={handleinput}\r\n                                // onChange={props.onChange}\r\n                                //   disabled={disableFields}\r\n                              />\r\n                            </Form.Group>\r\n                          </Col>\r\n                          <Col>\r\n                            <Form.Group\r\n                              as={Col}\r\n                              controlId=\"formGridLastName\"\r\n                              className=\"formmargin\"\r\n                            >\r\n                              <Form.Label>Password</Form.Label>\r\n                              <Form.Control\r\n                                type=\"password\"\r\n                                required\r\n                                name=\"password\"\r\n                                placeholder=\"password\"\r\n                                value={emp.password}\r\n                                // value={props.value22}\r\n                                onChange={handleinput}\r\n                                // onChange={props.onChange}\r\n                                //   disabled={disableFields}\r\n                              />\r\n                            </Form.Group>\r\n                          </Col>\r\n                          <Col>\r\n                            <Form.Group\r\n                              as={Col}\r\n                              controlId=\"formGridFirstName\"\r\n                              className=\"formmargin\"\r\n                            >\r\n                              <Form.Label>Joining Date</Form.Label>\r\n                              <Form.Control\r\n                                type=\"date\"\r\n                                required\r\n                                name=\"joiningdate\"\r\n                                placeholder=\"joining date\"\r\n                                value={emp.joiningdate}\r\n                                // value={props.value19}\r\n                                onChange={handleinput}\r\n                                // onChange={props.onChange}\r\n                                //   disabled={disableFields}\r\n                              />\r\n                            </Form.Group>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Form.Group\r\n                              as={Col}\r\n                              controlId=\"formGridLastName\"\r\n                              className=\"formmargin\"\r\n                            >\r\n                              <Form.Label>Salary</Form.Label>\r\n                              <Form.Control\r\n                                type=\"Number\"\r\n                                required\r\n                                name=\"currentSalary\"\r\n                                placeholder=\"salary\"\r\n                                value={emp.currentSalary}\r\n                                // value={props.value23}\r\n                                onChange={handleinput}\r\n                                // onChange={props.onChange}\r\n                                //   disabled={disableFields}\r\n                              />\r\n                            </Form.Group>\r\n                          </Col>\r\n                          <Col>\r\n                            <Form.Group\r\n                              as={Col}\r\n                              controlId=\"formGridLastName\"\r\n                              className=\"formmargin\"\r\n                            >\r\n                              <Form.Label>Designation</Form.Label>\r\n                              <Form.Control\r\n                                type=\"text\"\r\n                                required\r\n                                name=\"designation\"\r\n                                placeholder=\"designation..\"\r\n                                value={emp.terminationreason}\r\n                                // value={props.value20}\r\n                                onChange={handleinput}\r\n                                // onChange={props.onChange}\r\n                                //   disabled={disableFields}\r\n                              />\r\n                            </Form.Group>\r\n                          </Col>\r\n                          <Col>\r\n                            <Form.Group\r\n                              as={Col}\r\n                              controlId=\"formGridFirstName\"\r\n                              className=\"formmargin\"\r\n                            >\r\n                              <Form.Label>Payment Mode</Form.Label>\r\n                              <Form.Select\r\n                                required\r\n                                name=\"paymentmode\"\r\n                                value={emp.paymentmode}\r\n                                // value={props.value25}\r\n                                onChange={handleinput}\r\n                                // onChange={props.onChange}\r\n                                //   disabled={disableFields}\r\n                              >\r\n                                <option value=\"\" selected hidden disabled>\r\n                                  Please Select\r\n                                </option>\r\n                                <option>Cheque</option>\r\n                                <option>Cash</option>\r\n                                <option>Bank Transfer</option>\r\n                              </Form.Select>\r\n                            </Form.Group>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col lg={4}>\r\n                            <Form.Group\r\n                              as={Col}\r\n                              controlId=\"formGriddepartments\"\r\n                              className=\"formmargin\"\r\n                            >\r\n                              <Form.Label>Department</Form.Label>\r\n                              <Form.Select                 name=\"departments\">\r\n                                onChange={handleinput}\r\n                                {/* onChange={props.onChange} */}\r\n                                <option disabled selected defaultValue={\"\"}>\r\n                                  Select department..\r\n                                </option>\r\n                                {dep.map((d) => {\r\n                                  return (\r\n                                    <>\r\n                                      <option key={d._id} value={d._id}>\r\n                                        {d.departmentname}\r\n                                      </option>\r\n                                    </>\r\n                                  );\r\n                                })}\r\n                              </Form.Select>\r\n                            </Form.Group>\r\n                          </Col>\r\n                          <Col xl='4'>\r\n                          <Form.Group\r\n                              as={Col}\r\n                              controlId=\"formGriddepartments\"\r\n                              className=\"formmargin\"\r\n                            >\r\n                              <Form.Label>Employement Status</Form.Label>\r\n                              <Form.Select\r\n                               onChange={handleinput} \r\n                              // onChange={props.onChange}\r\n                               name=\"employementstatus\" \r\n                               value={emp.employementstatus}\r\n                              // value={props.value41}\r\n                               >\r\n                                <option defaultValue={\"\"} disbaled selected hidden>Select Please</option>\r\n                                <option>Intern</option>\r\n                                <option>Probation</option>\r\n                                <option>Permanent</option>\r\n                                <option>Left</option>\r\n                              </Form.Select>\r\n                            </Form.Group>\r\n                          </Col>\r\n                          </Row>\r\n                </div>\r\n               \r\n        \r\n               \r\n                )\r\n              };\r\n              case 5:{\r\n                return(\r\n                  <div style={{height:'20%'}}>\r\n                    <Row>\r\n                    <Col>\r\n                            <Form.Group\r\n                              as={Col}\r\n                              controlId=\"formGridLastName\"\r\n                              className=\"formmargin\"\r\n                            >\r\n                              <Form.Label>Bank Name</Form.Label>\r\n                              <Form.Select\r\n                                \r\n                                required\r\n                                name=\"bankname\"\r\n                                placeholder=\"bank name..\"\r\n                                value={emp.bankname}\r\n                                onChange={handleinput}\r\n                                //   disabled={disableFields}\r\n                              >\r\n                                <option>Please Select</option>\r\n                                <option>MCB Limited</option>\r\n                                <option>Bank Islami Limited</option>\r\n                                <option>Allied Bank Limited</option>\r\n                                <option>Bank Al-Habib Limited</option>\r\n                                <option>Faysal Bank Limited</option>\r\n                                <option>Mezaan Bank Limited</option>\r\n                                <option>National Bank of Pakistan</option>\r\n                                <option>MCB Islamic Limited</option>\r\n                                <option>HBL</option>\r\n                                <option>UBL</option>\r\n                                <option>Askari Bank </option>\r\n                              </Form.Select>\r\n                            </Form.Group>\r\n                          </Col>\r\n                          <Col>\r\n                            <Form.Group\r\n                              as={Col}\r\n                              controlId=\"formGridLastName\"\r\n                              className=\"formmargin\"\r\n                            >\r\n                              <Form.Label>Account Title</Form.Label>\r\n                              <Form.Control\r\n                                type=\"text\"\r\n                                required\r\n                                name=\"accounttitle\"\r\n                                placeholder=\"account title..\"\r\n                                value={emp.accounttitle}\r\n                                // value={props.value27}\r\n                                onChange={handleinput}\r\n                                // onChange={props.onChange}\r\n                                //   disabled={disableFields}\r\n                              />\r\n                            </Form.Group>\r\n                          </Col>\r\n                          <Col>\r\n                            <Form.Group\r\n                              as={Col}\r\n                              controlId=\"formGridLastName\"\r\n                              className=\"formmargin\"\r\n                            >\r\n                              <Form.Label>Account No</Form.Label>\r\n                              <Form.Control\r\n                                type=\"text\"\r\n                                required\r\n                                name=\"accountno\"\r\n                                placeholder=\"account no..\"\r\n                                value={emp.accountno}\r\n                                // value={props.value28}\r\n                                onChange={handleinput}\r\n                                // onChange={props.onChange}\r\n                                //   disabled={disableFields}\r\n                              />\r\n                            </Form.Group>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row className=\"p-0\">\r\n                          <Col xxl={4}>\r\n                            <Form.Group\r\n                              as={Col}\r\n                              controlId=\"formGridLastName\"\r\n                              className=\"formmargin\"\r\n                            >\r\n                              <Form.Label> IBAN</Form.Label>\r\n                              <Form.Control\r\n                                type=\"text\"\r\n                                required\r\n                                name=\"IBAN\"\r\n                                placeholder=\"iban..\"\r\n                                value={emp.IBAN}\r\n                                // value={props.value29}\r\n                                onChange={handleinput}\r\n                                // onChange={props.onChange}\r\n                                //  disabled={disableFields}\r\n                              />\r\n                            </Form.Group>\r\n                          </Col>\r\n                         \r\n                          <Col xxl={4}>\r\n                            <Form.Group\r\n                              as={Col}\r\n                              controlId=\"formGridLastName\"\r\n                              className=\"formmargin\"\r\n                            >\r\n                              <Form.Label>Branch code</Form.Label>\r\n                              <Form.Control\r\n                                type=\"text\"\r\n                                required\r\n                                name=\"branchcode\"\r\n                                placeholder=\"branch code..\"\r\n                                value={emp.branchcode}\r\n                                // value={props.value30}\r\n                                onChange={handleinput}\r\n                                // onChange={props.onChange}\r\n                                //  disabled={disableFields}\r\n                              />\r\n                            </Form.Group>\r\n                          </Col>\r\n                        </Row>\r\n                  </div>\r\n                )\r\n              }\r\n    default:\r\n      return \"unknown step\";\r\n  }\r\n}\r\n\r\nconst EmployeeData = (props) => {\r\n  console.log('props1',props)\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [skippedSteps, setSkippedSteps] = useState([]);\r\n  const steps = getSteps();\r\n\r\n  const isStepOptional = (step) => {\r\n    return step === 1 || step === 2;\r\n  };\r\n\r\n  const isStepSkipped = (step) => {\r\n    return skippedSteps.includes(step);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(activeStep + 1);\r\n    setSkippedSteps(skippedSteps.filter((skipItem) => skipItem !== activeStep));\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    if (!isStepSkipped(activeStep)) {\r\n      setSkippedSteps([...skippedSteps, activeStep]);\r\n    }\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"content-wrapper \">\r\n   \r\n         <div className=\"col\">\r\n                     <h3 className=\"page-title\">Add Employees</h3>\r\n                   <ul\r\n                      className=\"breadcrumb\"\r\n                      style={{ backgroundColor: \"#f7f7f7\" }}\r\n                    >\r\n                      <li className=\"breadcrumb-item\">\r\n                        <Link to=\"/\" style={{ color: \"#1f1f1f\" }}>\r\n                          Dashboard\r\n                        </Link>\r\n                      </li>\r\n                      <li className=\"breadcrumb-item active\">Add Employee</li>\r\n                    </ul>\r\n                    \r\n                  </div>\r\n                  <div className=\" d-flex justify-content-center \" style={{marginTop:'5%'}}>\r\n        <Card style={{height:\"40%\"}}>\r\n          <div style={{height:'40%'}}>\r\n          <Card.Body >\r\n        <div style={{display:'flex',justifyContent:'center'}}>\r\n        <div>\r\n          <Stepper alternativeLabel activeStep={activeStep}>\r\n            {steps.map((step, index) => {\r\n              const labelProps = {};\r\n              const stepProps = {};\r\n              // if (isStepOptional(index)) {\r\n              //   labelProps.optional = (\r\n              //     <Typography\r\n              //       variant=\"caption\"\r\n              //       align=\"center\"\r\n              //       style={{ display: \"block\" }}\r\n              //     >\r\n              //       optional\r\n              //     </Typography>\r\n              //   );\r\n              // }\r\n              if (isStepSkipped(index)) {\r\n                stepProps.completed = false;\r\n              }\r\n              return (\r\n                <Step {...stepProps} key={index}>\r\n                  <StepLabel {...labelProps}>{step}</StepLabel>\r\n                </Step>\r\n              );\r\n            })}\r\n          </Stepper>\r\n    \r\n          {activeStep === steps.length ? (\r\n            <Typography variant=\"h3\" align=\"center\">\r\n              Thank You\r\n            </Typography>\r\n          ) : (\r\n            <>\r\n              <form>{getStepContent({props,activeStep})}</form>\r\n              <Button\r\n                className={classes.button}\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n              >\r\n                back\r\n              </Button>\r\n              {/* {isStepOptional(activeStep) && (\r\n                <Button\r\n                  className={classes.button}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleSkip}\r\n                >\r\n                  skip\r\n                </Button>\r\n              )} */}\r\n              <Button\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                type=\"submit\"\r\n               >\r\n                {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\r\n              </Button>\r\n            </>\r\n          )}\r\n        </div>\r\n        </div>\r\n        </Card.Body>\r\n        </div>\r\n        </Card>\r\n        </div>\r\n        </div>\r\n      );\r\n    };\r\nexport default EmployeeData;"],"mappings":";;;;;;;+CACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AACjD,SACEC,UAAU,EACVC,SAAS,EACTC,MAAM,EACNC,OAAO,EACPC,IAAI,EACJC,SAAS,QACJ,mBAAmB;AAC1B,SAASC,UAAU,QAAQ,0BAA0B;AACrD,SACIC,KAAK,EAELC,IAAI,EACJC,GAAG,EACHC,GAAG,EACHC,SAAS,EACTC,SAAS,QACJ,iBAAiB;AAC1B,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAO,sCAAsC;AAC7C,OAAO,2CAA2C;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SACEC,qBAAqB,EACrBC,mBAAmB,QACd,qBAAqB;AAC5B,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,iBAAiB,MAAM,iCAAiC;AAC/D,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,SAASC,MAAM,QAAQ,UAAU;AACjC,IAAMC,SAAS,GAAGtB,UAAU,CAAC,UAACuB,KAAK;EAAA,OAAM;IACvCC,MAAM,EAAE;MACNC,WAAW,EAAEF,KAAK,CAACG,OAAO,CAAC,CAAC;IAC9B;EACF,CAAC;AAAA,CAAC,CAAC;AACH,IAAMC,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAEhC,SAASC,QAAQ,GAAG;EAClB,OAAO,CACD,sBAAsB,EACtB,kBAAkB,EAClB,uBAAuB,EACvB,sBAAsB,EACtB,qBAAqB,EACrB,cAAc,CACnB;AACH;AAEA,SAASC,cAAc,OAAqB;EAAA;EAAA,IAAnBC,KAAK,QAALA,KAAK;IAACC,UAAU,QAAVA,UAAU;EACvC,IAAIC,QAAQ,GAAGf,WAAW,EAAE;EAC5B,IAAMgB,IAAI,GAAG,cAAc;EAC3B,IAAMC,GAAG,GAAG,YAAY;EACxB,IAAMC,IAAI,GAAG,gBAAgB;EAAC,gBACR5C,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA3B6C,GAAG;IAAEC,MAAM;EAAA,iBACO9C,QAAQ,EAAE;IAAA;IAA5B+C,KAAK;IAAEC,OAAO,kBACrB;EACA,IAAMC,WAAW,GAAG,SAAdA,WAAW;IAAA,OAASC,OAAO,CAAC,KAAK,CAAC;EAAA;EACxC,IAAMC,eAAe,GAAG,SAAlBA,eAAe;IAAA,OAASC,iBAAiB,CAAC,KAAK,CAAC;EAAA;EACtD,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB;IAAA,OAASC,kBAAkB,CAAC,KAAK,CAAC;EAAA;EACxD,IAAMC,cAAc,GAAG,SAAjBA,cAAc;IAAA,OAASH,iBAAiB,CAAC,IAAI,CAAC;EAAA;EACpD,IAAMI,eAAe,GAAG,SAAlBA,eAAe;IAAA,OAASF,kBAAkB,CAAC,IAAI,CAAC;EAAA;EACtD,IAAMG,UAAU,GAAG,SAAbA,UAAU;IAAA,OAASP,OAAO,CAAC,IAAI,CAAC;EAAA;EAAC,iBACClD,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAhD0D,UAAU;IAAEN,iBAAiB;EAAA,iBACMpD,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAlD2D,WAAW;IAAEL,kBAAkB;EAAA,iBACdtD,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAhC4D,IAAI;IAAEV,OAAO;EAAA,kBACMlD,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/B6D,KAAK;IAAEC,QAAQ;EAAA,kBACc9D,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA5C+D,UAAU;IAAEC,aAAa;EAAA,kBAERhE,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAhCiE,IAAI;IAAEC,OAAO,mBACpB;EAAA,kBACwBlE,QAAQ,EAAE;IAAA;IAA3BmE,IAAI;IAAEC,OAAO,mBACpB;EAAA,kBACsBpE,QAAQ,CAAC;MAC7BqE,UAAU,EAAE,EAAE;MACdC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,GAAG,EAAE,EAAE;MACPC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAE,EAAE;MACVC,aAAa,EAAE,EAAE;MACjBC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE,EAAE;MAChBC,cAAc,EAAE,EAAE;MAClBC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE,EAAE;MAChBC,cAAc,EAAE,EAAE;MAClBC,gBAAgB,EAAE,EAAE;MACpBC,gBAAgB,EAAE,EAAE;MACpBC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE,EAAE;MACRC,UAAU,EAAE,EAAE;MACdC,WAAW,EAAE,EAAE;MACfC,WAAW,EAAE,EAAE;MACfC,WAAW,EAAE,EAAE;MACfC,gBAAgB,EAAE,EAAE;MACpBC,kBAAkB,EAAE,EAAE;MAEtBC,aAAa,EAAE,EAAE;MACjBC,iBAAiB,EAAE,EAAE;MACrB;MACAC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE,EAAE;MACfC,YAAY,EAAE,EAAE;MAChBC,SAAS,EAAE,EAAE;MACbC,IAAI,EAAE,EAAE;MACRC,UAAU,EAAE,EAAE;MACdC,OAAO,EAAE;MACT;IACF,CAAC,CAAC;IAAA;IAtCKC,GAAG;IAAEC,MAAM,mBAuClB;EAAA,kBACkCxG,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAvCyG,SAAS;IAAEC,YAAY;EAAA,kBACE1G,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArC2G,QAAQ;IAAEC,WAAW;EAAA,kBACE5G,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAnCsG,OAAO;IAAEO,UAAU;EAAA,kBACY7G,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA3C8G,WAAW;IAAEC,cAAc;EAAA,kBACE/G,QAAQ,CAAC;MAC3CgH,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE,EAAE;MACZtB,WAAW,EAAE,EAAE;MACfuB,eAAe,EAAE,EAAE;MACnBC,QAAQ,EAAE,EAAE;MACZC,cAAc,EAAE;IAClB,CAAC,CAAC;IAAA;IAPKC,UAAU;IAAEC,aAAa;EAAA,kBAQFtH,QAAQ,CAAC;MACrCuH,WAAW,EAAE,EAAE;MACfC,SAAS,EAAE,EAAE;MACbC,KAAK,EAAE,EAAE;MACTC,GAAG,EAAE,EAAE;MACPC,MAAM,EAAE;IACV,CAAC,CAAC;IAAA;IANKC,OAAO;IAAEC,UAAU;EAO1B,IAAMC,UAAU,GAAG,SAAbA,UAAU,CAAIC,CAAC,EAAK;IACxB,IAAMC,IAAI,GAAGvB,SAAS;IACtBuB,IAAI,CAACC,MAAM,CAACF,CAAC,EAAE,CAAC,CAAC;IACjBG,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEH,IAAI,CAAC;IAC3BtB,YAAY,CAACsB,IAAI,CAAC;IAClBhE,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;EACD,IAAMqE,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAIL,CAAC,EAAK;IAC9B,IAAMC,IAAI,GAAGlB,WAAW;IACxBA,WAAW,CAACmB,MAAM,CAACF,CAAC,EAAE,CAAC,CAAC;IACxBG,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEH,IAAI,CAAC;IAC3BjB,cAAc,CAACiB,IAAI,CAAC;IACpBhE,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;EACD,IAAMsE,UAAU,GAAG,SAAbA,UAAU,GAAS;IACvB,IAAIC,IAAI,GAAGxB,WAAW;IACtBwB,IAAI,CAACC,IAAI,CAAC;MACRvB,OAAO,EAAEK,UAAU,CAACL,OAAO;MAC3BC,QAAQ,EAAEI,UAAU,CAACJ,QAAQ;MAC7BtB,WAAW,EAAE0B,UAAU,CAAC1B,WAAW;MACnCuB,eAAe,EAAEG,UAAU,CAACH,eAAe;MAC3CC,QAAQ,EAAEE,UAAU,CAACF,QAAQ;MAC7BC,cAAc,EAAEC,UAAU,CAACD;IAC7B,CAAC,CAAC;IACFc,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEG,IAAI,CAAC;IACjCvB,cAAc,CAACuB,IAAI,CAAC;IACpB9B,MAAM,mBAAMD,GAAG;MAAEV,kBAAkB,EAAEyC;IAAI,GAAG;EAC9C,CAAC;EAED,IAAIE,IAAI,EAAEC,KAAK;EACf,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAIC,CAAC,EAAK;IACzBT,OAAO,CAACC,GAAG,CAACQ,CAAC,CAAC;IACdH,IAAI,GAAGG,CAAC,CAACC,MAAM,CAACJ,IAAI;IACpBC,KAAK,GAAGE,CAAC,CAACC,MAAM,CAACH,KAAK;IACtBjC,MAAM,mBAAMD,GAAG,sBAAGiC,IAAI,EAAGC,KAAK,GAAG;EACnC,CAAC;EAED,IAAMI,sBAAsB;IAAA,uEAAG,iBAAOF,CAAC;MAAA;MAAA;QAAA;UAAA;YAAA;cAGrCH,IAAI,GAAGG,CAAC,CAACC,MAAM,CAACJ,IAAI;cACpBC,KAAK,GAAGE,CAAC,CAACC,MAAM,CAACH,KAAK;cAAC;cAAA,OAEjBZ,UAAU,mBACXD,OAAO,sBACTY,IAAI,EAAGC,KAAK,GACb;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CACH;IAAA,gBAVKI,sBAAsB;MAAA;IAAA;EAAA,GAU3B;;EAED;;EAEA,IAAMC,cAAc;IAAA,uEAAG,kBAAOH,CAAC;MAAA;MAAA;QAAA;UAAA;YAAA;cAG7BH,IAAI,GAAGG,CAAC,CAACC,MAAM,CAACJ,IAAI;cACpBC,KAAK,GAAGE,CAAC,CAACC,MAAM,CAACH,KAAK;cAAC;cAAA,OAEjBnB,aAAa,mBACdD,UAAU,sBACZmB,IAAI,EAAGC,KAAK,GACb;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CACH;IAAA,gBAVKK,cAAc;MAAA;IAAA;EAAA,GAUnB;EAED,IAAMC,YAAY,GAAG,SAAfA,YAAY,GAAS;IACzB,IAAIf,IAAI,GAAGvB,SAAS;IACpBuB,IAAI,CAACO,IAAI,CAAC;MACRhB,WAAW,EAAEK,OAAO,CAACL,WAAW;MAChCC,SAAS,EAAEI,OAAO,CAACJ,SAAS;MAC5BC,KAAK,EAAEG,OAAO,CAACH,KAAK;MACpBC,GAAG,EAAEE,OAAO,CAACF,GAAG;MAChBC,MAAM,EAAEC,OAAO,CAACD;IAClB,CAAC,CAAC;IACFjB,YAAY,CAACsB,IAAI,CAAC;IAClBxB,MAAM,mBAAMD,GAAG;MAAEX,gBAAgB,EAAEa;IAAS,GAAG;EACjD,CAAC;EAED,IAAMuC,yBAAyB;IAAA,uEAAG,kBAAOL,CAAC;MAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAGxCH,IAAI,GAAGG,CAAC,CAACC,MAAM,CAACJ,IAAI;cACpBC,KAAK,GAAGE,CAAC,CAACC,MAAM,CAACH,KAAK;cAEtBP,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEd,UAAU,CAAC;cAE7B4B,CAAC,GAAG9G,MAAM,CAACkF,UAAU,CAACH,eAAe,CAAC;cACtCgC,CAAC,GAAG/G,MAAM,CAACwG,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;cAE1BU,KAAK,GAAGF,CAAC,CAACG,IAAI,CAACF,CAAC,EAAE,MAAM,CAAC;cAC7BA,CAAC,CAACG,GAAG,CAACF,KAAK,EAAE,OAAO,CAAC;cAEjBG,MAAM,GAAGL,CAAC,CAACG,IAAI,CAACF,CAAC,EAAE,QAAQ,CAAC;cAChCA,CAAC,CAACG,GAAG,CAACC,MAAM,EAAE,QAAQ,CAAC;cAEnBC,IAAI,GAAGN,CAAC,CAACG,IAAI,CAACF,CAAC,EAAE,MAAM,CAAC;cAE5BhB,OAAO,CAACC,GAAG,CAACgB,KAAK,GAAG,SAAS,GAAGG,MAAM,GAAG,UAAU,GAAGC,IAAI,GAAG,OAAO,CAAC;cAAC;cAAA,OAEhEjC,aAAa,mBACdD,UAAU,wDACZmB,IAAI,EAAGG,CAAC,CAACC,MAAM,CAACH,KAAK,yDACTU,KAAK,sBAAYG,MAAM,uBAAaC,IAAI,8BACrD;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CACH;IAAA,gBA1BKP,yBAAyB;MAAA;IAAA;EAAA,GA0B9B;EAED,IAAMQ,6BAA6B;IAAA,uEAAG,kBAAOb,CAAC;MAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAG5CH,IAAI,GAAGG,CAAC,CAACC,MAAM,CAACJ,IAAI;cACpBC,KAAK,GAAGE,CAAC,CAACC,MAAM,CAACH,KAAK;cAElBQ,CAAC,GAAG9G,MAAM,CAACwG,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;cAC1BS,CAAC,GAAG/G,MAAM,CAACkF,UAAU,CAAC1B,WAAW,CAAC;cAElCwD,KAAK,GAAGF,CAAC,CAACG,IAAI,CAACF,CAAC,EAAE,MAAM,CAAC;cAC7BA,CAAC,CAACG,GAAG,CAACF,KAAK,EAAE,OAAO,CAAC;cAEjBG,MAAM,GAAGL,CAAC,CAACG,IAAI,CAACF,CAAC,EAAE,QAAQ,CAAC;cAChCA,CAAC,CAACG,GAAG,CAACC,MAAM,EAAE,QAAQ,CAAC;cAEnBC,IAAI,GAAGN,CAAC,CAACG,IAAI,CAACF,CAAC,EAAE,MAAM,CAAC;cAE5BhB,OAAO,CAACC,GAAG,CAACgB,KAAK,GAAG,SAAS,GAAGG,MAAM,GAAG,UAAU,GAAGC,IAAI,GAAG,OAAO,CAAC;cAAC;cAAA,OAEhEjC,aAAa,mBACdD,UAAU,wDACZmB,IAAI,EAAGG,CAAC,CAACC,MAAM,CAACH,KAAK,yDACTU,KAAK,sBAAYG,MAAM,uBAAaC,IAAI,8BACrD;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CACH;IAAA,gBAxBKC,6BAA6B;MAAA;IAAA;EAAA,GAwBlC;EACD;;EAEA;EAAA,kBACwBxJ,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAhCyJ,IAAI;IAAEC,OAAO;EACpB,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAIC,KAAK,EAAEC,QAAQ,EAAK;IACxCH,OAAO,CAAC,CAACD,IAAI,CAAC;IACdC,OAAO,CAACG,QAAQ,CAAC;IACjBH,OAAO,CAAC,CAACD,IAAI,CAAC;IACd;IACAvB,OAAO,CAACC,GAAG,CAAC0B,QAAQ,CAAC;EACvB,CAAC;EACD;EACA;EACA;EACA;EACA,IAAMC,YAAY;IAAA,uEAAG,kBAAOnB,CAAC;MAAA;MAAA;QAAA;UAAA;YAAA;cAC3BA,CAAC,CAACoB,cAAc,EAAE;cAAC,KACf5F,IAAI;gBAAA;gBAAA;cAAA;cACA6F,IAAI,GAAG,IAAIC,QAAQ,EAAE;cACrBC,QAAQ,GAAGC,IAAI,CAACC,GAAG,EAAE,GAAGjG,IAAI,CAACqE,IAAI;cACvCwB,IAAI,CAACK,MAAM,CAAC,MAAM,EAAEH,QAAQ,CAAC;cAC7BF,IAAI,CAACK,MAAM,CAAC,MAAM,EAAElG,IAAI,CAAC;cACzBoC,GAAG,CAAClC,UAAU,GAAG6F,QAAQ;cAAC;cAAA;cAAA,OAElBjJ,KAAK,CAACqJ,IAAI,CAAC,SAAS,EAAEN,IAAI,CAAC;YAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAEjC9B,OAAO,CAACC,GAAG,cAAK;cAChB/G,mBAAmB,CAACmJ,KAAK,CAAC,kBAAkB,CAAC;YAAC;cAAA;cAAA;cAAA,OAK9BtJ,KAAK,CAACqJ,IAAI,CAAC1H,IAAI,EAAE2D,GAAG,CAAC;YAAA;cAAjCiE,GAAG;cACTtC,OAAO,CAACC,GAAG,CAACqC,GAAG,CAAC;cAChBA,GAAG,IAAIpJ,mBAAmB,CAACqJ,OAAO,CAAC,4BAA4B,CAAC;cAChE;cAAA;cAAA;YAAA;cAAA;cAAA;cAEAvC,OAAO,CAACC,GAAG,cAAO;cAClB/G,mBAAmB,CAACmJ,KAAK,CAAC,uBAAuB,CAAC;YAAC;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAEtD;IAAA,gBAzBKT,YAAY;MAAA;IAAA;EAAA,GAyBjB;EACD;EACA,IAAMY,SAAS;IAAA,uEAAG;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA;cAAA,OAEIzJ,KAAK,CAAC0J,GAAG,CAAChI,GAAG,CAAC;YAAA;cAA1B6H,GAAG;cACTtC,OAAO,CAACC,GAAG,CAACqC,GAAG,CAACR,IAAI,CAAC;cACfA,IAAI,GAAGQ,GAAG,CAACR,IAAI,CAACY,SAAS;cAC/B5H,OAAO,CAACgH,IAAI,CAAC;cAAC;cAAA;YAAA;cAAA;cAAA;cAEd9B,OAAO,CAACC,GAAG,cAAO;cAClB/G,mBAAmB,CAACmJ,KAAK,CAAC,eAAe,CAAC;YAAC;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAE9C;IAAA,gBAVKG,SAAS;MAAA;IAAA;EAAA,GAUd;EACD;EACA,IAAMG,MAAM;IAAA,uEAAG;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA;cAAA,OAEO5J,KAAK,CAAC0J,GAAG,CAACjI,IAAI,CAAC;YAAA;cAA3B8H,GAAG;cACHzH,MAAK,GAAGyH,GAAG,CAACR,IAAI,CAACvE,WAAW;cAClCyC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEpF,MAAK,CAAC;cACjCD,MAAM,CAACC,MAAK,CAAC;cAAC;cAAA;YAAA;cAAA;cAAA;cAEdmF,OAAO,CAACC,GAAG,cAAO;YAAC;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAEtB;IAAA,gBATK0C,MAAM;MAAA;IAAA;EAAA,GASX;EACD5K,SAAS,CAAC,YAAM;IACdyK,SAAS,EAAE;IACXG,MAAM,EAAE;EACV,CAAC,EAAE,EAAE,CAAC;EACN,IAAMC,EAAE,GAAG,+BAA+B;EAC1C5C,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAC5F,KAAK,CAAC;EAC3B,IAAMwI,IAAI,GAACvI,UAAU;EACrB,QAAQuI,IAAI;IACV,KAAK,CAAC;MACJ,oBACE,uDACL;QAAK,SAAS,EAAC,MAAM;QAAC,EAAE,EAAC,iBAAiB;QAAC,KAAK,EAAE;UAACC,KAAK,EAAC,KAAK;UAAEC,MAAM,EAAC;QAAK,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAC9D,oBAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,yCAAsB,oBAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAC3B,oBAAC,GAAG;QAAC,GAAG,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAC/B,oBAAC,IAAI,CAAC,KAAK;QACT,EAAE,EAAEtK,GAAI;QACR,SAAS,EAAC,mBAAmB;QAC7B,SAAS,EAAC,YAAY;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAEtB,oBAAC,IAAI,CAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAAwB,eACnC,oBAAC,IAAI,CAAC,OAAO;QACX,IAAI,EAAC,MAAM;QACX,QAAQ;QACR,IAAI,EAAC,WAAW;QAChB,WAAW,EAAC,YAAY;QACxB,KAAK,EAAE4F,GAAG,CAACjC;QACX;QAAA;QACA,QAAQ,EAAEoE;QACV;QAAA;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACA,CACS,CACT,eACN,oBAAC,GAAG;QAAC,GAAG,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAC/B,oBAAC,IAAI,CAAC,KAAK;QACT,EAAE,EAAE/H,GAAI;QACR,SAAS,EAAC,kBAAkB;QAC5B,SAAS,EAAC,YAAY;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAEtB,oBAAC,IAAI,CAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,eAAuB,eAClC,oBAAC,IAAI,CAAC,OAAO;QACX,IAAI,EAAC,MAAM;QACX,QAAQ;QACR,IAAI,EAAC,UAAU;QACf,WAAW,EAAC,WAAW;QACvB,KAAK,EAAE4F,GAAG,CAAChC;QACX;QAAA;QACA,QAAQ,EAAEmE;QACV;QAAA;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACA,CACS,CACT,CACF,eACN,oBAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACF,oBAAC,GAAG;QAAC,GAAG,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAC/B,oBAAC,IAAI,CAAC,KAAK;QACT,EAAE,EAAE/H,GAAI;QACR,SAAS,EAAC,gBAAgB;QAC1B,SAAS,EAAC,YAAY;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAEtB,oBAAC,IAAI,CAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,YAAoB,eAC/B,oBAAC,IAAI,CAAC,MAAM;QACV,QAAQ;QACR,IAAI,EAAC,QAAQ;QACb,KAAK,EAAE4F,GAAG,CAAC7B;QACX;QAAA;QACA,QAAQ,EAAEgE;QACV;QAAA;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAEA;QAAQ,KAAK,EAAC,EAAE;QAAC,QAAQ;QAAC,MAAM;QAAC,QAAQ;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,mBAEhC,eACT;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,UAAqB,eACrB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,YAAuB,eACvB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,WAAsB,CACV,CACH,CACT,eACN,oBAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACvB,oBAAC,IAAI,CAAC,KAAK;QACT,EAAE,EAAE/H,GAAI;QACR,SAAS,EAAC,mBAAmB;QAC7B,SAAS,EAAC,YAAY;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAEtB,oBAAC,IAAI,CAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,kBAA0B,eACrC,oBAAC,IAAI,CAAC,OAAO;QACX,IAAI,EAAC,QAAQ;QACb,QAAQ;QACR,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,MAAM;QAClB,KAAK,EAAE4F,GAAG,CAAC9B;QACX;QAAA;QACA,QAAQ,EAAEiE;QACV;QACA;QAAA;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACA,CACS,CACT,CACF,eACN,oBAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACF,oBAAC,GAAG;QAAC,GAAG,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACxB,oBAAC,IAAI,CAAC,KAAK;QACT,EAAE,EAAE/H,GAAI;QACR,SAAS,EAAC,kBAAkB;QAC5B,SAAS,EAAC,YAAY;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAEtB,oBAAC,IAAI,CAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,WAAmB,eAU9B,oBAAC,IAAI,CAAC,OAAO;QACX,IAAI,EAAC,MAAM;QACX,QAAQ;QACR,WAAW,EAAC,YAAY;QACxB,IAAI,EAAC,KAAK;QACV,KAAK,EAAE4F,GAAG,CAAC/B;QACX;QAAA;QACA,QAAQ,EAAEkE;QACV;QACA;QAAA;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACA,CACS,CACT,eAEN,oBAAC,GAAG;QAAE,EAAE,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACjB,oBAAC,IAAI,CAAC,KAAK;QACT,EAAE,EAAE/H,GAAI;QACR,SAAS,EAAC,uBAAuB;QACjC,SAAS,EAAC,YAAY;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAEtB,oBAAC,IAAI,CAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,oBAA4B,eACvC,oBAAC,IAAI,CAAC,MAAM;QACV,QAAQ;QACR,IAAI,EAAC,eAAe;QACpB,WAAW,EAAC,kBAAkB;QAC9B,KAAK,EAAE4F,GAAG,CAAC5B;QACX;QAAA;QACA,QAAQ,EAAE+D;QACV;QACA;QAAA;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAEA;QAAQ,KAAK,EAAC,EAAE;QAAC,QAAQ;QAAC,MAAM;QAAC,QAAQ;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,mBAEhC,eACT;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,YAAuB,eACvB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,aAAwB,eACxB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,cAAyB,eACzB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,WAAsB,CACV,CACH,CACT,eACN,oBAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAChB,oBAAC,IAAI,CAAC,KAAK;QACT,EAAE,EAAE/H,GAAI;QACR,SAAS,EAAC,kBAAkB;QAC5B,SAAS,EAAC,YAAY;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAEtB,oBAAC,IAAI,CAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,cAAsB,eACjC,oBAAC,IAAI,CAAC,MAAM;QACV,QAAQ;QACR,IAAI,EAAC,UAAU;QACf,WAAW,EAAC,UAAU;QACtB,KAAK,EAAE4F,GAAG,CAAC3B;QACX;QAAA;QACA,QAAQ,EAAE8D;QACV;QACA;QAAA;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAEA;QAAQ,KAAK,EAAC,EAAE;QAAC,QAAQ;QAAC,MAAM;QAAC,QAAQ;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,mBAEhC,eACT;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,WAAsB,eACtB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,kBAA6B,eAC7B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,cAAyB,eACzB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,cAAyB,eACzB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,eAA0B,eAC1B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,uBAAuB,eACvB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,kBAA6B,eAC7B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,aAAwB,eACxB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,aAAwB,eACxB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,oBAA+B,eAC/B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,WAAsB,CACV,CACH,CACT,CACF,CACF,CAGA,CAGb;IAIP,KAAK,CAAC;MACJ,oBACE,uDACC;QAAK,KAAK,EAAE;UAACuC,MAAM,EAAC;QAAK,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACzB,oBAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACM;QACC,SAAS,EAAC,OAAO;QACjB,KAAK,EAAE;UAAEC,QAAQ,EAAE,MAAM;UAAEC,OAAO,EAAE;QAAW,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,aAG9C,eACd,oBAAC,GAAG;QAAC,GAAG,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACtB,oBAAC,IAAI,CAAC,KAAK;QACT,EAAE,EAAExK,GAAI;QACR,SAAS,EAAC,eAAe;QACzB,SAAS,EAAC,aAAa;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAEvB,oBAAC,IAAI,CAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,WAAmB,eAC9B,oBAAC,IAAI,CAAC,OAAO;QACX,IAAI,EAAC,QAAQ;QACb,QAAQ;QACR,IAAI,EAAC,cAAc;QACnB,WAAW,EAAC,OAAO;QACnB,KAAK,EAAE4F,GAAG,CAACrB;QACX;QAAA;QACA,QAAQ,EAAEwD;QACV;QAAA;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACA,CACS,CACT,eACN,oBAAC,GAAG;QAAC,GAAG,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAC/B,oBAAC,IAAI,CAAC,KAAK;QACT,EAAE,EAAE/H,GAAI;QACR,SAAS,EAAC,sBAAsB;QAChC,SAAS,EAAC,aAAa;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAEvB,oBAAC,IAAI,CAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,WAAmB,eAC9B,oBAAC,IAAI,CAAC,OAAO;QACX,IAAI,EAAC,OAAO;QACZ,QAAQ;QACR,IAAI,EAAC,cAAc;QACnB,WAAW,EAAC,OAAO;QACnB,KAAK,EAAE4F,GAAG,CAACxB;QACX;QAAA;QACA,QAAQ,EAAE2D;QACV;QAAA;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACA,CACS,CACT,CACF,eAEN,oBAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACF;QACE,SAAS,EAAC,OAAO;QACjB,KAAK,EAAE;UAAEwC,QAAQ,EAAE,MAAM;UAAEC,OAAO,EAAE;QAAW,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,eAG9C,eACL,oBAAC,GAAG;QAAC,GAAG,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAC/B,oBAAC,IAAI,CAAC,KAAK;QACT,EAAE,EAAExK,GAAI;QACR,SAAS,EAAC,sBAAsB;QAChC,SAAS,EAAC,aAAa;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAEvB,oBAAC,IAAI,CAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,WAAmB,eAC9B,oBAAC,IAAI,CAAC,OAAO;QACX,IAAI,EAAC,QAAQ;QACb,QAAQ;QACR,IAAI,EAAC,gBAAgB;QACrB,WAAW,EAAC,iBAAiB;QAC7B,KAAK,EAAE4F,GAAG,CAACpB;QACX;QAAA;QACA,QAAQ,EAAEuD;QACV;QAAA;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACA,CACS,CACT,eACN,oBAAC,GAAG;QAAC,GAAG,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAC/B,oBAAC,IAAI,CAAC,KAAK;QACT,EAAE,EAAE/H,GAAI;QACR,SAAS,EAAC,sBAAsB;QAChC,SAAS,EAAC,aAAa;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAEvB,oBAAC,IAAI,CAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,WAAmB,eAC9B,oBAAC,IAAI,CAAC,OAAO;QACX,IAAI,EAAC,OAAO;QACZ,QAAQ;QACR,IAAI,EAAC,gBAAgB;QACrB,WAAW,EAAC,iBAAiB;QAC7B,KAAK,EAAE4F,GAAG,CAACvB;QACX;QAAA;QACA,QAAQ,EAAE0D;QACV;QAAA;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACA,CACS,CACT,CACA,CACA,CACf;IAEP,KAAK,CAAC;MACJ,oBACE,uDACE;QAAK,KAAK,EAAE;UAACuC,MAAM,EAAC;QAAK,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACxB,oBAAC,GAAG;QAAC,EAAE,EAAE,EAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACN,oBAAC,IAAI,CAAC,KAAK;QACV,EAAE,EAAEtK,GAAI;QACR,SAAS,EAAC,mBAAmB;QAC7B,SAAS,EAAC,YAAY;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAEtB,oBAAC,IAAI,CAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,uBAA+B,eAC1C,oBAAC,IAAI,CAAC,OAAO;QACX,IAAI,EAAC,MAAM;QACX,QAAQ;QACR,IAAI,EAAC,kBAAkB;QACvB,WAAW,EAAC,kBAAkB;QAC9B,KAAK,EAAE4F,GAAG,CAAClB;QACX;QAAA;QACA,QAAQ,EAAEqD;QACV;QACA;QAAA;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACA,CACS,CACT,eAEN,oBAAC,GAAG;QAAC,EAAE,EAAE,EAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACV,oBAAC,IAAI,CAAC,KAAK;QACT,EAAE,EAAE/H,GAAI;QACR,SAAS,EAAC,mBAAmB;QAC7B,SAAS,EAAC,YAAY;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAEtB,oBAAC,IAAI,CAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,uBAA+B,eAC1C,oBAAC,IAAI,CAAC,OAAO;QACX,IAAI,EAAC,MAAM;QACX,QAAQ;QACR,IAAI,EAAC,kBAAkB;QACvB,WAAW,EAAC,kBAAkB;QAC9B,KAAK,EAAE4F,GAAG,CAACnB;QACX;QAAA;QACA,QAAQ,EAAEsD;QACV;QACA;QAAA;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACA,CACS,CACT,eAEN;QAAK,KAAK,EAAE;UAAC0C,UAAU,EAAC;QAAO,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACjC,oBAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACF,oBAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACF,oBAAC,IAAI,CAAC,KAAK;QAAC,KAAK,EAAE;UAACA,UAAU,EAAC;QAAI,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,UAAkB,eACvD,oBAAC,IAAI,CAAC,KAAK;QACT,EAAE,EAAEzK,GAAI;QACR,SAAS,EAAC,kBAAkB;QAC5B,SAAS,EAAC,YAAY;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAEtB,oBAAC,IAAI,CAAC,MAAM;QACV,QAAQ;QACR,QAAQ,EAAE+H;QACV;QAAA;QACA,IAAI,EAAC,MAAM;QACX,KAAK,EAAEnC,GAAG,CAAChB;QACX;QAAA;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAEA;QAAQ,KAAK,EAAC,EAAE;QAAC,QAAQ;QAAC,MAAM;QAAC,QAAQ;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,iBAEhC,CAEG,CACH,CACT,eACN,oBAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACF,oBAAC,IAAI,CAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,cAAsB,eACjC,oBAAC,IAAI,CAAC,KAAK;QACT,EAAE,EAAE5E,GAAI;QACR,SAAS,EAAC,kBAAkB;QAC5B,SAAS,EAAC,YAAY;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAEtB,oBAAC,IAAI,CAAC,MAAM;QACV,QAAQ;QACR,IAAI,EAAC,UAAU;QACf,WAAW,EAAC,UAAU;QACtB,KAAK,EAAE4F,GAAG,CAACjB;QACX;QAAA;QACA,QAAQ,EAAEoD;QACV;QACA;QAAA;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAEA;QAAQ,KAAK,EAAC,EAAE;QAAC,QAAQ;QAAC,MAAM;QAAC,QAAQ;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,qBAEhC,eACT;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,YAAuB,eACvB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,WAAsB,eACtB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,SAAoB,eACpB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,sBAAiC,eACjC;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,kCAA6C,CACjC,CACH,CACT,eACN,oBAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACF,oBAAC,IAAI,CAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,aAAqB,eAChC,oBAAC,IAAI,CAAC,KAAK;QACT,EAAE,EAAE/H,GAAI;QACR,SAAS,EAAC,kBAAkB;QAC5B,SAAS,EAAC,YAAY;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAEtB,oBAAC,UAAU;QACT,SAAS,EAAE,CAAC,IAAI,CAAE;QAClB,QAAQ,EAAEgG,QAAS;QACnB,QAAQ,EAAE,kBAAC0E,IAAI,EAAK;UAClBzE,WAAW,CAACyE,IAAI,CAAC;UACjBA,IAAI,KAAK,IAAI,IAAIxE,UAAU,CAAC,UAAU,CAAC;UACvCL,MAAM,mBAAKD,GAAG;YAACD,OAAO,EAAC;UAAU,GAAE;QACrC,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACF,CACS,CACT,CACF,eACN,oBAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACF,oBAAC,GAAG;QAAC,EAAE,EAAE,CAAE;QAAC,EAAE,EAAE,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAChB,oBAAC,IAAI,CAAC,KAAK;QACT,EAAE,EAAE3F,GAAI;QACR,SAAS,EAAC,kBAAkB;QAC5B,SAAS,EAAC,YAAY;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAEtB,oBAAC,IAAI,CAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,iBAAyB,eACpC,oBAAC,IAAI,CAAC,OAAO;QACX,IAAI,EAAC,MAAM;QACX,QAAQ;QACR,IAAI,EAAC,YAAY;QACjB,WAAW,EAAC,aAAa;QACzB,KAAK,EAAE4F,GAAG,CAACf;QACX;QAAA;QACA,QAAQ,EAAEkD;QACV;QACA;QAAA;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACA,CACS,CACT,CACF,CACA,CACA,CACX;IAEP,KAAK,CAAC;MACJ,oBACE,uDACC;QAAK,KAAK,EAAE;UAACsC,KAAK,EAAC,KAAK;UAACI,UAAU,EAAC,IAAI;UAACH,MAAM,EAAC;QAAK,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACxD,oBAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACO,oBAAC,SAAS;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACN,oBAAC,GAAG;QAAC,SAAS,EAAC,MAAM;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAEf,CACI,eACd;QAAK,SAAS,EAAC,cAAc;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAG3B;QAAK,SAAS,EAAC,4BAA4B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACzC,oBAAC,MAAM;QAAC,SAAS,EAAC;QACjB;QAAA;QACA,OAAO,EAAE,mBAAM;UACb3H,kBAAkB,CAAC,IAAI,CAAC;QAC1B,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,qBAGK,CACL,CACF,eACN,oBAAC,GAAG;QAAC,SAAS,EAAC,MAAM;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACjB,oBAAC,KAAK;QAAC,OAAO;QAAC,QAAQ;QAAC,KAAK;QAAC,SAAS,EAAC,MAAM;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAC1C;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,OAAU,eACV;QAAI,KAAK,EAAE;UAACgI,SAAS,EAAC;QAAQ,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,aAAa,eAC7C;QAAI,KAAK,EAAE;UAACA,SAAS,EAAC;QAAQ,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,cAAc,eAC9C;QAAI,KAAK,EAAE;UAACA,SAAS,EAAC;QAAQ,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAAgB,eAChD;QAAI,KAAK,EAAE;UAACA,SAAS,EAAC;QAAQ,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,eAAe,eAC/C;QAAI,KAAK,EAAE;UAACA,SAAS,EAAC;QAAQ,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,cAAc,eAC9C;QAAI,KAAK,EAAE;UAACA,SAAS,EAAC;QAAQ,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,YAAY,CACzC,CACC,eACR;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACGxE,WAAW,IACVA,WAAW,CAACyE,GAAG,CAAC,UAACC,CAAC,EAAEzD,CAAC,EAAK;QACxB,oBACE,uDACE;UAAI,GAAG,EAAEA,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAKA,CAAC,GAAC,CAAC,CAAM,eACd;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAKyD,CAAC,CAACxE,OAAO,CAAM,eACpB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAKwE,CAAC,CAACvE,QAAQ,CAAM,eACrB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAKuE,CAAC,CAAC7F,WAAW,CAAM,eACxB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAK6F,CAAC,CAACtE,eAAe,CAAM,eAC5B;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAKsE,CAAC,CAACrE,QAAQ,CAAM,eACrB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAAI;UAAG,KAAK,EAAC,iBAAiB;UAAC,eAAY,MAAM;UAAC,KAAK,EAAE;YAACsE,KAAK,EAAC;UAAK,CAAE;UAAC,OAAO,EAAE;YAAA,OAAIrD,gBAAgB,CAACL,CAAC,CAAC;UAAA,CAAC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAAK,CAAK,CAChH,CACJ;MAEP,CAAC,CAAC,CAEE,CACF,CACJ,CAEZ,CACA,eACN,oBAAC,KAAK;QACN,mBAAgB,+BAA+B;QAC/C,QAAQ;QACR,IAAI,EAAErE,UAAW;QACjB,MAAM,EAAEP,eAAgB;QACxB,IAAI,EAAC,IAAI;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAET,oBAAC,KAAK,CAAC,MAAM;QAAC,WAAW;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACvB,oBAAC,KAAK,CAAC,KAAK;QACV,EAAE,EAAC,gCAAgC;QACnC,KAAK,EAAE;UAAEmI,SAAS,EAAE;QAAS,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAE/B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,wBAA2B,CACf,CACD,eACf,oBAAC,KAAK,CAAC,IAAI;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACT,oBAAC,SAAS;QAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACd,oBAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACF;QAAK,SAAS,EAAC,MAAM;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACnB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,yBAA4B,eAC5B;QACE,KAAK,EAAE;UACLI,UAAU,EAAE,MAAM;UAClBC,WAAW,EAAE,KAAK;UAClBC,MAAM,EAAE;QACV,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACE,CACF,eAEN,oBAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACF,oBAAC,IAAI,CAAC,KAAK;QACT,EAAE,EAAEjL,GAAI;QACR,SAAS,EAAC,oBAAoB;QAC9B,SAAS,EAAC,YAAY;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAEtB,oBAAC,IAAI,CAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,aAAqB,eAChC,oBAAC,IAAI,CAAC,OAAO;QACX,IAAI,EAAC,MAAM;QACX,QAAQ;QACR,IAAI,EAAC,SAAS;QACd,WAAW,EAAC,gBAAgB;QAC5B,KAAK,EAAE0G,UAAU,CAACL;QAClB;QAAA;QACA,QAAQ,EAAE0B;QACV;QAAA;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACA,CACS,CACT,eACN,oBAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACF,oBAAC,IAAI,CAAC,KAAK;QACT,EAAE,EAAE/H,GAAI;QACR,SAAS,EAAC,kBAAkB;QAC5B,SAAS,EAAC,YAAY;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAEtB,oBAAC,IAAI,CAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,cAAsB,eACjC,oBAAC,IAAI,CAAC,OAAO;QACX,IAAI,EAAC,MAAM;QACX,QAAQ;QACR,IAAI,EAAC,UAAU;QACf,WAAW,EAAC,YAAY;QACxB,KAAK,EAAE0G,UAAU,CAACJ,QAAS;QAC3B,QAAQ,EAAE6B;QACV;QAAA;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACA,CACS,CACT,CACF,eACN,oBAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACF,oBAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACF,oBAAC,IAAI,CAAC,KAAK;QACT,EAAE,EAAEnI,GAAI;QACR,SAAS,EAAC,mBAAmB;QAC7B,SAAS,EAAC,YAAY;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAEtB,oBAAC,IAAI,CAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,kBAA0B,eACrC,oBAAC,IAAI,CAAC,OAAO;QACX,IAAI,EAAC,MAAM;QACX,QAAQ;QACR,IAAI,EAAC,aAAa;QAClB,WAAW,EAAC,cAAc;QAC1B,KAAK,EAAE0G,UAAU,CAAC1B,WAAY;QAC9B,QAAQ;UAAA,uEAAE,kBAAOgD,CAAC;YAAA;cAAA;gBAAA;kBAAA;oBAAA;oBAAA,OAAWK,yBAAyB,CAACL,CAAC,CAAC;kBAAA;oBAAA;kBAAA;kBAAA;oBAAA;gBAAA;cAAA;YAAA;UAAA;UAAA;YAAA;UAAA;QAAA;QACzD;QAAA;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACA,CACS,CACT,eACN,oBAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACF,oBAAC,IAAI,CAAC,KAAK;QACT,EAAE,EAAEhI,GAAI;QACR,SAAS,EAAC,mBAAmB;QAC7B,SAAS,EAAC,YAAY;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAEtB,oBAAC,IAAI,CAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,sBAA8B,eACzC,oBAAC,IAAI,CAAC,OAAO;QACX,IAAI,EAAC,MAAM;QACX,QAAQ;QACR,IAAI,EAAC,iBAAiB;QACtB,WAAW,EAAC,kBAAkB;QAC9B,KAAK,EAAE0G,UAAU,CAACH,eAAgB;QAClC,QAAQ;UAAA,wEAAE,kBAAOyB,CAAC;YAAA;cAAA;gBAAA;kBAAA;oBAAA;oBAAA,OACVa,6BAA6B,CAACb,CAAC,CAAC;kBAAA;oBAAA;kBAAA;kBAAA;oBAAA;gBAAA;cAAA;YAAA;UAAA;UAAA;YAAA;UAAA;QAAA;QAExC;QAAA;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACA,CACS,CACT,CACF,eACN,oBAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACF,oBAAC,IAAI,CAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,qBAA6B,eACxC,oBAAC,SAAS;QACR,EAAE,EAAEhI,GAAI;QACR,SAAS,EAAC,mBAAmB;QAC7B,SAAS,EAAC,YAAY;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAEtB,oBAAC,IAAI,CAAC,OAAO;QACX,EAAE,EAAC,UAAU;QACb,IAAI,EAAE,GAAI;QACV,KAAK,EAAE;UAAEkL,MAAM,EAAE;QAAO,CAAE;QAC1B,QAAQ;QACR,IAAI,EAAC,gBAAgB;QACrB,WAAW,EAAC,+DAA+D;QAC3E,KAAK,EAAExE,UAAU,CAACD,cAAe;QACjC,QAAQ,EAAE0B;QACV;QAAA;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACA,CACQ,CACR,eACN;QAAK,SAAS,EAAC,oCAAoC;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACjD,oBAAC,MAAM;QACL,OAAO,EAAE,mBAAM;UACbT,UAAU,EAAE;UACZlF,eAAe,EAAE;QACnB,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,qBAGK,CACL,CACI,CACD,CACP,CACL;IAEL,KAAK,CAAC;MAAC;QACG,oBACA;UAAK,KAAK,EAAE;YAAC8H,MAAM,EAAC;UAAK,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACzB,oBAAC,GAAG;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACN,oBAAC,GAAG;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACQ,oBAAC,IAAI,CAAC,KAAK;UACT,EAAE,EAAEtK,GAAI;UACR,SAAS,EAAC,kBAAkB;UAC5B,SAAS,EAAC,YAAY;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAEtB,oBAAC,IAAI,CAAC,KAAK;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,cAAsB,eACjC,oBAAC,IAAI,CAAC,OAAO;UACX,IAAI,EAAC,MAAM;UACX,QAAQ;UACR,IAAI,EAAC,UAAU;UACf,WAAW,EAAC,UAAU;UACtB,KAAK,EAAE4F,GAAG,CAACzB;UACX;UAAA;UACA,QAAQ,EAAE4D;UACV;UACA;UAAA;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EACA,CACS,CACT,eACN,oBAAC,GAAG;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACF,oBAAC,IAAI,CAAC,KAAK;UACT,EAAE,EAAE/H,GAAI;UACR,SAAS,EAAC,kBAAkB;UAC5B,SAAS,EAAC,YAAY;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAEtB,oBAAC,IAAI,CAAC,KAAK;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,cAAsB,eACjC,oBAAC,IAAI,CAAC,OAAO;UACX,IAAI,EAAC,UAAU;UACf,QAAQ;UACR,IAAI,EAAC,UAAU;UACf,WAAW,EAAC,UAAU;UACtB,KAAK,EAAE4F,GAAG,CAACtB;UACX;UAAA;UACA,QAAQ,EAAEyD;UACV;UACA;UAAA;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EACA,CACS,CACT,eACN,oBAAC,GAAG;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACF,oBAAC,IAAI,CAAC,KAAK;UACT,EAAE,EAAE/H,GAAI;UACR,SAAS,EAAC,mBAAmB;UAC7B,SAAS,EAAC,YAAY;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAEtB,oBAAC,IAAI,CAAC,KAAK;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,kBAA0B,eACrC,oBAAC,IAAI,CAAC,OAAO;UACX,IAAI,EAAC,MAAM;UACX,QAAQ;UACR,IAAI,EAAC,aAAa;UAClB,WAAW,EAAC,cAAc;UAC1B,KAAK,EAAE4F,GAAG,CAACZ;UACX;UAAA;UACA,QAAQ,EAAE+C;UACV;UACA;UAAA;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EACA,CACS,CACT,CACF,eACN,oBAAC,GAAG;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACF,oBAAC,GAAG;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACF,oBAAC,IAAI,CAAC,KAAK;UACT,EAAE,EAAE/H,GAAI;UACR,SAAS,EAAC,kBAAkB;UAC5B,SAAS,EAAC,YAAY;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAEtB,oBAAC,IAAI,CAAC,KAAK;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,YAAoB,eAC/B,oBAAC,IAAI,CAAC,OAAO;UACX,IAAI,EAAC,QAAQ;UACb,QAAQ;UACR,IAAI,EAAC,eAAe;UACpB,WAAW,EAAC,QAAQ;UACpB,KAAK,EAAE4F,GAAG,CAACT;UACX;UAAA;UACA,QAAQ,EAAE4C;UACV;UACA;UAAA;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EACA,CACS,CACT,eACN,oBAAC,GAAG;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACF,oBAAC,IAAI,CAAC,KAAK;UACT,EAAE,EAAE/H,GAAI;UACR,SAAS,EAAC,kBAAkB;UAC5B,SAAS,EAAC,YAAY;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAEtB,oBAAC,IAAI,CAAC,KAAK;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,iBAAyB,eACpC,oBAAC,IAAI,CAAC,OAAO;UACX,IAAI,EAAC,MAAM;UACX,QAAQ;UACR,IAAI,EAAC,aAAa;UAClB,WAAW,EAAC,eAAe;UAC3B,KAAK,EAAE4F,GAAG,CAACuF;UACX;UAAA;UACA,QAAQ,EAAEpD;UACV;UACA;UAAA;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EACA,CACS,CACT,eACN,oBAAC,GAAG;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACF,oBAAC,IAAI,CAAC,KAAK;UACT,EAAE,EAAE/H,GAAI;UACR,SAAS,EAAC,mBAAmB;UAC7B,SAAS,EAAC,YAAY;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAEtB,oBAAC,IAAI,CAAC,KAAK;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,kBAA0B,eACrC,oBAAC,IAAI,CAAC,MAAM;UACV,QAAQ;UACR,IAAI,EAAC,aAAa;UAClB,KAAK,EAAE4F,GAAG,CAACN;UACX;UAAA;UACA,QAAQ,EAAEyC;UACV;UACA;UAAA;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAEA;UAAQ,KAAK,EAAC,EAAE;UAAC,QAAQ;UAAC,MAAM;UAAC,QAAQ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,mBAEhC,eACT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,YAAuB,eACvB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,UAAqB,eACrB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,mBAA8B,CAClB,CACH,CACT,CACF,eACN,oBAAC,GAAG;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACF,oBAAC,GAAG;UAAC,EAAE,EAAE,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACT,oBAAC,IAAI,CAAC,KAAK;UACT,EAAE,EAAE/H,GAAI;UACR,SAAS,EAAC,qBAAqB;UAC/B,SAAS,EAAC,YAAY;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAEtB,oBAAC,IAAI,CAAC,KAAK;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAAwB,eACnC,oBAAC,IAAI,CAAC,MAAM;UAAiB,IAAI,EAAC,aAAa;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACnC+H,WAAW,eAErB;UAAQ,QAAQ;UAAC,QAAQ;UAAC,YAAY,EAAE,EAAG;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,yBAElC,EACR7F,GAAG,CAAC0I,GAAG,CAAC,UAACC,CAAC,EAAK;UACd,oBACE,uDACE;YAAQ,GAAG,EAAEA,CAAC,CAACO,GAAI;YAAC,KAAK,EAAEP,CAAC,CAACO,GAAI;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAC9BP,CAAC,CAACQ,cAAc,CACV,CACR;QAEP,CAAC,CAAC,CACU,CACH,CACT,eACN,oBAAC,GAAG;UAAC,EAAE,EAAC,GAAG;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACX,oBAAC,IAAI,CAAC,KAAK;UACP,EAAE,EAAErL,GAAI;UACR,SAAS,EAAC,qBAAqB;UAC/B,SAAS,EAAC,YAAY;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAEtB,oBAAC,IAAI,CAAC,KAAK;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,wBAAgC,eAC3C,oBAAC,IAAI,CAAC,MAAM;UACX,QAAQ,EAAE+H;UACX;UAAA;UACC,IAAI,EAAC,mBAAmB;UACxB,KAAK,EAAEnC,GAAG,CAACR;UACZ;UAAA;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAEE;UAAQ,YAAY,EAAE,EAAG;UAAC,QAAQ;UAAC,QAAQ;UAAC,MAAM;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,mBAAuB,eACzE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,YAAuB,eACvB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,eAA0B,eAC1B;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,eAA0B,eAC1B;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,UAAqB,CACT,CACH,CACT,CACA,CACV;MAKR;MAAC;IACD,KAAK,CAAC;MAAC;QACL,oBACE;UAAK,KAAK,EAAE;YAACkF,MAAM,EAAC;UAAK,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACzB,oBAAC,GAAG;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACJ,oBAAC,GAAG;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACI,oBAAC,IAAI,CAAC,KAAK;UACT,EAAE,EAAEtK,GAAI;UACR,SAAS,EAAC,kBAAkB;UAC5B,SAAS,EAAC,YAAY;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAEtB,oBAAC,IAAI,CAAC,KAAK;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,eAAuB,eAClC,oBAAC,IAAI,CAAC,MAAM;UAEV,QAAQ;UACR,IAAI,EAAC,UAAU;UACf,WAAW,EAAC,aAAa;UACzB,KAAK,EAAE4F,GAAG,CAACP,QAAS;UACpB,QAAQ,EAAE0C;UACV;UAAA;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAEA;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,mBAA8B,eAC9B;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,iBAA4B,eAC5B;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,yBAAoC,eACpC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,yBAAoC,eACpC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,2BAAsC,eACtC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,yBAAoC,eACpC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,yBAAoC,eACpC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,+BAA0C,eAC1C;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,yBAAoC,eACpC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,SAAoB,eACpB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,SAAoB,eACpB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,kBAA6B,CACjB,CACH,CACT,eACN,oBAAC,GAAG;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACF,oBAAC,IAAI,CAAC,KAAK;UACT,EAAE,EAAE/H,GAAI;UACR,SAAS,EAAC,kBAAkB;UAC5B,SAAS,EAAC,YAAY;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAEtB,oBAAC,IAAI,CAAC,KAAK;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,mBAA2B,eACtC,oBAAC,IAAI,CAAC,OAAO;UACX,IAAI,EAAC,MAAM;UACX,QAAQ;UACR,IAAI,EAAC,cAAc;UACnB,WAAW,EAAC,iBAAiB;UAC7B,KAAK,EAAE4F,GAAG,CAACL;UACX;UAAA;UACA,QAAQ,EAAEwC;UACV;UACA;UAAA;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EACA,CACS,CACT,eACN,oBAAC,GAAG;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACF,oBAAC,IAAI,CAAC,KAAK;UACT,EAAE,EAAE/H,GAAI;UACR,SAAS,EAAC,kBAAkB;UAC5B,SAAS,EAAC,YAAY;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAEtB,oBAAC,IAAI,CAAC,KAAK;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAAwB,eACnC,oBAAC,IAAI,CAAC,OAAO;UACX,IAAI,EAAC,MAAM;UACX,QAAQ;UACR,IAAI,EAAC,WAAW;UAChB,WAAW,EAAC,cAAc;UAC1B,KAAK,EAAE4F,GAAG,CAACJ;UACX;UAAA;UACA,QAAQ,EAAEuC;UACV;UACA;UAAA;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EACA,CACS,CACT,CACF,eACN,oBAAC,GAAG;UAAC,SAAS,EAAC,KAAK;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAClB,oBAAC,GAAG;UAAC,GAAG,EAAE,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACV,oBAAC,IAAI,CAAC,KAAK;UACT,EAAE,EAAE/H,GAAI;UACR,SAAS,EAAC,kBAAkB;UAC5B,SAAS,EAAC,YAAY;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAEtB,oBAAC,IAAI,CAAC,KAAK;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,WAAmB,eAC9B,oBAAC,IAAI,CAAC,OAAO;UACX,IAAI,EAAC,MAAM;UACX,QAAQ;UACR,IAAI,EAAC,MAAM;UACX,WAAW,EAAC,QAAQ;UACpB,KAAK,EAAE4F,GAAG,CAACH;UACX;UAAA;UACA,QAAQ,EAAEsC;UACV;UACA;UAAA;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EACA,CACS,CACT,eAEN,oBAAC,GAAG;UAAC,GAAG,EAAE,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACV,oBAAC,IAAI,CAAC,KAAK;UACT,EAAE,EAAE/H,GAAI;UACR,SAAS,EAAC,kBAAkB;UAC5B,SAAS,EAAC,YAAY;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAEtB,oBAAC,IAAI,CAAC,KAAK;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,iBAAyB,eACpC,oBAAC,IAAI,CAAC,OAAO;UACX,IAAI,EAAC,MAAM;UACX,QAAQ;UACR,IAAI,EAAC,YAAY;UACjB,WAAW,EAAC,eAAe;UAC3B,KAAK,EAAE4F,GAAG,CAACF;UACX;UAAA;UACA,QAAQ,EAAEqC;UACV;UACA;UAAA;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EACA,CACS,CACT,CACF,CACN;MAEV;IACV;MACE,OAAO,cAAc;EAAC;AAE5B;AAEA,IAAMuD,YAAY,GAAG,SAAfA,YAAY,CAAI1J,KAAK,EAAK;EAC9B2F,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAC5F,KAAK,CAAC;EAC3B,IAAM2J,OAAO,GAAGpK,SAAS,EAAE;EAAC,kBACQ9B,QAAQ,CAAC,CAAC,CAAC;IAAA;IAAxCwC,UAAU;IAAE2J,aAAa;EAAA,kBACQnM,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA7CoM,YAAY;IAAEC,eAAe;EACpC,IAAMC,KAAK,GAAGjK,QAAQ,EAAE;EAExB,IAAMkK,cAAc,GAAG,SAAjBA,cAAc,CAAIxB,IAAI,EAAK;IAC/B,OAAOA,IAAI,KAAK,CAAC,IAAIA,IAAI,KAAK,CAAC;EACjC,CAAC;EAED,IAAMyB,aAAa,GAAG,SAAhBA,aAAa,CAAIzB,IAAI,EAAK;IAC9B,OAAOqB,YAAY,CAACK,QAAQ,CAAC1B,IAAI,CAAC;EACpC,CAAC;EAED,IAAM2B,UAAU,GAAG,SAAbA,UAAU,GAAS;IACvBP,aAAa,CAAC3J,UAAU,GAAG,CAAC,CAAC;IAC7B6J,eAAe,CAACD,YAAY,CAACO,MAAM,CAAC,UAACC,QAAQ;MAAA,OAAKA,QAAQ,KAAKpK,UAAU;IAAA,EAAC,CAAC;EAC7E,CAAC;EAED,IAAMqK,UAAU,GAAG,SAAbA,UAAU,GAAS;IACvBV,aAAa,CAAC3J,UAAU,GAAG,CAAC,CAAC;EAC/B,CAAC;EAED,IAAMsK,UAAU,GAAG,SAAbA,UAAU,GAAS;IACvB,IAAI,CAACN,aAAa,CAAChK,UAAU,CAAC,EAAE;MAC9B6J,eAAe,8BAAKD,YAAY,IAAE5J,UAAU,GAAE;IAChD;IACA2J,aAAa,CAAC3J,UAAU,GAAG,CAAC,CAAC;EAC/B,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,kBAAkB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAE5B;IAAK,SAAS,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACR;IAAI,SAAS,EAAC,YAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,mBAAmB,eAC/C;IACG,SAAS,EAAC,YAAY;IACtB,KAAK,EAAE;MAAEuK,eAAe,EAAE;IAAU,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEtC;IAAI,SAAS,EAAC,iBAAiB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC7B,oBAAC,IAAI;IAAC,EAAE,EAAC,GAAG;IAAC,KAAK,EAAE;MAAEtB,KAAK,EAAE;IAAU,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,eAElC,CACJ,eACL;IAAI,SAAS,EAAC,wBAAwB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAAkB,CACrD,CAED,eACN;IAAK,SAAS,EAAC,iCAAiC;IAAC,KAAK,EAAE;MAACuB,SAAS,EAAC;IAAI,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACnF,oBAAC,IAAI;IAAC,KAAK,EAAE;MAAC/B,MAAM,EAAC;IAAK,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC1B;IAAK,KAAK,EAAE;MAACA,MAAM,EAAC;IAAK,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC3B,oBAAC,IAAI,CAAC,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACZ;IAAK,KAAK,EAAE;MAACgC,OAAO,EAAC,MAAM;MAACC,cAAc,EAAC;IAAQ,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACrD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,OAAO;IAAC,gBAAgB;IAAC,UAAU,EAAE1K,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC9C8J,KAAK,CAACf,GAAG,CAAC,UAACR,IAAI,EAAEoC,KAAK,EAAK;IAC1B,IAAMC,UAAU,GAAG,CAAC,CAAC;IACrB,IAAMC,SAAS,GAAG,CAAC,CAAC;IACpB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAIb,aAAa,CAACW,KAAK,CAAC,EAAE;MACxBE,SAAS,CAACC,SAAS,GAAG,KAAK;IAC7B;IACA,oBACE,oBAAC,IAAI,oBAAKD,SAAS;MAAE,GAAG,EAAEF,KAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,iBAC9B,oBAAC,SAAS,oBAAKC,UAAU;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,IAAGrC,IAAI,CAAa,CACxC;EAEX,CAAC,CAAC,CACM,EAETvI,UAAU,KAAK8J,KAAK,CAACiB,MAAM,gBAC1B,oBAAC,UAAU;IAAC,OAAO,EAAC,IAAI;IAAC,KAAK,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,eAE1B,gBAEb,uDACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAOjL,cAAc,CAAC;IAACC,KAAK,EAALA,KAAK;IAACC,UAAU,EAAVA;EAAU,CAAC,CAAC,CAAQ,eACjD,oBAAC,MAAM;IACL,SAAS,EAAE0J,OAAO,CAAClK,MAAO;IAC1B,QAAQ,EAAEQ,UAAU,KAAK,CAAE;IAC3B,OAAO,EAAEqK,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,UAGb,eAWT,oBAAC,MAAM;IACL,SAAS,EAAEX,OAAO,CAAClK,MAAO;IAC1B,OAAO,EAAC,WAAW;IACnB,KAAK,EAAC,SAAS;IACf,OAAO,EAAE0K,UAAW;IACpB,IAAI,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEZlK,UAAU,KAAK8J,KAAK,CAACiB,MAAM,GAAG,CAAC,GAAG,QAAQ,GAAG,MAAM,CAC7C,CAEZ,CACG,CACA,CACM,CACN,CACC,CACD,CACA;AAEV,CAAC;AACL,eAAetB,YAAY"},"metadata":{},"sourceType":"module"}