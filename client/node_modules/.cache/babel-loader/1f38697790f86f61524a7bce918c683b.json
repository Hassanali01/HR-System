{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { classNames, useDir, Keys, getTabIndex, createPropsContext, usePropsContext } from '@progress/kendo-react-common';\nimport { RatingItem } from './RatingItem';\nimport { ratingReducer, RATING_ACTION } from './rating-reducer';\nimport { isSelected, isHalf, calcIsFirstHalf, isCorrectValue, toRound, getRemainder } from './utils';\nimport { messages, ratingAriaLabel } from '../messages';\nimport { useLocalization } from '@progress/kendo-react-intl';\n/**\n * @hidden\n */\nvar useRating = function useRating(defaultValue, args, callback) {\n  var _a = React.useState(defaultValue),\n    state = _a[0],\n    setState = _a[1];\n  var handleDispatchAction = function handleDispatchAction(action) {\n    var newState = ratingReducer(args.state || state, __assign(__assign({}, action), args));\n    if (callback) {\n      callback(newState, action.event);\n    }\n    setState(newState);\n  };\n  return [state, handleDispatchAction];\n};\n/**\n * Represents the PropsContext of the `Rating` component.\n * Used for global configuration of all `Rating` instances.\n *\n * For more information, refer to the [Inputs Props Context]({% slug props-context_inputs %}) article.\n */\nexport var RatingPropsContext = createPropsContext();\n/**\n * Represents the [KendoReact Rating component]({% slug overview_rating %}).\n *\n * Accepts properties of type [RatingProps]({% slug api_inputs_ratingprops %}).\n * Obtaining the `ref` returns an object of type [RatingHandle]({% slug api_inputs_ratinghandle %}).\n */\nexport var Rating = React.forwardRef(function (directProps, ref) {\n  var _a, _b, _c, _d;\n  var props = usePropsContext(RatingPropsContext, directProps);\n  var localization = useLocalization();\n  var target = React.useRef(null);\n  var ratingRef = React.useRef(null);\n  var dir = useDir(ratingRef, props.dir);\n  React.useImperativeHandle(target, function () {\n    return {\n      element: ratingRef.current,\n      props: props\n    };\n  });\n  React.useImperativeHandle(ref, function () {\n    return target.current;\n  });\n  var handleChange = React.useCallback(function (newValue, event) {\n    if (props.onChange && target.current) {\n      props.onChange.call(undefined, {\n        value: newValue,\n        target: target.current,\n        syntheticEvent: event\n      });\n    }\n  }, [props.onChange]);\n  var min = React.useMemo(function () {\n    return props.min !== undefined ? props.min : defaultProps.min;\n  }, [props.min]);\n  var max = React.useMemo(function () {\n    return props.max !== undefined ? props.max : defaultProps.max;\n  }, [props.max]);\n  var precision = React.useMemo(function () {\n    return props.precision || defaultProps.precision;\n  }, [props.precision]);\n  var step = React.useMemo(function () {\n    return props.step !== undefined ? props.step : defaultProps.step;\n  }, [props.step]);\n  var readonly = React.useMemo(function () {\n    return props.readonly || defaultProps.readonly;\n  }, [props.readonly]);\n  var disabled = React.useMemo(function () {\n    return props.disabled || defaultProps.disabled;\n  }, [props.disabled]);\n  var Item = React.useMemo(function () {\n    return props.item || defaultProps.item;\n  }, [props.item]);\n  var _e = useRating(props.defaultValue || defaultProps.defaultValue, {\n      state: props.value,\n      min: min,\n      max: max,\n      step: precision === 'half' ? step / 2 : step\n    }, handleChange),\n    stateValue = _e[0],\n    dispatchStateValue = _e[1];\n  var _f = useRating(null, {\n      state: props.value,\n      min: min,\n      max: max,\n      step: precision === 'half' ? step / 2 : step,\n      precision: precision\n    }),\n    stateHover = _f[0],\n    dispatchStateHover = _f[1];\n  var value = React.useMemo(function () {\n    return props.value || stateValue;\n  }, [props.value, stateValue]);\n  var hoveredValue = React.useMemo(function () {\n    return stateHover;\n  }, [stateHover]);\n  var selection = React.useMemo(function () {\n    return props.selection || defaultProps.selection;\n  }, [props.selection]);\n  var base = React.useMemo(function () {\n    return step / (precision === 'half' ? 2 : 1);\n  }, [step, precision]);\n  var handleItemClick = React.useCallback(function (event) {\n    if (!event.target || !event.target.element || readonly || disabled) {\n      return;\n    }\n    if (precision === 'half') {\n      var rect = event.target.element.getBoundingClientRect();\n      var isFirstHalf = calcIsFirstHalf(dir ? dir : 'ltr', rect, event.syntheticEvent.clientX);\n      var payload = isFirstHalf ? toRound(event.target.value - step / 2, base) : event.target.value;\n      dispatchStateValue({\n        type: RATING_ACTION.select,\n        payload: payload,\n        event: event.syntheticEvent\n      });\n    } else {\n      dispatchStateValue({\n        type: RATING_ACTION.select,\n        payload: event.target.value,\n        event: event.syntheticEvent\n      });\n    }\n    if (props.onClick) {\n      var ev = {\n        value: value,\n        target: target.current,\n        syntheticEvent: event.syntheticEvent\n      };\n      props.onClick.call(undefined, ev);\n    }\n  }, [props.onClick, dispatchStateValue, value]);\n  var handleKeyDown = React.useCallback(function (syntheticEvent) {\n    if (readonly || disabled) {\n      return;\n    }\n    switch (syntheticEvent.keyCode) {\n      case Keys.right:\n        syntheticEvent.preventDefault();\n        dispatchStateValue({\n          type: dir === 'rtl' ? RATING_ACTION.decrease : RATING_ACTION.increase,\n          event: syntheticEvent\n        });\n        break;\n      case Keys.left:\n        syntheticEvent.preventDefault();\n        dispatchStateValue({\n          type: dir === 'rtl' ? RATING_ACTION.increase : RATING_ACTION.decrease,\n          event: syntheticEvent\n        });\n        break;\n      case Keys.home:\n        syntheticEvent.preventDefault();\n        dispatchStateValue({\n          type: dir === 'rtl' ? RATING_ACTION.min : RATING_ACTION.max,\n          event: syntheticEvent\n        });\n        break;\n      case Keys.end:\n        syntheticEvent.preventDefault();\n        dispatchStateValue({\n          type: dir === 'rtl' ? RATING_ACTION.max : RATING_ACTION.min,\n          event: syntheticEvent\n        });\n        break;\n      case Keys.esc:\n        syntheticEvent.preventDefault();\n        dispatchStateValue({\n          type: RATING_ACTION.deselect,\n          event: syntheticEvent\n        });\n        break;\n      default:\n        break;\n    }\n    if (props.onKeyDown) {\n      props.onKeyDown.call(undefined, {\n        value: value,\n        target: target.current,\n        syntheticEvent: syntheticEvent\n      });\n    }\n  }, [props.onKeyDown, dispatchStateValue, value]);\n  var handleFocus = React.useCallback(function (syntheticEvent) {\n    if (props.onFocus) {\n      var ev = {\n        target: target.current,\n        syntheticEvent: syntheticEvent\n      };\n      props.onFocus.call(undefined, ev);\n    }\n  }, [props.onFocus]);\n  var handleBlur = React.useCallback(function (syntheticEvent) {\n    if (props.onBlur) {\n      var ev = {\n        target: target.current,\n        syntheticEvent: syntheticEvent\n      };\n      props.onBlur.call(undefined, ev);\n    }\n  }, [props.onBlur]);\n  var handleItemMouseMove = React.useCallback(function (event) {\n    if (!event.target || !event.target.element) {\n      return;\n    }\n    if (precision === 'half') {\n      var rect = event.target.element.getBoundingClientRect();\n      var isFirstHalf = calcIsFirstHalf(dir ? dir : 'ltr', rect, event.syntheticEvent.clientX);\n      var payload = isFirstHalf ? event.target.value - step / 2 : event.target.value;\n      dispatchStateHover({\n        type: RATING_ACTION.select,\n        payload: payload,\n        event: event.syntheticEvent\n      });\n    } else {\n      dispatchStateHover({\n        type: RATING_ACTION.select,\n        payload: event.target.value,\n        event: event.syntheticEvent\n      });\n    }\n  }, [precision, step, dir]);\n  var handleMouseLeave = React.useCallback(function (event) {\n    dispatchStateHover({\n      type: RATING_ACTION.reset,\n      event: event.syntheticEvent\n    });\n  }, []);\n  var items = [];\n  var remainder = getRemainder(toRound(max - min, base), step);\n  for (var i = min; i <= max; i = toRound(i + step, base)) {\n    var itemValue = toRound(i + remainder, base);\n    var half = precision === 'half' ? isHalf(itemValue, hoveredValue !== null ? hoveredValue : value !== null ? value : 0, step) : false;\n    var selectedValue = isSelected(itemValue, value, step, selection);\n    var selected = isSelected(itemValue, hoveredValue !== null ? hoveredValue : value, step, selection);\n    var hovered = isSelected(itemValue, hoveredValue, step, selection);\n    items.push(React.createElement(Item, {\n      key: itemValue,\n      value: itemValue,\n      dir: dir,\n      title: String(half ? toRound(itemValue - step / 2, base) : itemValue),\n      icon: props.icon,\n      half: half,\n      selected: selectedValue || selected,\n      hovered: hovered,\n      onClick: handleItemClick,\n      onMouseMove: handleItemMouseMove,\n      onMouseLeave: handleMouseLeave\n    }, half && React.createElement(\"span\", {\n      className: 'k-rating-precision-complement',\n      style: (_a = {\n        width: '12px'\n      }, _a[dir === 'rtl' ? 'right' : 'left'] = '50%', _a)\n    }, React.createElement(\"span\", {\n      className: classNames('k-icon', (_b = {\n        'k-i-star-outline': !props.icon\n      }, _b[\"\".concat(props.icon, \"-outline\")] = props.icon, _b))\n    })), half && React.createElement(\"span\", {\n      className: 'k-rating-precision-part',\n      style: {\n        width: '12px'\n      }\n    }, React.createElement(\"span\", {\n      className: classNames('k-icon', (_c = {\n        'k-i-star': !props.icon\n      }, _c[\"\".concat(props.icon)] = props.icon, _c))\n    })), half && React.createElement(\"span\", {\n      style: {\n        width: '24px',\n        height: '24px',\n        display: 'block'\n      }\n    }), !half && React.createElement(\"span\", {\n      className: classNames('k-icon', (_d = {\n        'k-i-star': !props.icon && (hovered || selected && !hovered),\n        'k-i-star-outline': !props.icon && !hovered\n      }, _d[\"\".concat(props.icon)] = props.icon && (hovered || selected && !hovered), _d[\"\".concat(props.icon, \"-outline\")] = props.icon && !hovered, _d))\n    })));\n  }\n  return React.createElement(\"span\", {\n    id: props.id,\n    style: props.style,\n    ref: ratingRef,\n    role: \"slider\",\n    dir: dir,\n    tabIndex: getTabIndex(props.tabIndex, props.disabled, undefined),\n    className: classNames('k-rating k-widget', {\n      'k-rtl': dir === 'rtl',\n      'k-readonly': readonly,\n      'k-disabled': disabled\n    }, props.className),\n    onKeyDown: handleKeyDown,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    \"aria-valuenow\": value !== null ? value : undefined,\n    \"aria-disabled\": disabled ? 'true' : undefined,\n    \"aria-label\": localization.toLanguageString(ratingAriaLabel, messages[ratingAriaLabel]),\n    \"aria-labelledby\": props.ariaLabelledBy,\n    \"aria-describedby\": props.ariaDescribedBy\n  }, React.createElement(\"input\", {\n    id: 'rating',\n    className: 'k-hidden',\n    readOnly: readonly,\n    disabled: disabled\n  }), React.createElement(\"span\", {\n    className: 'k-rating-container'\n  }, items), props.label && React.createElement(\"span\", {\n    className: 'k-rating-label'\n  }, props.label));\n});\nvar propTypes = {\n  id: PropTypes.string,\n  dir: PropTypes.oneOf(['ltr', 'rtl']),\n  selection: PropTypes.oneOf(['continues', 'single']),\n  precision: PropTypes.oneOf(['item', 'half']),\n  value: function value(props, propName, componentName) {\n    if (props.value && props.min && props.max && props.step) {\n      var correctValue = props.precision === 'half' ? isCorrectValue(props.min, props.max, props.step / 2, props.value) : isCorrectValue(props.min, props.max, props.step, props.value);\n      if (!correctValue && props.precision === 'half') {\n        return new Error(\"Invalid prop + \".concat(propName, \" supplied to \").concat(componentName, \".\\n                    The value of the { value } property is not correct, please check your values.\\n                    \"));\n      }\n    }\n    return null;\n  },\n  defaultValue: PropTypes.number,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  step: function step(props, propName, componentName) {\n    if (props.step !== undefined && props.step <= 0) {\n      return new Error(\"Invalid prop + \".concat(propName, \" supplied to \").concat(componentName, \".\\n                The value of the { step } property is cannot be equal or less than \\\"0\\\", please check your values.\\n                \"));\n    }\n    return null;\n  },\n  hovered: PropTypes.number,\n  label: PropTypes.string,\n  readonly: PropTypes.bool,\n  disabled: PropTypes.bool,\n  half: PropTypes.bool,\n  icon: PropTypes.string,\n  ariaDescribedBy: PropTypes.string\n};\nvar defaultProps = {\n  dir: 'ltr',\n  min: 1,\n  max: 5,\n  step: 1,\n  item: RatingItem,\n  defaultValue: null,\n  readonly: false,\n  disabled: false,\n  selection: 'continues',\n  precision: 'item'\n};\nRating.displayName = 'KendoReactRating';\n// TODO: delete casting when @types/react is updated!\nRating.propTypes = propTypes;\nRating.defaultProps = defaultProps;","map":null,"metadata":{},"sourceType":"module"}