{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport * as React from 'react';\nimport { Draggable } from '@progress/kendo-react-common';\n/**\n * @hidden\n */\nvar keys = ['n', 'e', 's', 'w', 'se', 'sw', 'ne', 'nw'];\n/**\n * @hidden\n */\nvar ResizeHandlers = /** @class */function (_super) {\n  __extends(ResizeHandlers, _super);\n  function ResizeHandlers() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ResizeHandlers.prototype.render = function () {\n    var _this = this;\n    return React.createElement(\"div\", null, \" \", keys.map(function (key, index) {\n      return React.createElement(Draggable, {\n        key: index,\n        onDrag: function onDrag(data) {\n          var event = data.event;\n          event.originalEvent.preventDefault();\n          _this.props.onResize(event, {\n            end: false,\n            direction: key\n          });\n        },\n        onRelease: function onRelease(data) {\n          var event = data.event;\n          event.originalEvent.preventDefault();\n          _this.props.onResize(event, {\n            end: true,\n            direction: key\n          });\n        }\n      }, React.createElement(\"div\", {\n        className: 'k-resize-handle k-resize-' + key,\n        style: {\n          display: 'block',\n          touchAction: 'none'\n        }\n      }));\n    }));\n  };\n  return ResizeHandlers;\n}(React.Component);\nexport { ResizeHandlers };","map":null,"metadata":{},"sourceType":"module"}