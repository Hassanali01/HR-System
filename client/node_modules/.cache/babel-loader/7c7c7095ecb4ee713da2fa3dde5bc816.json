{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { NumericTextBox } from '../main';\nimport HexInput from './HexInput';\nimport { Button } from '@progress/kendo-react-buttons';\nimport { Label } from '@progress/kendo-react-labels';\nimport { registerForIntl, registerForLocalization, provideLocalizationService } from '@progress/kendo-react-intl';\nimport { messages, colorGradientR, colorGradientHex, colorGradientA, colorGradientB, colorGradientG, colorGradientToggleInputsButton } from '../messages';\n/**\n * @hidden\n */\nvar modes = ['rgba', 'rgb', 'hex'];\n/**\n * @hidden\n */\nvar ColorInput = /** @class */function (_super) {\n  __extends(ColorInput, _super);\n  function ColorInput() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.state = {\n      inputMode: modes[1]\n    };\n    _this.onRgbaRChange = function (event) {\n      _this.dispatchRgbaChange({\n        r: event.value\n      }, event);\n    };\n    _this.onRgbaGChange = function (event) {\n      _this.dispatchRgbaChange({\n        g: event.value\n      }, event);\n    };\n    _this.onRgbaBChange = function (event) {\n      _this.dispatchRgbaChange({\n        b: event.value\n      }, event);\n    };\n    _this.onRgbaAChange = function (event) {\n      _this.dispatchRgbaChange({\n        a: event.value\n      }, event);\n    };\n    return _this;\n  }\n  ColorInput.prototype.render = function () {\n    var localizationService = provideLocalizationService(this);\n    var hexMessage = localizationService.toLanguageString(colorGradientR, messages[colorGradientHex]);\n    var rMessage = localizationService.toLanguageString(colorGradientR, messages[colorGradientR]);\n    var gMessage = localizationService.toLanguageString(colorGradientR, messages[colorGradientG]);\n    var bMessage = localizationService.toLanguageString(colorGradientR, messages[colorGradientB]);\n    var aMessage = localizationService.toLanguageString(colorGradientR, messages[colorGradientA]);\n    var toggleButtonMessage = localizationService.toLanguageString(colorGradientToggleInputsButton, messages[colorGradientToggleInputsButton]);\n    return React.createElement(\"div\", {\n      className: \"k-colorgradient-inputs k-hstack\"\n    }, React.createElement(\"div\", {\n      className: \"k-vstack\"\n    }, React.createElement(Button, {\n      \"aria-label\": toggleButtonMessage,\n      fillMode: 'flat',\n      icon: 'caret-alt-expand',\n      className: \"k-colorgradient-toggle-mode k-icon-button\",\n      onClick: this.onToggleModeChange.bind(this)\n    })), this.state.inputMode === 'hex' && React.createElement(\"div\", {\n      className: \"k-vstack k-flex-1\"\n    }, React.createElement(\"span\", {\n      className: \"k-hex-value k-textbox k-input\"\n    }, React.createElement(HexInput, {\n      hex: this.props.hex,\n      onHexChange: this.props.onHexChange,\n      disabled: this.props.disabled\n    })), React.createElement(Label, {\n      className: \"k-colorgradient-input-label\"\n    }, hexMessage)), (this.state.inputMode === 'rgb' || this.state.inputMode === 'rgba') && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"k-vstack\"\n    }, React.createElement(NumericTextBox, {\n      inputType: 'number',\n      value: this.props.rgba.r,\n      ariaLabel: String(this.props.rgba.r),\n      min: 0,\n      max: 255,\n      spinners: false,\n      format: \"n\",\n      onChange: this.onRgbaRChange,\n      disabled: this.props.disabled\n    }), React.createElement(Label, {\n      className: \"k-colorgradient-input-label\"\n    }, rMessage)), React.createElement(\"div\", {\n      className: \"k-vstack\"\n    }, React.createElement(NumericTextBox, {\n      inputType: 'number',\n      value: this.props.rgba.g,\n      ariaLabel: String(this.props.rgba.g),\n      min: 0,\n      max: 255,\n      spinners: false,\n      format: \"n\",\n      onChange: this.onRgbaGChange,\n      disabled: this.props.disabled\n    }), React.createElement(Label, {\n      className: \"k-colorgradient-input-label\"\n    }, gMessage)), React.createElement(\"div\", {\n      className: \"k-vstack\"\n    }, React.createElement(NumericTextBox, {\n      inputType: 'number',\n      value: this.props.rgba.b,\n      ariaLabel: String(this.props.rgba.b),\n      min: 0,\n      max: 255,\n      spinners: false,\n      format: \"n\",\n      onChange: this.onRgbaBChange,\n      disabled: this.props.disabled\n    }), React.createElement(Label, {\n      className: \"k-colorgradient-input-label\"\n    }, bMessage))), this.state.inputMode === 'rgba' && React.createElement(\"div\", {\n      className: \"k-vstack\"\n    }, this.props.opacity && React.createElement(NumericTextBox, {\n      inputType: 'number',\n      value: this.props.rgba.a,\n      ariaLabel: String(this.props.rgba.a),\n      min: 0,\n      max: 1,\n      step: 0.01,\n      spinners: false,\n      format: \"n2\",\n      onChange: this.onRgbaAChange,\n      disabled: this.props.disabled\n    }), this.props.opacity && React.createElement(Label, {\n      className: \"k-colorgradient-input-label\"\n    }, aMessage)));\n  };\n  ColorInput.prototype.dispatchRgbaChange = function (newValue, event) {\n    var rgba = __assign({}, this.props.rgba);\n    if (newValue.r !== undefined) {\n      rgba.r = newValue.r;\n    }\n    if (newValue.g !== undefined) {\n      rgba.g = newValue.g;\n    }\n    if (newValue.b !== undefined) {\n      rgba.b = newValue.b;\n    }\n    if (newValue.a !== undefined) {\n      rgba.a = newValue.a;\n    }\n    this.props.onRgbaChange(rgba, event);\n  };\n  ;\n  ColorInput.prototype.onToggleModeChange = function () {\n    var index = modes.length - 1 === modes.indexOf(this.state.inputMode) ? 0 : modes.indexOf(this.state.inputMode) + 1;\n    if (!this.props.opacity) {\n      var nextIndex = modes[index] === 'rgba' ? index + 1 : index;\n      this.setState({\n        inputMode: modes[nextIndex]\n      });\n    } else {\n      this.setState({\n        inputMode: modes[index]\n      });\n    }\n  };\n  return ColorInput;\n}(React.Component);\nexport default ColorInput;\nregisterForIntl(ColorInput);\nregisterForLocalization(ColorInput);","map":null,"metadata":{},"sourceType":"module"}