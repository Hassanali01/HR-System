{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\hassan.ali\\\\Downloads\\\\HR-SYSTEM-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"C:\\\\Users\\\\hassan.ali\\\\Downloads\\\\HR-SYSTEM-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\hassan.ali\\\\Downloads\\\\HR-SYSTEM-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\hassan.ali\\\\Downloads\\\\HR-SYSTEM-main\\\\client\\\\src\\\\Components\\\\Employee Data\\\\All Employees\\\\EmployeeData.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Typography, TextField, Button, Stepper, Step, StepLabel } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Modal, Form, Col, Row, Container, FormGroup } from \"react-bootstrap\";\nimport Table from \"react-bootstrap/Table\";\nimport Card from \"react-bootstrap/Card\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-notifications/lib/notifications.css\";\nimport axios from \"axios\";\n// import Table from \"react-bootstrap/Table\";\nimport { Link } from \"react-router-dom\";\nimport { NotificationContainer, NotificationManager } from \"react-notifications\";\nimport ViewListIcon from \"@mui/icons-material/ViewList\";\nimport ViewModuleIcon from \"@mui/icons-material/ViewModule\";\nimport ToggleButton from \"@mui/material/ToggleButton\";\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\nimport TableView from \"../TableView/Table\";\nimport { useNavigate } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\nimport ReactFlags from \"react-flags-select\";\nimport { cities } from \"./cities\";\nimport StepOne from \"./StepOne\";\nimport StepTwo from \"./StepTwo\";\nimport StepThree from \"./StepThree\";\nimport StepFour from \"./StepFour\";\nimport StepFive from \"./StepFive\";\n\n// const useStyles = makeStyles((theme) => ({\n//   button: {\n//     marginRight: theme.spacing(1),\n//   },\n// }));\n// const moment = require(\"moment\");\n\n// function getSteps() {\n//   return [\n//     \"Personal Information\",\n//     \"Address & Region\",\n//     \"Education Information\",\n//     \"Previous Information\",\n//     \"Employement Details\",\n//     \"Bank Details\",\n//   ];\n// }\n\n// function getStepContent({ props, activeStep, handleNext,steps }) {\n//   let navigate = useNavigate();\n//   const url2 = \"/departments\";\n//   const url = \"/employees\";\n//   const url1 = \"/auth/register\";\n//   const [dep, setDep] = useState([]);\n//   const [datas, setData] = useState();\n//   // const [modalShow, setModalShow] = React.useState(false);\n//   const handleClose = () => setShow(false);\n//   const Closechildmodal = () => setShowChildModel(false);\n//   const Closechildmodal1 = () => setShowChildModel1(false);\n//   const showChildModel = () => setShowChildModel(true);\n//   const showChildModel1 = () => setShowChildModel1(true);\n//   const handleShow = () => setShow(true);\n//   const [childModel, setShowChildModel] = useState(false);\n//   const [childModel1, setShowChildModel1] = useState(false);\n//   const [show, setShow] = useState(false);\n//   const [birth, setbirth] = useState(\"\");\n//   const [testUpdate, setTestUpdate] = useState(false);\n\n//   const [list, setlist] = useState(false);\n//   //for profile pic\n//   const [file, setfile] = useState();\n//   //Employee Add\n//   const [emp, setEmp] = useState({\n//     profilepic: \"\",\n//     firstname: \"\",\n//     lastname: \"\",\n//     dob: \"\",\n//     cnic: \"\",\n//     gender: \"\",\n//     martialStatus: \"\",\n//     religion: \"\",\n//     jobtitle: \"\",\n//     username: \"\",\n//     primaryemail: \"\",\n//     secondaryemail: \"\",\n//     password: \"\",\n//     primaryphone: \"\",\n//     secondaryphone: \"\",\n//     permanentaddress: \"\",\n//     temporaryaddress: \"\",\n//     province: \"\",\n//     city: \"\",\n//     postalCode: \"\",\n//     departments: \"\",\n//     designation: \"\",\n//     joiningdate: \"\",\n//     educationdetails: \"\",\n//     employementhistory: \"\",\n\n//     currentSalary: \"\",\n//     employementstatus: \"\",\n//     //bank information\n//     bankname: \"\",\n//     paymentmode: \"\",\n//     accounttitle: \"\",\n//     accountno: \"\",\n//     IBAN: \"\",\n//     branchcode: \"\",\n//     country: \"\",\n//     //degree info\n//   });\n//   //educaion details add and remove //\n//   const [education, seteducation] = useState([]);\n//   const [selected, setSelected] = useState(\"\");\n//   const [country, setcountry] = useState(\"\");\n//   const [employement, setemployement] = useState([]);\n//   const [empdetails, setempdetails] = useState({\n//     company: \"\",\n//     position: \"\",\n//     joiningdate: \"\",\n//     resignationdate: \"\",\n//     duration: \"\",\n//     jobdescription: \"\",\n//   });\n//   const [details, setdetails] = useState({\n//     degreetitle: \"\",\n//     institute: \"\",\n//     start: \"\",\n//     end: \"\",\n//     status: \"\",\n//   });\n//   const removeitem = (i) => {\n//     const temp = education;\n//     temp.splice(i, 1);\n//     console.log(\"splice\", temp);\n//     seteducation(temp);\n//     setTestUpdate(!testUpdate);\n//   };\n//   const removemployement = (i) => {\n//     const temp = employement;\n//     employement.splice(i, 1);\n//     console.log(\"splice\", temp);\n//     setemployement(temp);\n//     setTestUpdate(!testUpdate);\n//   };\n//   const addhistory = () => {\n//     var empl = employement;\n//     empl.push({\n//       company: empdetails.company,\n//       position: empdetails.position,\n//       joiningdate: empdetails.joiningdate,\n//       resignationdate: empdetails.resignationdate,\n//       duration: empdetails.duration,\n//       jobdescription: empdetails.jobdescription,\n//     });\n//     console.log(\"emplllllllll\", empl);\n//     setemployement(empl);\n//     setEmp({ ...emp, employementhistory: empl });\n//   };\n\n//   let name, value;\n//   const handleinput = (e) => {\n//     console.log(e);\n//     name = e.target.name;\n//     value = e.target.value;\n//     setEmp({ ...emp, [name]: value });\n//   };\n\n//   const handleeducationdetails = async (e) => {\n//     let name, value;\n\n//     name = e.target.name;\n//     value = e.target.value;\n\n//     await setdetails({\n//       ...details,\n//       [name]: value,\n//     });\n//   };\n\n//   //handle user input form data\n\n//   const handleempinput = async (e) => {\n//     let name, value;\n\n//     name = e.target.name;\n//     value = e.target.value;\n\n//     await setempdetails({\n//       ...empdetails,\n//       [name]: value,\n//     });\n//   };\n\n//   const addeducation = () => {\n//     var temp = education;\n//     temp.push({\n//       degreetitle: details.degreetitle,\n//       institute: details.institute,\n//       start: details.start,\n//       end: details.end,\n//       status: details.status,\n//     });\n//     seteducation(temp);\n//     setEmp({ ...emp, educationdetails: education });\n//   };\n\n//   const handleempinputJoiningDate = async (e) => {\n//     let name, value;\n\n//     name = e.target.name;\n//     value = e.target.value;\n\n//     console.log(\"change\", empdetails);\n\n//     var a = moment(empdetails.resignationdate);\n//     var b = moment(e.target.value);\n\n//     var years = a.diff(b, \"year\");\n//     b.add(years, \"years\");\n\n//     var months = a.diff(b, \"months\");\n//     b.add(months, \"months\");\n\n//     var days = a.diff(b, \"days\");\n\n//     console.log(years + \" years \" + months + \" months \" + days + \" days\");\n\n//     await setempdetails({\n//       ...empdetails,\n//       [name]: e.target.value,\n//       duration: `${years}  years  ${months}  months  ${days} days`,\n//     });\n//   };\n\n//   const handleempinputResignationDate = async (e) => {\n//     let name, value;\n\n//     name = e.target.name;\n//     value = e.target.value;\n\n//     var a = moment(e.target.value);\n//     var b = moment(empdetails.joiningdate);\n\n//     var years = a.diff(b, \"year\");\n//     b.add(years, \"years\");\n\n//     var months = a.diff(b, \"months\");\n//     b.add(months, \"months\");\n\n//     var days = a.diff(b, \"days\");\n\n//     console.log(years + \" years \" + months + \" months \" + days + \" days\");\n\n//     await setempdetails({\n//       ...empdetails,\n//       [name]: e.target.value,\n//       duration: `${years}  years  ${months}  months  ${days} days`,\n//     });\n//   };\n//   ///education & employement details code end;\n\n//   //list and grid view start\n//   const [view, setView] = useState(false);\n//   const handleChange = (event, nextView) => {\n//     setView(!view);\n//     setView(nextView);\n//     setView(!view);\n//     // setlist(nextView)\n//     console.log(nextView);\n//   };\n//   //   const handleChange = () => {\n//   //     setlist(!list)\n//   //   };\n//   //submitting values of user\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (file) {\n//       const data = new FormData();\n//       const filename = Date.now() + file.name;\n//       data.append(\"name\", filename);\n//       data.append(\"file\", file);\n//       emp.profilepic = filename;\n//       try {\n//         await axios.post(\"/upload\", data);\n//       } catch (err) {\n//         console.log(err);\n//         NotificationManager.error(\"Pic not Uploaded\");\n//       }\n//     }\n\n//     try {\n//       const res = await axios.post(url1, emp);\n//       console.log(res);\n//       res && NotificationManager.success(\"Sucessfully Added Employee\");\n//       // res && window.location.replace(\"/employees\");\n//     } catch (error) {\n//       console.log(error);\n//       NotificationManager.error(\"Something went wrong \");\n//     }\n//   };\n//   //fetching employees data\n//   const fetchData = async () => {\n//     try {\n//       const res = await axios.get(url);\n//       console.log(res.data);\n//       const data = res.data.employees;\n//       setData(data);\n//     } catch (error) {\n//       console.log(error);\n//       NotificationManager.error(\"Api Error 404\");\n//     }\n//   };\n//   //getting Employees\n//   const getEmp = async () => {\n//     try {\n//       const res = await axios.get(url2);\n//       const datas = res.data.departments;\n//       console.log(\"departments\", datas);\n//       setDep(datas);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n//   useEffect(() => {\n//     fetchData();\n//     getEmp();\n//   }, []);\n//   const PF = \"http://localhost:5002/images/\";\n//   console.log(\"propss\", props);\n//   const step = activeStep;\n//   switch (step) {\n//     case 0:\n//       return (\n//         <>\n//         <Form>\n//           <div className=\"w-75\" id=\"responsivewidth\">\n//             <Col>\n//               {\" \"}\n//               <Row>\n//                 <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\n//                   <Form.Group\n//                     as={Col}\n//                     controlId=\"formGridFirstName\"\n//                     className=\"formmargin\"\n//                   >\n//                     <Form.Label>First Name</Form.Label>\n//                     <Form.Control\n//                       type=\"text\"\n//                       required\n//                       name=\"firstname\"\n//                       placeholder=\"First Name\"\n//                       value={emp.firstname}\n//                       // value={props.value}\n//                       onChange={handleinput}\n//                       // onChange={props.onChange}\n//                     />\n//                   </Form.Group>\n//                 </Col>\n//                 <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\n//                   <Form.Group\n//                     as={Col}\n//                     controlId=\"formGridLastName\"\n//                     className=\"formmargin\"\n//                   >\n//                     <Form.Label>Last Name</Form.Label>\n//                     <Form.Control\n//                       type=\"text\"\n//                       required\n//                       name=\"lastname\"\n//                       placeholder=\"Last Name\"\n//                       value={emp.lastname}\n//                       // value={props.value1}\n//                       onChange={handleinput}\n//                       // onChange={props.onChange}\n//                     />\n//                   </Form.Group>\n//                 </Col>\n//               </Row>\n//               <Row>\n//                 <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\n//                   <Form.Group\n//                     as={Col}\n//                     controlId=\"formGridgender\"\n//                     className=\"formmargin\"\n//                   >\n//                     <Form.Label>Gender</Form.Label>\n//                     <Form.Select\n//                       required\n//                       name=\"gender\"\n//                       value={emp.gender}\n//                       // value={props.value2}\n//                       onChange={handleinput}\n//                       // onChange={props.onChange}\n//                     >\n//                       <option value=\"\" selected hidden disabled>\n//                         Please Select\n//                       </option>\n//                       <option>Male</option>\n//                       <option>Female</option>\n//                       <option>Other</option>\n//                     </Form.Select>\n//                   </Form.Group>\n//                 </Col>\n//                 <Col xl=\"6\" lg=\"6\" md=\"6\">\n//                   <Form.Group\n//                     as={Col}\n//                     controlId=\"formGridFirstName\"\n//                     className=\"formmargin\"\n//                   >\n//                     <Form.Label>National ID </Form.Label>\n//                     <Form.Control\n//                       type=\"number\"\n//                       required\n//                       name=\"cnic\"\n//                       placeholder=\"CNIC\"\n//                       value={emp.cnic}\n//                       // value={props.value3}\n//                       onChange={handleinput}\n//                       // onChange={props.onChange}\n//                       //   disabled={disableFields}\n//                     />\n//                   </Form.Group>\n//                 </Col>\n//               </Row>\n//               <Row>\n//                 <Col xxl=\"6\" xl=\"6\" lg=\"6\">\n//                   <Form.Group\n//                     as={Col}\n//                     controlId=\"formGridLastName\"\n//                     className=\"formmargin\"\n//                   >\n//                     <Form.Label>D-0-B</Form.Label>\n//                     {/* <DatePicker\n\n//                             required\n//                             selected={emp.dob}\n//                             onChange={(date)=>{setEmp({...emp,dob:moment(date).format('dd/mm/yyyy')})}}\n//                             // dateFormat='d MMMM, yyyy'\n//                             dateFormat='dd/mm/yyyy'\n//                             dropDownMode=\"select\"\n//                           /> */}\n//                     <Form.Control\n//                       type=\"date\"\n//                       required\n//                       placeholder=\"dd/mm/yyyy\"\n//                       name=\"dob\"\n//                       value={emp.dob}\n//                       // value={props.value4}\n//                       onChange={handleinput}\n//                       // onChange={props.onChange}\n//                       //   disabled={disableFields}\n//                     />\n//                   </Form.Group>\n//                 </Col>\n\n//                 <Col xl=\"6\" lg=\"6\">\n//                   <Form.Group\n//                     as={Col}\n//                     controlId=\"formGridMartialStatus\"\n//                     className=\"formmargin\"\n//                   >\n//                     <Form.Label>Martial Status</Form.Label>\n//                     <Form.Select\n//                       required\n//                       name=\"martialStatus\"\n//                       placeholder=\"martial status..\"\n//                       value={emp.martialStatus}\n//                       // value={props.value5}\n//                       onChange={handleinput}\n//                       // onChange={props.onChange}\n//                       //   disabled={disableFields}\n//                     >\n//                       <option value=\"\" selected hidden disabled>\n//                         Please Select\n//                       </option>\n//                       <option>Single</option>\n//                       <option>Married</option>\n//                       <option>Divorced</option>\n//                       <option>widow</option>\n//                     </Form.Select>\n//                   </Form.Group>\n//                 </Col>\n//                 <Col xl=\"6\" lg=\"6\">\n//                   <Form.Group\n//                     as={Col}\n//                     controlId=\"formGridLastName\"\n//                     className=\"formmargin\"\n//                   >\n//                     <Form.Label>Religion</Form.Label>\n//                     <Form.Select\n//                       required\n//                       name=\"religion\"\n//                       placeholder=\"Religion\"\n//                       value={emp.religion}\n//                       // value={props.value6}\n//                       onChange={handleinput}\n//                       // onChange={props.onChange}\n//                       //   disabled={disableFields}\n//                     >\n//                       <option value=\"\" selected hidden disabled>\n//                         Please Select\n//                       </option>\n//                       <option>Islam</option>\n//                       <option>Christianity</option>\n//                       <option>Buddhism</option>\n//                       <option> Sikhism</option>\n//                       <option> Hinduism</option>\n//                       <option>Bahá’í</option>\n//                       <option>Confucianism</option>\n//                       <option>Jainism</option>\n//                       <option>Judaism</option>\n//                       <option>Zoroastrianism</option>\n//                       <option>Druze</option>\n//                     </Form.Select>\n//                   </Form.Group>\n//                 </Col>\n//               </Row>\n//             </Col>\n\n//           </div>\n//           <Button\n//                     // className={classes.button}\n//                     // variant=\"contained\"\n//                     // color=\"primary\"\n//                     onClick={()=>{\n\n//                       handleNext()}}\n//                     type=\"submit\"\n//                     //  onSubmit={handleSubmit}\n//                   >\n//                     {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n//                   </Button>\n//           </Form>\n//         </>\n//       );\n\n//     case 1:\n//       return (\n//         <>\n//           <div style={{ height: \"20%\" }}>\n//             <Row>\n//               <h5\n//                 className=\"py-2 \"\n//                 style={{ fontSize: \"22px\", padding: \"0px 19px\" }}\n//               >\n//                 Primary\n//               </h5>\n//               <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\n//                 <Form.Group\n//                   as={Col}\n//                   controlId=\"formGridphone\"\n//                   className=\"formmargin \"\n//                 >\n//                   <Form.Label>Phone</Form.Label>\n//                   <Form.Control\n//                     type=\"number\"\n//                     required\n//                     name=\"primaryphone\"\n//                     placeholder=\"phone\"\n//                     value={emp.primaryphone}\n//                     // value={props.value8}\n//                     onChange={handleinput}\n//                     // onChange={props.onChange}\n//                   />\n//                 </Form.Group>\n//               </Col>\n//               <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\n//                 <Form.Group\n//                   as={Col}\n//                   controlId=\"formGridcompanyemail\"\n//                   className=\"formmargin \"\n//                 >\n//                   <Form.Label>Email</Form.Label>\n//                   <Form.Control\n//                     type=\"email\"\n//                     required\n//                     name=\"primaryemail\"\n//                     placeholder=\"email\"\n//                     value={emp.primaryemail}\n//                     // value={props.value9}\n//                     onChange={handleinput}\n//                     // onChange={props.onChange}\n//                   />\n//                 </Form.Group>\n//               </Col>\n//             </Row>\n\n//             <Row>\n//               <h5\n//                 className=\"py-2 \"\n//                 style={{ fontSize: \"22px\", padding: \"0px 19px\" }}\n//               >\n//                 Secondary\n//               </h5>\n//               <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\n//                 <Form.Group\n//                   as={Col}\n//                   controlId=\"formGridcompanyemail\"\n//                   className=\"formmargin \"\n//                 >\n//                   <Form.Label>Phone</Form.Label>\n//                   <Form.Control\n//                     type=\"number\"\n//                     required\n//                     name=\"secondaryphone\"\n//                     placeholder=\"secondary phone\"\n//                     value={emp.secondaryphone}\n//                     // value={props.value10}\n//                     onChange={handleinput}\n//                     // onChange={props.onChange}\n//                   />\n//                 </Form.Group>\n//               </Col>\n//               <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\n//                 <Form.Group\n//                   as={Col}\n//                   controlId=\"formGridcompanyemail\"\n//                   className=\"formmargin \"\n//                 >\n//                   <Form.Label>Email</Form.Label>\n//                   <Form.Control\n//                     type=\"email\"\n//                     required\n//                     name=\"secondaryemail\"\n//                     placeholder=\"secondary Email\"\n//                     value={emp.secondaryemail}\n//                     // value={props.value11}\n//                     onChange={handleinput}\n//                     // onChange={props.onChange}\n//                   />\n//                 </Form.Group>\n//               </Col>\n//             </Row>\n//           </div>\n//         </>\n//       );\n//     case 2:\n//       return (\n//         <>\n//           <div style={{ height: \"20%\" }}>\n//             <Col lg={12}>\n//               <Form.Group\n//                 as={Col}\n//                 controlId=\"formGridFirstName\"\n//                 className=\"formmargin\"\n//               >\n//                 <Form.Label>Temporary Address</Form.Label>\n//                 <Form.Control\n//                   type=\"text\"\n//                   required\n//                   name=\"temporaryaddress\"\n//                   placeholder=\"complete address\"\n//                   value={emp.temporaryaddress}\n//                   // value={props.value12}\n//                   onChange={handleinput}\n//                   // onChange={props.onChange}\n//                   //   disabled={disableFields}\n//                 />\n//               </Form.Group>\n//             </Col>\n\n//             <Col lg={12}>\n//               <Form.Group\n//                 as={Col}\n//                 controlId=\"formGridFirstName\"\n//                 className=\"formmargin\"\n//               >\n//                 <Form.Label>Permanent Address</Form.Label>\n//                 <Form.Control\n//                   type=\"text\"\n//                   required\n//                   name=\"permanentaddress\"\n//                   placeholder=\"complete address\"\n//                   value={emp.permanentaddress}\n//                   // value={props.value13}\n//                   onChange={handleinput}\n//                   // onChange={props.onChange}\n//                   //   disabled={disableFields}\n//                 />\n//               </Form.Group>\n//             </Col>\n//             {/* </Row> */}\n//             <div style={{ marginLeft: \"0.75%\" }}>\n//               <Row>\n//                 <Col>\n//                   <Form.Label style={{ marginLeft: \"2%\" }}>City</Form.Label>\n//                   <Form.Group\n//                     as={Col}\n//                     controlId=\"formGridLastName\"\n//                     className=\"formmargin\"\n//                   >\n//                     <Form.Select\n//                       required\n//                       onChange={handleinput}\n//                       // onChange={props.onChange}\n//                       name=\"city\"\n//                       value={emp.city}\n//                       // value={props.value14}\n//                     >\n//                       <option value=\"\" selected hidden disabled>\n//                         Select City\n//                       </option>\n//                       <option>Lahore</option>\n//                       <option>Karachi</option>\n//                       <option>Faisalabad</option>\n//                       <option>Peshawar</option>\n//                       <option>Islamabad</option>\n//                     </Form.Select>\n//                   </Form.Group>\n//                 </Col>\n//                 <Col>\n//                   <Form.Label>Province</Form.Label>\n//                   <Form.Group\n//                     as={Col}\n//                     controlId=\"formGridLastName\"\n//                     className=\"formmargin\"\n//                   >\n//                     <Form.Select\n//                       required\n//                       name=\"province\"\n//                       placeholder=\"province\"\n//                       value={emp.province}\n//                       // value={props.value15}\n//                       onChange={handleinput}\n//                       // onChange={props.onChange}\n//                       //   disabled={disableFields}\n//                     >\n//                       <option value=\"\" selected hidden disabled>\n//                         Select Province\n//                       </option>\n//                       <option>Punjab</option>\n//                       <option>Sindh</option>\n//                       <option>KPK</option>\n//                       <option>Gilgit Baltistan</option>\n//                       <option>Islamabad(Capital Territory)</option>\n//                     </Form.Select>\n//                   </Form.Group>\n//                 </Col>\n//                 <Col>\n//                   <Form.Label>Country</Form.Label>\n//                   <Form.Group\n//                     as={Col}\n//                     controlId=\"formGridLastName\"\n//                     className=\"formmargin\"\n//                   >\n//                     <ReactFlags\n//                       countries={[\"PK\"]}\n//                       selected={selected}\n//                       onSelect={(code) => {\n//                         setSelected(code);\n//                         code === \"PK\" && setcountry(\"Pakistan\");\n//                         setEmp({ ...emp, country: \"Pakistan\" });\n//                       }}\n//                     />\n//                   </Form.Group>\n//                 </Col>\n//               </Row>\n//               <Row>\n//                 <Col lg={4} xl={4}>\n//                   <Form.Group\n//                     as={Col}\n//                     controlId=\"formGridLastName\"\n//                     className=\"formmargin\"\n//                   >\n//                     <Form.Label>Postal Code</Form.Label>\n//                     <Form.Control\n//                       type=\"text\"\n//                       required\n//                       name=\"postalCode\"\n//                       placeholder=\"postal code\"\n//                       value={emp.postalCode}\n//                       // value={props.value16}\n//                       onChange={handleinput}\n//                       // onChange={props.onChange}\n//                       //   disabled={disableFields}\n//                     />\n//                   </Form.Group>\n//                 </Col>\n//               </Row>\n//             </div>\n//           </div>\n//         </>\n//       );\n//     case 3:\n//       return (\n//         <>\n//           <div style={{ width: \"auto\", marginRight: \"2%\", height: \"20%\" }}>\n//             <Row>\n//               <Container>\n//                 <Row className=\"my-3\"></Row>\n//               </Container>\n//               <div className=\"my-3 d-flex \">\n//                 <div className=\"d-flex justify-content-end\">\n//                   <Button\n//                     className=\"btn ml-2\"\n//                     // onClick={()=>{props.onClick}}\n//                     onClick={() => {\n//                       setShowChildModel(true);\n//                     }}\n//                   >\n//                     Add Employement\n//                   </Button>\n//                 </div>\n//               </div>\n\n//               <Row className=\"my-3\">\n//                 <Table striped bordered hover className=\"ml-4\">\n//                   <thead>\n//                     <tr>\n//                       <th>#</th>\n//                       <th style={{ textAlign: \"center\" }}>Company</th>\n//                       <th style={{ textAlign: \"center\" }}>Position</th>\n//                       <th style={{ textAlign: \"center\" }}>Start Date</th>\n//                       <th style={{ textAlign: \"center\" }}>Left Date</th>\n//                       <th style={{ textAlign: \"center\" }}>Duration</th>\n//                       <th style={{ textAlign: \"center\" }}>Remove</th>\n//                     </tr>\n//                   </thead>\n//                   <tbody>\n//                     {employement &&\n//                       employement.map((d, i) => {\n//                         return (\n//                           <>\n//                             <tr key={i}>\n//                               <th>{i + 1}</th>\n//                               <td>{d.company}</td>\n//                               <td>{d.position}</td>\n//                               <td>{d.joiningdate}</td>\n//                               <td>{d.resignationdate}</td>\n//                               <td>{d.duration}</td>\n//                               <td>\n//                                 <i\n//                                   class=\"fa fa-trash-can\"\n//                                   aria-hidden=\"true\"\n//                                   style={{ color: \"red\" }}\n//                                   onClick={() => removemployement(i)}\n//                                 ></i>\n//                               </td>\n//                             </tr>\n//                           </>\n//                         );\n//                       })}\n//                     {/* {props.employement} */}\n//                   </tbody>\n//                 </Table>\n//               </Row>\n//             </Row>\n//           </div>\n//           <Modal\n//             aria-labelledby=\"contained-modal-title-vcenter\"\n//             centered\n//             show={childModel}\n//             onHide={Closechildmodal}\n//             size=\"lg\"\n//           >\n//             <Modal.Header closeButton>\n//               <Modal.Title\n//                 id=\"contained-modal-title-vcenter \"\n//                 style={{ textAlign: \"center\" }}\n//               >\n//                 <h5>Employement Details</h5>\n//               </Modal.Title>\n//             </Modal.Header>\n//             <Modal.Body>\n//               <Container fluid>\n//                 <Row>\n//                   <div className=\"py-3\">\n//                     <h4>Previous Employment</h4>\n//                     <hr\n//                       style={{\n//                         fontWeight: \"bold\",\n//                         borderWidth: \"2px\",\n//                         border: \"1px solid black\",\n//                       }}\n//                     ></hr>\n//                   </div>\n\n//                   <Col>\n//                     <Form.Group\n//                       as={Col}\n//                       controlId=\"formGridempcompany\"\n//                       className=\"formmargin\"\n//                     >\n//                       <Form.Label>Company</Form.Label>\n//                       <Form.Control\n//                         type=\"text\"\n//                         required\n//                         name=\"company\"\n//                         placeholder=\"company name..\"\n//                         value={empdetails.company}\n//                         // onChange={handleempinput}\n//                         onChange={handleempinput}\n//                         // disabled={disableFields}\n//                       />\n//                     </Form.Group>\n//                   </Col>\n//                   <Col>\n//                     <Form.Group\n//                       as={Col}\n//                       controlId=\"formGridLastName\"\n//                       className=\"formmargin\"\n//                     >\n//                       <Form.Label>Position</Form.Label>\n//                       <Form.Control\n//                         type=\"text\"\n//                         required\n//                         name=\"position\"\n//                         placeholder=\"position..\"\n//                         value={empdetails.position}\n//                         onChange={handleempinput}\n//                         // disabled={disableFields}\n//                       />\n//                     </Form.Group>\n//                   </Col>\n//                 </Row>\n//                 <Row>\n//                   <Col>\n//                     <Form.Group\n//                       as={Col}\n//                       controlId=\"formGridFirstName\"\n//                       className=\"formmargin\"\n//                     >\n//                       <Form.Label>Joining Date</Form.Label>\n//                       <Form.Control\n//                         type=\"date\"\n//                         required\n//                         name=\"joiningdate\"\n//                         placeholder=\"joining date\"\n//                         value={empdetails.joiningdate}\n//                         onChange={async (e) =>\n//                           await handleempinputJoiningDate(e)\n//                         }\n//                         // disabled={disableFields}\n//                       />\n//                     </Form.Group>\n//                   </Col>\n//                   <Col>\n//                     <Form.Group\n//                       as={Col}\n//                       controlId=\"formGridFirstName\"\n//                       className=\"formmargin\"\n//                     >\n//                       <Form.Label>Resignation Date</Form.Label>\n//                       <Form.Control\n//                         type=\"date\"\n//                         required\n//                         name=\"resignationdate\"\n//                         placeholder=\"resignation date\"\n//                         value={empdetails.resignationdate}\n//                         onChange={async (e) =>\n//                           await handleempinputResignationDate(e)\n//                         }\n//                         // disabled={disableFields}\n//                       />\n//                     </Form.Group>\n//                   </Col>\n//                 </Row>\n//                 <Row>\n//                   <Form.Label>Job Description</Form.Label>\n//                   <FormGroup\n//                     as={Col}\n//                     controlId=\"formGridFirstName\"\n//                     className=\"formmargin\"\n//                   >\n//                     <Form.Control\n//                       as=\"textarea\"\n//                       rows={\"3\"}\n//                       style={{ resize: \"none\" }}\n//                       required\n//                       name=\"jobdescription\"\n//                       placeholder=\"Tell us about your job role & experience in previous company \"\n//                       value={empdetails.jobdescription}\n//                       onChange={handleempinput}\n//                       // disabled={disableFields}\n//                     />\n//                   </FormGroup>\n//                 </Row>\n//                 <div className=\"d-flex justify-content-center my-3\">\n//                   <Button\n//                     className=\"btn ml-2\"\n//                     onClick={() => {\n//                       addhistory();\n//                       Closechildmodal();\n//                     }}\n//                   >\n//                     Add Employement\n//                   </Button>\n//                 </div>\n//               </Container>\n//             </Modal.Body>\n//           </Modal>\n//         </>\n//       );\n//     case 4: {\n//       return (\n//         <div style={{ height: \"20%\" }}>\n//           <Row>\n//             <Col>\n//               <Form.Group\n//                 as={Col}\n//                 controlId=\"formGridLastName\"\n//                 className=\"formmargin\"\n//               >\n//                 <Form.Label>Username</Form.Label>\n//                 <Form.Control\n//                   type=\"text\"\n//                   required\n//                   name=\"username\"\n//                   placeholder=\"username\"\n//                   value={emp.username}\n//                   // value={props.value21}\n//                   onChange={handleinput}\n//                   // onChange={props.onChange}\n//                   //   disabled={disableFields}\n//                 />\n//               </Form.Group>\n//             </Col>\n//             <Col>\n//               <Form.Group\n//                 as={Col}\n//                 controlId=\"formGridLastName\"\n//                 className=\"formmargin\"\n//               >\n//                 <Form.Label>Password</Form.Label>\n//                 <Form.Control\n//                   type=\"password\"\n//                   required\n//                   name=\"password\"\n//                   placeholder=\"password\"\n//                   value={emp.password}\n//                   // value={props.value22}\n//                   onChange={handleinput}\n//                   // onChange={props.onChange}\n//                   //   disabled={disableFields}\n//                 />\n//               </Form.Group>\n//             </Col>\n//             <Col>\n//               <Form.Group\n//                 as={Col}\n//                 controlId=\"formGridFirstName\"\n//                 className=\"formmargin\"\n//               >\n//                 <Form.Label>Joining Date</Form.Label>\n//                 <Form.Control\n//                   type=\"date\"\n//                   required\n//                   name=\"joiningdate\"\n//                   placeholder=\"joining date\"\n//                   value={emp.joiningdate}\n//                   // value={props.value19}\n//                   onChange={handleinput}\n//                   // onChange={props.onChange}\n//                   //   disabled={disableFields}\n//                 />\n//               </Form.Group>\n//             </Col>\n//           </Row>\n//           <Row>\n//             <Col>\n//               <Form.Group\n//                 as={Col}\n//                 controlId=\"formGridLastName\"\n//                 className=\"formmargin\"\n//               >\n//                 <Form.Label>Salary</Form.Label>\n//                 <Form.Control\n//                   type=\"Number\"\n//                   required\n//                   name=\"currentSalary\"\n//                   placeholder=\"salary\"\n//                   value={emp.currentSalary}\n//                   // value={props.value23}\n//                   onChange={handleinput}\n//                   // onChange={props.onChange}\n//                   //   disabled={disableFields}\n//                 />\n//               </Form.Group>\n//             </Col>\n//             <Col>\n//               <Form.Group\n//                 as={Col}\n//                 controlId=\"formGridLastName\"\n//                 className=\"formmargin\"\n//               >\n//                 <Form.Label>Designation</Form.Label>\n//                 <Form.Control\n//                   type=\"text\"\n//                   required\n//                   name=\"designation\"\n//                   placeholder=\"designation..\"\n//                   value={emp.terminationreason}\n//                   // value={props.value20}\n//                   onChange={handleinput}\n//                   // onChange={props.onChange}\n//                   //   disabled={disableFields}\n//                 />\n//               </Form.Group>\n//             </Col>\n//             <Col>\n//               <Form.Group\n//                 as={Col}\n//                 controlId=\"formGridFirstName\"\n//                 className=\"formmargin\"\n//               >\n//                 <Form.Label>Payment Mode</Form.Label>\n//                 <Form.Select\n//                   required\n//                   name=\"paymentmode\"\n//                   value={emp.paymentmode}\n//                   // value={props.value25}\n//                   onChange={handleinput}\n//                   // onChange={props.onChange}\n//                   //   disabled={disableFields}\n//                 >\n//                   <option value=\"\" selected hidden disabled>\n//                     Please Select\n//                   </option>\n//                   <option>Cheque</option>\n//                   <option>Cash</option>\n//                   <option>Bank Transfer</option>\n//                 </Form.Select>\n//               </Form.Group>\n//             </Col>\n//           </Row>\n//           <Row>\n//             <Col lg={4}>\n//               <Form.Group\n//                 as={Col}\n//                 controlId=\"formGriddepartments\"\n//                 className=\"formmargin\"\n//               >\n//                 <Form.Label>Department</Form.Label>\n//                 <Form.Select name=\"departments\">\n//                   onChange={handleinput}\n//                   {/* onChange={props.onChange} */}\n//                   <option disabled selected defaultValue={\"\"}>\n//                     Select department..\n//                   </option>\n//                   {dep.map((d) => {\n//                     return (\n//                       <>\n//                         <option key={d._id} value={d._id}>\n//                           {d.departmentname}\n//                         </option>\n//                       </>\n//                     );\n//                   })}\n//                 </Form.Select>\n//               </Form.Group>\n//             </Col>\n//             <Col xl=\"4\">\n//               <Form.Group\n//                 as={Col}\n//                 controlId=\"formGriddepartments\"\n//                 className=\"formmargin\"\n//               >\n//                 <Form.Label>Employement Status</Form.Label>\n//                 <Form.Select\n//                   onChange={handleinput}\n//                   // onChange={props.onChange}\n//                   name=\"employementstatus\"\n//                   value={emp.employementstatus}\n//                   // value={props.value41}\n//                 >\n//                   <option defaultValue={\"\"} disbaled selected hidden>\n//                     Select Please\n//                   </option>\n//                   <option>Intern</option>\n//                   <option>Probation</option>\n//                   <option>Permanent</option>\n//                   <option>Left</option>\n//                 </Form.Select>\n//               </Form.Group>\n//             </Col>\n//           </Row>\n//         </div>\n//       );\n//     }\n//     case 5: {\n//       return (\n//         <div style={{ height: \"20%\" }}>\n//           <Row>\n//             <Col>\n//               <Form.Group\n//                 as={Col}\n//                 controlId=\"formGridLastName\"\n//                 className=\"formmargin\"\n//               >\n//                 <Form.Label>Bank Name</Form.Label>\n//                 <Form.Select\n//                   required\n//                   name=\"bankname\"\n//                   placeholder=\"bank name..\"\n//                   value={emp.bankname}\n//                   onChange={handleinput}\n//                   //   disabled={disableFields}\n//                 >\n//                   <option>Please Select</option>\n//                   <option>MCB Limited</option>\n//                   <option>Bank Islami Limited</option>\n//                   <option>Allied Bank Limited</option>\n//                   <option>Bank Al-Habib Limited</option>\n//                   <option>Faysal Bank Limited</option>\n//                   <option>Mezaan Bank Limited</option>\n//                   <option>National Bank of Pakistan</option>\n//                   <option>MCB Islamic Limited</option>\n//                   <option>HBL</option>\n//                   <option>UBL</option>\n//                   <option>Askari Bank </option>\n//                 </Form.Select>\n//               </Form.Group>\n//             </Col>\n//             <Col>\n//               <Form.Group\n//                 as={Col}\n//                 controlId=\"formGridLastName\"\n//                 className=\"formmargin\"\n//               >\n//                 <Form.Label>Account Title</Form.Label>\n//                 <Form.Control\n//                   type=\"text\"\n//                   required\n//                   name=\"accounttitle\"\n//                   placeholder=\"account title..\"\n//                   value={emp.accounttitle}\n//                   // value={props.value27}\n//                   onChange={handleinput}\n//                   // onChange={props.onChange}\n//                   //   disabled={disableFields}\n//                 />\n//               </Form.Group>\n//             </Col>\n//             <Col>\n//               <Form.Group\n//                 as={Col}\n//                 controlId=\"formGridLastName\"\n//                 className=\"formmargin\"\n//               >\n//                 <Form.Label>Account No</Form.Label>\n//                 <Form.Control\n//                   type=\"text\"\n//                   required\n//                   name=\"accountno\"\n//                   placeholder=\"account no..\"\n//                   value={emp.accountno}\n//                   // value={props.value28}\n//                   onChange={handleinput}\n//                   // onChange={props.onChange}\n//                   //   disabled={disableFields}\n//                 />\n//               </Form.Group>\n//             </Col>\n//           </Row>\n//           <Row className=\"p-0\">\n//             <Col xxl={4}>\n//               <Form.Group\n//                 as={Col}\n//                 controlId=\"formGridLastName\"\n//                 className=\"formmargin\"\n//               >\n//                 <Form.Label> IBAN</Form.Label>\n//                 <Form.Control\n//                   type=\"text\"\n//                   required\n//                   name=\"IBAN\"\n//                   placeholder=\"iban..\"\n//                   value={emp.IBAN}\n//                   // value={props.value29}\n//                   onChange={handleinput}\n//                   // onChange={props.onChange}\n//                   //  disabled={disableFields}\n//                 />\n//               </Form.Group>\n//             </Col>\n\n//             <Col xxl={4}>\n//               <Form.Group\n//                 as={Col}\n//                 controlId=\"formGridLastName\"\n//                 className=\"formmargin\"\n//               >\n//                 <Form.Label>Branch code</Form.Label>\n//                 <Form.Control\n//                   type=\"text\"\n//                   required\n//                   name=\"branchcode\"\n//                   placeholder=\"branch code..\"\n//                   value={emp.branchcode}\n//                   // value={props.value30}\n//                   onChange={handleinput}\n//                   // onChange={props.onChange}\n//                   //  disabled={disableFields}\n//                 />\n//               </Form.Group>\n//             </Col>\n//           </Row>\n//         </div>\n//       );\n//     }\n//     default:\n//       return \"unknown step\";\n//   }\n// }\n\n// const EmployeeData = (props) => {\n//   console.log(\"props1\", props);\n//   const classes = useStyles();\n//   const [activeStep, setActiveStep] = useState(0);\n//   const [skippedSteps, setSkippedSteps] = useState([]);\n//   const steps = getSteps();\n\n//   const isStepOptional = (step) => {\n//     return step === 1 || step === 2;\n//   };\n\n//   const isStepSkipped = (step) => {\n//     return skippedSteps.includes(step);\n//   };\n\n//   const handleNext = () => {\n//     setActiveStep(activeStep + 1);\n//     setSkippedSteps(skippedSteps.filter((skipItem) => skipItem !== activeStep));\n//   };\n\n//   const handleBack = () => {\n//     setActiveStep(activeStep - 1);\n//   };\n\n//   const handleSkip = () => {\n//     if (!isStepSkipped(activeStep)) {\n//       setSkippedSteps([...skippedSteps, activeStep]);\n//     }\n//     setActiveStep(activeStep + 1);\n//   };\n\n//   return (\n//     <div className=\"content-wrapper \">\n//       <div className=\"col\">\n//         <h3 className=\"page-title\">Add Employees</h3>\n//         <ul className=\"breadcrumb\" style={{ backgroundColor: \"#f7f7f7\" }}>\n//           <li className=\"breadcrumb-item\">\n//             <Link to=\"/\" style={{ color: \"#1f1f1f\" }}>\n//               Dashboard\n//             </Link>\n//           </li>\n//           <li className=\"breadcrumb-item active\">Add Employee</li>\n//         </ul>\n//       </div>\n//       <div\n//         className=\" d-flex justify-content-center \"\n//         style={{ marginTop: \"5%\" }}\n//       >\n//         <Card>\n//           <div style={{ height: \"40%\", width: \"auto\" }}>\n//             <Card.Body>\n//               <div style={{ width: \"auto\" }}>\n//                 <Stepper alternativeLabel activeStep={activeStep}>\n//                   {steps.map((step, index) => {\n//                     const labelProps = {};\n//                     const stepProps = {};\n//                     // if (isStepOptional(index)) {\n//                     //   labelProps.optional = (\n//                     //     <Typography\n//                     //       variant=\"caption\"\n//                     //       align=\"center\"\n//                     //       style={{ display: \"block\" }}\n//                     //     >\n//                     //       optional\n//                     //     </Typography>\n//                     //   );\n//                     // }\n//                     if (isStepSkipped(index)) {\n//                       stepProps.completed = false;\n//                     }\n//                     return (\n//                       <Step {...stepProps} key={index}>\n//                         <StepLabel {...labelProps}>{step}</StepLabel>\n//                       </Step>\n//                     );\n//                   })}\n//                 </Stepper>\n//               </div>\n//               {activeStep === steps.length ? (\n//                 <Typography variant=\"h3\" align=\"center\">\n//                   Thank You\n//                 </Typography>\n//               ) : (\n//                 <>\n//                   <form>{getStepContent({ props, activeStep,handleNext, steps  })}</form>\n//                   <Button\n//                     className={classes.button}\n//                     disabled={activeStep === 0}\n//                     onClick={handleBack}\n//                   >\n//                     back\n//                   </Button>\n//                   {/* {isStepOptional(activeStep) && (\n//                 <Button\n//                   className={classes.button}\n//                   variant=\"contained\"\n//                   color=\"primary\"\n//                   onClick={handleSkip}\n//                 >\n//                   skip\n//                 </Button>\n//               )} */}\n//                   {/* <Button\n//                     className={classes.button}\n//                     variant=\"contained\"\n//                     color=\"primary\"\n//                     onClick={handleNext}\n//                     type=\"submit\"\n//                     //  onSubmit={handleSubmit}\n//                   >\n//                     {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n//                   </Button> */}\n//                 </>\n//               )}\n//             </Card.Body>\n//           </div>\n//         </Card>\n//       </div>\n//     </div>\n//   );\n// };\n// export default EmployeeData;\nfunction EmployeeData() {\n  var _useState5;\n  /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1437,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"page-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1438,\n      columnNumber: 12\n    }\n  }, \"Add Employees\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"breadcrumb\",\n    style: {\n      backgroundColor: \"#f7f7f7\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1439,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"breadcrumb-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1440,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    style: {\n      color: \"#1f1f1f\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1441,\n      columnNumber: 15\n    }\n  }, \"Dashboard\")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"breadcrumb-item active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1445,\n      columnNumber: 13\n    }\n  }, \"Add Employee\")));\n  var _useState = useState(1),\n    _useState2 = _slicedToArray(_useState, 2),\n    step = _useState2[0],\n    setstep = _useState2[1]; //state for form data\n  var _useState3 = useState((_useState5 = {\n      firstName: \"\",\n      lastName: \"\",\n      age: \"\",\n      email: \"\",\n      phone: \"\",\n      phone1: \"\",\n      email1: \"\",\n      martialStatus: \"\",\n      religion: \"\",\n      gender: \"\",\n      cnic: \"\",\n      dob: \"\",\n      temporaryaddress: \"\",\n      permanentaddress: \"\",\n      city: \"\",\n      province: \"\",\n      postalcode: \"\",\n      company: \"\",\n      position: \"\",\n      joiningdate: \"\",\n      resignationdate: \"\",\n      jobdescription: \"\",\n      username: \"\",\n      password: \"\"\n    }, _defineProperty(_useState5, \"joiningdate\", \"\"), _defineProperty(_useState5, \"salary\", \"\"), _defineProperty(_useState5, \"designation\", \"\"), _defineProperty(_useState5, \"paymentmode\", \"\"), _defineProperty(_useState5, \"employementstatus\", \"\"), _useState5)),\n    _useState4 = _slicedToArray(_useState3, 2),\n    formData = _useState4[0],\n    setFormData = _useState4[1];\n  var nextStep = function nextStep() {\n    setstep(step + 1);\n    console.log(\"nextstep\", nextStep);\n  };\n  var prevStep = function prevStep() {\n    setstep(step - 1);\n  };\n  var handleInputData = function handleInputData(input) {\n    return function (e) {\n      // input value from the form\n      var value = e.target.value; //updating for data state taking previous state and then adding new value to create new object\n      setFormData(function (prevState) {\n        return _objectSpread({}, prevState, _defineProperty({}, input, value));\n      });\n    };\n  };\n  switch (step) {\n    // case 1 to show stepOne form and passing nextStep, prevStep, and handleInputData as handleFormData method as prop and also formData as value to the fprm\n    case 1:\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1507,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1508,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1509,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: {\n          span: 6,\n          offset: 3\n        },\n        className: \"custom-margin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1510,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(StepOne, {\n        nextStep: nextStep,\n        handleFormData: handleInputData,\n        values: formData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1511,\n          columnNumber: 17\n        }\n      })))));\n    case 2:\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1519,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1520,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1521,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: {\n          span: 6,\n          offset: 3\n        },\n        className: \"custom-margin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1522,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(StepTwo, {\n        nextStep: nextStep,\n        prevStep: prevStep,\n        handleFormData: handleInputData,\n        values: formData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1523,\n          columnNumber: 17\n        }\n      })))));\n    case 3:\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1531,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1532,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1533,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: {\n          span: 6,\n          offset: 3\n        },\n        className: \"custom-margin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1534,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(StepFive, {\n        nextStep: nextStep,\n        prevStep: prevStep,\n        handleFormData: handleInputData,\n        values: formData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1535,\n          columnNumber: 19\n        }\n      })))));\n    case 4:\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1543,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1544,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1545,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: {\n          span: 6,\n          offset: 3\n        },\n        className: \"custom-margin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1546,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(StepThree, {\n        nextStep: nextStep,\n        prevStep: prevStep,\n        handleFormData: handleInputData,\n        values: formData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1547,\n          columnNumber: 19\n        }\n      })))));\n    case 5:\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1556,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1557,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1558,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: {\n          span: 6,\n          offset: 3\n        },\n        className: \"custom-margin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1559,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(StepFour, {\n        nextStep: nextStep,\n        prevStep: prevStep,\n        handleFormData: handleInputData,\n        values: formData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1560,\n          columnNumber: 19\n        }\n      })))));\n    default:\n      return \"unknown step\";\n  }\n}\nexport default EmployeeData;","map":{"version":3,"names":["React","useState","useEffect","Typography","TextField","Button","Stepper","Step","StepLabel","makeStyles","Modal","Form","Col","Row","Container","FormGroup","Table","Card","axios","Link","NotificationContainer","NotificationManager","ViewListIcon","ViewModuleIcon","ToggleButton","ToggleButtonGroup","TableView","useNavigate","DatePicker","ReactFlags","cities","StepOne","StepTwo","StepThree","StepFour","StepFive","EmployeeData","backgroundColor","color","step","setstep","firstName","lastName","age","email","phone","phone1","email1","martialStatus","religion","gender","cnic","dob","temporaryaddress","permanentaddress","city","province","postalcode","company","position","joiningdate","resignationdate","jobdescription","username","password","formData","setFormData","nextStep","console","log","prevStep","handleInputData","input","e","value","target","prevState","span","offset"],"sources":["C:/Users/hassan.ali/Downloads/HR-SYSTEM-main/client/src/Components/Employee Data/All Employees/EmployeeData.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Modal, Form, Col, Row, Container, FormGroup } from \"react-bootstrap\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport axios from \"axios\";\r\n// import Table from \"react-bootstrap/Table\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\nimport ViewListIcon from \"@mui/icons-material/ViewList\";\r\nimport ViewModuleIcon from \"@mui/icons-material/ViewModule\";\r\nimport ToggleButton from \"@mui/material/ToggleButton\";\r\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\r\nimport TableView from \"../TableView/Table\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport ReactFlags from \"react-flags-select\";\r\nimport { cities } from \"./cities\";\r\nimport StepOne from \"./StepOne\";\r\nimport StepTwo from \"./StepTwo\";\r\nimport StepThree from \"./StepThree\";\r\nimport StepFour from \"./StepFour\";\r\nimport StepFive from \"./StepFive\";\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   button: {\r\n//     marginRight: theme.spacing(1),\r\n//   },\r\n// }));\r\n// const moment = require(\"moment\");\r\n\r\n// function getSteps() {\r\n//   return [\r\n//     \"Personal Information\",\r\n//     \"Address & Region\",\r\n//     \"Education Information\",\r\n//     \"Previous Information\",\r\n//     \"Employement Details\",\r\n//     \"Bank Details\",\r\n//   ];\r\n// }\r\n\r\n// function getStepContent({ props, activeStep, handleNext,steps }) {\r\n//   let navigate = useNavigate();\r\n//   const url2 = \"/departments\";\r\n//   const url = \"/employees\";\r\n//   const url1 = \"/auth/register\";\r\n//   const [dep, setDep] = useState([]);\r\n//   const [datas, setData] = useState();\r\n//   // const [modalShow, setModalShow] = React.useState(false);\r\n//   const handleClose = () => setShow(false);\r\n//   const Closechildmodal = () => setShowChildModel(false);\r\n//   const Closechildmodal1 = () => setShowChildModel1(false);\r\n//   const showChildModel = () => setShowChildModel(true);\r\n//   const showChildModel1 = () => setShowChildModel1(true);\r\n//   const handleShow = () => setShow(true);\r\n//   const [childModel, setShowChildModel] = useState(false);\r\n//   const [childModel1, setShowChildModel1] = useState(false);\r\n//   const [show, setShow] = useState(false);\r\n//   const [birth, setbirth] = useState(\"\");\r\n//   const [testUpdate, setTestUpdate] = useState(false);\r\n\r\n//   const [list, setlist] = useState(false);\r\n//   //for profile pic\r\n//   const [file, setfile] = useState();\r\n//   //Employee Add\r\n//   const [emp, setEmp] = useState({\r\n//     profilepic: \"\",\r\n//     firstname: \"\",\r\n//     lastname: \"\",\r\n//     dob: \"\",\r\n//     cnic: \"\",\r\n//     gender: \"\",\r\n//     martialStatus: \"\",\r\n//     religion: \"\",\r\n//     jobtitle: \"\",\r\n//     username: \"\",\r\n//     primaryemail: \"\",\r\n//     secondaryemail: \"\",\r\n//     password: \"\",\r\n//     primaryphone: \"\",\r\n//     secondaryphone: \"\",\r\n//     permanentaddress: \"\",\r\n//     temporaryaddress: \"\",\r\n//     province: \"\",\r\n//     city: \"\",\r\n//     postalCode: \"\",\r\n//     departments: \"\",\r\n//     designation: \"\",\r\n//     joiningdate: \"\",\r\n//     educationdetails: \"\",\r\n//     employementhistory: \"\",\r\n\r\n//     currentSalary: \"\",\r\n//     employementstatus: \"\",\r\n//     //bank information\r\n//     bankname: \"\",\r\n//     paymentmode: \"\",\r\n//     accounttitle: \"\",\r\n//     accountno: \"\",\r\n//     IBAN: \"\",\r\n//     branchcode: \"\",\r\n//     country: \"\",\r\n//     //degree info\r\n//   });\r\n//   //educaion details add and remove //\r\n//   const [education, seteducation] = useState([]);\r\n//   const [selected, setSelected] = useState(\"\");\r\n//   const [country, setcountry] = useState(\"\");\r\n//   const [employement, setemployement] = useState([]);\r\n//   const [empdetails, setempdetails] = useState({\r\n//     company: \"\",\r\n//     position: \"\",\r\n//     joiningdate: \"\",\r\n//     resignationdate: \"\",\r\n//     duration: \"\",\r\n//     jobdescription: \"\",\r\n//   });\r\n//   const [details, setdetails] = useState({\r\n//     degreetitle: \"\",\r\n//     institute: \"\",\r\n//     start: \"\",\r\n//     end: \"\",\r\n//     status: \"\",\r\n//   });\r\n//   const removeitem = (i) => {\r\n//     const temp = education;\r\n//     temp.splice(i, 1);\r\n//     console.log(\"splice\", temp);\r\n//     seteducation(temp);\r\n//     setTestUpdate(!testUpdate);\r\n//   };\r\n//   const removemployement = (i) => {\r\n//     const temp = employement;\r\n//     employement.splice(i, 1);\r\n//     console.log(\"splice\", temp);\r\n//     setemployement(temp);\r\n//     setTestUpdate(!testUpdate);\r\n//   };\r\n//   const addhistory = () => {\r\n//     var empl = employement;\r\n//     empl.push({\r\n//       company: empdetails.company,\r\n//       position: empdetails.position,\r\n//       joiningdate: empdetails.joiningdate,\r\n//       resignationdate: empdetails.resignationdate,\r\n//       duration: empdetails.duration,\r\n//       jobdescription: empdetails.jobdescription,\r\n//     });\r\n//     console.log(\"emplllllllll\", empl);\r\n//     setemployement(empl);\r\n//     setEmp({ ...emp, employementhistory: empl });\r\n//   };\r\n\r\n//   let name, value;\r\n//   const handleinput = (e) => {\r\n//     console.log(e);\r\n//     name = e.target.name;\r\n//     value = e.target.value;\r\n//     setEmp({ ...emp, [name]: value });\r\n//   };\r\n\r\n//   const handleeducationdetails = async (e) => {\r\n//     let name, value;\r\n\r\n//     name = e.target.name;\r\n//     value = e.target.value;\r\n\r\n//     await setdetails({\r\n//       ...details,\r\n//       [name]: value,\r\n//     });\r\n//   };\r\n\r\n//   //handle user input form data\r\n\r\n//   const handleempinput = async (e) => {\r\n//     let name, value;\r\n\r\n//     name = e.target.name;\r\n//     value = e.target.value;\r\n\r\n//     await setempdetails({\r\n//       ...empdetails,\r\n//       [name]: value,\r\n//     });\r\n//   };\r\n\r\n//   const addeducation = () => {\r\n//     var temp = education;\r\n//     temp.push({\r\n//       degreetitle: details.degreetitle,\r\n//       institute: details.institute,\r\n//       start: details.start,\r\n//       end: details.end,\r\n//       status: details.status,\r\n//     });\r\n//     seteducation(temp);\r\n//     setEmp({ ...emp, educationdetails: education });\r\n//   };\r\n\r\n//   const handleempinputJoiningDate = async (e) => {\r\n//     let name, value;\r\n\r\n//     name = e.target.name;\r\n//     value = e.target.value;\r\n\r\n//     console.log(\"change\", empdetails);\r\n\r\n//     var a = moment(empdetails.resignationdate);\r\n//     var b = moment(e.target.value);\r\n\r\n//     var years = a.diff(b, \"year\");\r\n//     b.add(years, \"years\");\r\n\r\n//     var months = a.diff(b, \"months\");\r\n//     b.add(months, \"months\");\r\n\r\n//     var days = a.diff(b, \"days\");\r\n\r\n//     console.log(years + \" years \" + months + \" months \" + days + \" days\");\r\n\r\n//     await setempdetails({\r\n//       ...empdetails,\r\n//       [name]: e.target.value,\r\n//       duration: `${years}  years  ${months}  months  ${days} days`,\r\n//     });\r\n//   };\r\n\r\n//   const handleempinputResignationDate = async (e) => {\r\n//     let name, value;\r\n\r\n//     name = e.target.name;\r\n//     value = e.target.value;\r\n\r\n//     var a = moment(e.target.value);\r\n//     var b = moment(empdetails.joiningdate);\r\n\r\n//     var years = a.diff(b, \"year\");\r\n//     b.add(years, \"years\");\r\n\r\n//     var months = a.diff(b, \"months\");\r\n//     b.add(months, \"months\");\r\n\r\n//     var days = a.diff(b, \"days\");\r\n\r\n//     console.log(years + \" years \" + months + \" months \" + days + \" days\");\r\n\r\n//     await setempdetails({\r\n//       ...empdetails,\r\n//       [name]: e.target.value,\r\n//       duration: `${years}  years  ${months}  months  ${days} days`,\r\n//     });\r\n//   };\r\n//   ///education & employement details code end;\r\n\r\n//   //list and grid view start\r\n//   const [view, setView] = useState(false);\r\n//   const handleChange = (event, nextView) => {\r\n//     setView(!view);\r\n//     setView(nextView);\r\n//     setView(!view);\r\n//     // setlist(nextView)\r\n//     console.log(nextView);\r\n//   };\r\n//   //   const handleChange = () => {\r\n//   //     setlist(!list)\r\n//   //   };\r\n//   //submitting values of user\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (file) {\r\n//       const data = new FormData();\r\n//       const filename = Date.now() + file.name;\r\n//       data.append(\"name\", filename);\r\n//       data.append(\"file\", file);\r\n//       emp.profilepic = filename;\r\n//       try {\r\n//         await axios.post(\"/upload\", data);\r\n//       } catch (err) {\r\n//         console.log(err);\r\n//         NotificationManager.error(\"Pic not Uploaded\");\r\n//       }\r\n//     }\r\n\r\n//     try {\r\n//       const res = await axios.post(url1, emp);\r\n//       console.log(res);\r\n//       res && NotificationManager.success(\"Sucessfully Added Employee\");\r\n//       // res && window.location.replace(\"/employees\");\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//       NotificationManager.error(\"Something went wrong \");\r\n//     }\r\n//   };\r\n//   //fetching employees data\r\n//   const fetchData = async () => {\r\n//     try {\r\n//       const res = await axios.get(url);\r\n//       console.log(res.data);\r\n//       const data = res.data.employees;\r\n//       setData(data);\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//       NotificationManager.error(\"Api Error 404\");\r\n//     }\r\n//   };\r\n//   //getting Employees\r\n//   const getEmp = async () => {\r\n//     try {\r\n//       const res = await axios.get(url2);\r\n//       const datas = res.data.departments;\r\n//       console.log(\"departments\", datas);\r\n//       setDep(datas);\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//     }\r\n//   };\r\n//   useEffect(() => {\r\n//     fetchData();\r\n//     getEmp();\r\n//   }, []);\r\n//   const PF = \"http://localhost:5002/images/\";\r\n//   console.log(\"propss\", props);\r\n//   const step = activeStep;\r\n//   switch (step) {\r\n//     case 0:\r\n//       return (\r\n//         <>\r\n//         <Form>\r\n//           <div className=\"w-75\" id=\"responsivewidth\">\r\n//             <Col>\r\n//               {\" \"}\r\n//               <Row>\r\n//                 <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\r\n//                   <Form.Group\r\n//                     as={Col}\r\n//                     controlId=\"formGridFirstName\"\r\n//                     className=\"formmargin\"\r\n//                   >\r\n//                     <Form.Label>First Name</Form.Label>\r\n//                     <Form.Control\r\n//                       type=\"text\"\r\n//                       required\r\n//                       name=\"firstname\"\r\n//                       placeholder=\"First Name\"\r\n//                       value={emp.firstname}\r\n//                       // value={props.value}\r\n//                       onChange={handleinput}\r\n//                       // onChange={props.onChange}\r\n//                     />\r\n//                   </Form.Group>\r\n//                 </Col>\r\n//                 <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\r\n//                   <Form.Group\r\n//                     as={Col}\r\n//                     controlId=\"formGridLastName\"\r\n//                     className=\"formmargin\"\r\n//                   >\r\n//                     <Form.Label>Last Name</Form.Label>\r\n//                     <Form.Control\r\n//                       type=\"text\"\r\n//                       required\r\n//                       name=\"lastname\"\r\n//                       placeholder=\"Last Name\"\r\n//                       value={emp.lastname}\r\n//                       // value={props.value1}\r\n//                       onChange={handleinput}\r\n//                       // onChange={props.onChange}\r\n//                     />\r\n//                   </Form.Group>\r\n//                 </Col>\r\n//               </Row>\r\n//               <Row>\r\n//                 <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\r\n//                   <Form.Group\r\n//                     as={Col}\r\n//                     controlId=\"formGridgender\"\r\n//                     className=\"formmargin\"\r\n//                   >\r\n//                     <Form.Label>Gender</Form.Label>\r\n//                     <Form.Select\r\n//                       required\r\n//                       name=\"gender\"\r\n//                       value={emp.gender}\r\n//                       // value={props.value2}\r\n//                       onChange={handleinput}\r\n//                       // onChange={props.onChange}\r\n//                     >\r\n//                       <option value=\"\" selected hidden disabled>\r\n//                         Please Select\r\n//                       </option>\r\n//                       <option>Male</option>\r\n//                       <option>Female</option>\r\n//                       <option>Other</option>\r\n//                     </Form.Select>\r\n//                   </Form.Group>\r\n//                 </Col>\r\n//                 <Col xl=\"6\" lg=\"6\" md=\"6\">\r\n//                   <Form.Group\r\n//                     as={Col}\r\n//                     controlId=\"formGridFirstName\"\r\n//                     className=\"formmargin\"\r\n//                   >\r\n//                     <Form.Label>National ID </Form.Label>\r\n//                     <Form.Control\r\n//                       type=\"number\"\r\n//                       required\r\n//                       name=\"cnic\"\r\n//                       placeholder=\"CNIC\"\r\n//                       value={emp.cnic}\r\n//                       // value={props.value3}\r\n//                       onChange={handleinput}\r\n//                       // onChange={props.onChange}\r\n//                       //   disabled={disableFields}\r\n//                     />\r\n//                   </Form.Group>\r\n//                 </Col>\r\n//               </Row>\r\n//               <Row>\r\n//                 <Col xxl=\"6\" xl=\"6\" lg=\"6\">\r\n//                   <Form.Group\r\n//                     as={Col}\r\n//                     controlId=\"formGridLastName\"\r\n//                     className=\"formmargin\"\r\n//                   >\r\n//                     <Form.Label>D-0-B</Form.Label>\r\n//                     {/* <DatePicker\r\n                          \r\n//                             required\r\n//                             selected={emp.dob}\r\n//                             onChange={(date)=>{setEmp({...emp,dob:moment(date).format('dd/mm/yyyy')})}}\r\n//                             // dateFormat='d MMMM, yyyy'\r\n//                             dateFormat='dd/mm/yyyy'\r\n//                             dropDownMode=\"select\"\r\n//                           /> */}\r\n//                     <Form.Control\r\n//                       type=\"date\"\r\n//                       required\r\n//                       placeholder=\"dd/mm/yyyy\"\r\n//                       name=\"dob\"\r\n//                       value={emp.dob}\r\n//                       // value={props.value4}\r\n//                       onChange={handleinput}\r\n//                       // onChange={props.onChange}\r\n//                       //   disabled={disableFields}\r\n//                     />\r\n//                   </Form.Group>\r\n//                 </Col>\r\n\r\n//                 <Col xl=\"6\" lg=\"6\">\r\n//                   <Form.Group\r\n//                     as={Col}\r\n//                     controlId=\"formGridMartialStatus\"\r\n//                     className=\"formmargin\"\r\n//                   >\r\n//                     <Form.Label>Martial Status</Form.Label>\r\n//                     <Form.Select\r\n//                       required\r\n//                       name=\"martialStatus\"\r\n//                       placeholder=\"martial status..\"\r\n//                       value={emp.martialStatus}\r\n//                       // value={props.value5}\r\n//                       onChange={handleinput}\r\n//                       // onChange={props.onChange}\r\n//                       //   disabled={disableFields}\r\n//                     >\r\n//                       <option value=\"\" selected hidden disabled>\r\n//                         Please Select\r\n//                       </option>\r\n//                       <option>Single</option>\r\n//                       <option>Married</option>\r\n//                       <option>Divorced</option>\r\n//                       <option>widow</option>\r\n//                     </Form.Select>\r\n//                   </Form.Group>\r\n//                 </Col>\r\n//                 <Col xl=\"6\" lg=\"6\">\r\n//                   <Form.Group\r\n//                     as={Col}\r\n//                     controlId=\"formGridLastName\"\r\n//                     className=\"formmargin\"\r\n//                   >\r\n//                     <Form.Label>Religion</Form.Label>\r\n//                     <Form.Select\r\n//                       required\r\n//                       name=\"religion\"\r\n//                       placeholder=\"Religion\"\r\n//                       value={emp.religion}\r\n//                       // value={props.value6}\r\n//                       onChange={handleinput}\r\n//                       // onChange={props.onChange}\r\n//                       //   disabled={disableFields}\r\n//                     >\r\n//                       <option value=\"\" selected hidden disabled>\r\n//                         Please Select\r\n//                       </option>\r\n//                       <option>Islam</option>\r\n//                       <option>Christianity</option>\r\n//                       <option>Buddhism</option>\r\n//                       <option> Sikhism</option>\r\n//                       <option> Hinduism</option>\r\n//                       <option>Bahá’í</option>\r\n//                       <option>Confucianism</option>\r\n//                       <option>Jainism</option>\r\n//                       <option>Judaism</option>\r\n//                       <option>Zoroastrianism</option>\r\n//                       <option>Druze</option>\r\n//                     </Form.Select>\r\n//                   </Form.Group>\r\n//                 </Col>\r\n//               </Row>\r\n//             </Col>\r\n\r\n//           </div>\r\n//           <Button\r\n//                     // className={classes.button}\r\n//                     // variant=\"contained\"\r\n//                     // color=\"primary\"\r\n//                     onClick={()=>{\r\n                      \r\n//                       handleNext()}}\r\n//                     type=\"submit\"\r\n//                     //  onSubmit={handleSubmit}\r\n//                   >\r\n//                     {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\r\n//                   </Button>\r\n//           </Form>\r\n//         </>\r\n//       );\r\n\r\n//     case 1:\r\n//       return (\r\n//         <>\r\n//           <div style={{ height: \"20%\" }}>\r\n//             <Row>\r\n//               <h5\r\n//                 className=\"py-2 \"\r\n//                 style={{ fontSize: \"22px\", padding: \"0px 19px\" }}\r\n//               >\r\n//                 Primary\r\n//               </h5>\r\n//               <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\r\n//                 <Form.Group\r\n//                   as={Col}\r\n//                   controlId=\"formGridphone\"\r\n//                   className=\"formmargin \"\r\n//                 >\r\n//                   <Form.Label>Phone</Form.Label>\r\n//                   <Form.Control\r\n//                     type=\"number\"\r\n//                     required\r\n//                     name=\"primaryphone\"\r\n//                     placeholder=\"phone\"\r\n//                     value={emp.primaryphone}\r\n//                     // value={props.value8}\r\n//                     onChange={handleinput}\r\n//                     // onChange={props.onChange}\r\n//                   />\r\n//                 </Form.Group>\r\n//               </Col>\r\n//               <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\r\n//                 <Form.Group\r\n//                   as={Col}\r\n//                   controlId=\"formGridcompanyemail\"\r\n//                   className=\"formmargin \"\r\n//                 >\r\n//                   <Form.Label>Email</Form.Label>\r\n//                   <Form.Control\r\n//                     type=\"email\"\r\n//                     required\r\n//                     name=\"primaryemail\"\r\n//                     placeholder=\"email\"\r\n//                     value={emp.primaryemail}\r\n//                     // value={props.value9}\r\n//                     onChange={handleinput}\r\n//                     // onChange={props.onChange}\r\n//                   />\r\n//                 </Form.Group>\r\n//               </Col>\r\n//             </Row>\r\n\r\n//             <Row>\r\n//               <h5\r\n//                 className=\"py-2 \"\r\n//                 style={{ fontSize: \"22px\", padding: \"0px 19px\" }}\r\n//               >\r\n//                 Secondary\r\n//               </h5>\r\n//               <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\r\n//                 <Form.Group\r\n//                   as={Col}\r\n//                   controlId=\"formGridcompanyemail\"\r\n//                   className=\"formmargin \"\r\n//                 >\r\n//                   <Form.Label>Phone</Form.Label>\r\n//                   <Form.Control\r\n//                     type=\"number\"\r\n//                     required\r\n//                     name=\"secondaryphone\"\r\n//                     placeholder=\"secondary phone\"\r\n//                     value={emp.secondaryphone}\r\n//                     // value={props.value10}\r\n//                     onChange={handleinput}\r\n//                     // onChange={props.onChange}\r\n//                   />\r\n//                 </Form.Group>\r\n//               </Col>\r\n//               <Col xxl=\"6\" xl=\"6\" lg=\"6\" md=\"6\">\r\n//                 <Form.Group\r\n//                   as={Col}\r\n//                   controlId=\"formGridcompanyemail\"\r\n//                   className=\"formmargin \"\r\n//                 >\r\n//                   <Form.Label>Email</Form.Label>\r\n//                   <Form.Control\r\n//                     type=\"email\"\r\n//                     required\r\n//                     name=\"secondaryemail\"\r\n//                     placeholder=\"secondary Email\"\r\n//                     value={emp.secondaryemail}\r\n//                     // value={props.value11}\r\n//                     onChange={handleinput}\r\n//                     // onChange={props.onChange}\r\n//                   />\r\n//                 </Form.Group>\r\n//               </Col>\r\n//             </Row>\r\n//           </div>\r\n//         </>\r\n//       );\r\n//     case 2:\r\n//       return (\r\n//         <>\r\n//           <div style={{ height: \"20%\" }}>\r\n//             <Col lg={12}>\r\n//               <Form.Group\r\n//                 as={Col}\r\n//                 controlId=\"formGridFirstName\"\r\n//                 className=\"formmargin\"\r\n//               >\r\n//                 <Form.Label>Temporary Address</Form.Label>\r\n//                 <Form.Control\r\n//                   type=\"text\"\r\n//                   required\r\n//                   name=\"temporaryaddress\"\r\n//                   placeholder=\"complete address\"\r\n//                   value={emp.temporaryaddress}\r\n//                   // value={props.value12}\r\n//                   onChange={handleinput}\r\n//                   // onChange={props.onChange}\r\n//                   //   disabled={disableFields}\r\n//                 />\r\n//               </Form.Group>\r\n//             </Col>\r\n\r\n//             <Col lg={12}>\r\n//               <Form.Group\r\n//                 as={Col}\r\n//                 controlId=\"formGridFirstName\"\r\n//                 className=\"formmargin\"\r\n//               >\r\n//                 <Form.Label>Permanent Address</Form.Label>\r\n//                 <Form.Control\r\n//                   type=\"text\"\r\n//                   required\r\n//                   name=\"permanentaddress\"\r\n//                   placeholder=\"complete address\"\r\n//                   value={emp.permanentaddress}\r\n//                   // value={props.value13}\r\n//                   onChange={handleinput}\r\n//                   // onChange={props.onChange}\r\n//                   //   disabled={disableFields}\r\n//                 />\r\n//               </Form.Group>\r\n//             </Col>\r\n//             {/* </Row> */}\r\n//             <div style={{ marginLeft: \"0.75%\" }}>\r\n//               <Row>\r\n//                 <Col>\r\n//                   <Form.Label style={{ marginLeft: \"2%\" }}>City</Form.Label>\r\n//                   <Form.Group\r\n//                     as={Col}\r\n//                     controlId=\"formGridLastName\"\r\n//                     className=\"formmargin\"\r\n//                   >\r\n//                     <Form.Select\r\n//                       required\r\n//                       onChange={handleinput}\r\n//                       // onChange={props.onChange}\r\n//                       name=\"city\"\r\n//                       value={emp.city}\r\n//                       // value={props.value14}\r\n//                     >\r\n//                       <option value=\"\" selected hidden disabled>\r\n//                         Select City\r\n//                       </option>\r\n//                       <option>Lahore</option>\r\n//                       <option>Karachi</option>\r\n//                       <option>Faisalabad</option>\r\n//                       <option>Peshawar</option>\r\n//                       <option>Islamabad</option>\r\n//                     </Form.Select>\r\n//                   </Form.Group>\r\n//                 </Col>\r\n//                 <Col>\r\n//                   <Form.Label>Province</Form.Label>\r\n//                   <Form.Group\r\n//                     as={Col}\r\n//                     controlId=\"formGridLastName\"\r\n//                     className=\"formmargin\"\r\n//                   >\r\n//                     <Form.Select\r\n//                       required\r\n//                       name=\"province\"\r\n//                       placeholder=\"province\"\r\n//                       value={emp.province}\r\n//                       // value={props.value15}\r\n//                       onChange={handleinput}\r\n//                       // onChange={props.onChange}\r\n//                       //   disabled={disableFields}\r\n//                     >\r\n//                       <option value=\"\" selected hidden disabled>\r\n//                         Select Province\r\n//                       </option>\r\n//                       <option>Punjab</option>\r\n//                       <option>Sindh</option>\r\n//                       <option>KPK</option>\r\n//                       <option>Gilgit Baltistan</option>\r\n//                       <option>Islamabad(Capital Territory)</option>\r\n//                     </Form.Select>\r\n//                   </Form.Group>\r\n//                 </Col>\r\n//                 <Col>\r\n//                   <Form.Label>Country</Form.Label>\r\n//                   <Form.Group\r\n//                     as={Col}\r\n//                     controlId=\"formGridLastName\"\r\n//                     className=\"formmargin\"\r\n//                   >\r\n//                     <ReactFlags\r\n//                       countries={[\"PK\"]}\r\n//                       selected={selected}\r\n//                       onSelect={(code) => {\r\n//                         setSelected(code);\r\n//                         code === \"PK\" && setcountry(\"Pakistan\");\r\n//                         setEmp({ ...emp, country: \"Pakistan\" });\r\n//                       }}\r\n//                     />\r\n//                   </Form.Group>\r\n//                 </Col>\r\n//               </Row>\r\n//               <Row>\r\n//                 <Col lg={4} xl={4}>\r\n//                   <Form.Group\r\n//                     as={Col}\r\n//                     controlId=\"formGridLastName\"\r\n//                     className=\"formmargin\"\r\n//                   >\r\n//                     <Form.Label>Postal Code</Form.Label>\r\n//                     <Form.Control\r\n//                       type=\"text\"\r\n//                       required\r\n//                       name=\"postalCode\"\r\n//                       placeholder=\"postal code\"\r\n//                       value={emp.postalCode}\r\n//                       // value={props.value16}\r\n//                       onChange={handleinput}\r\n//                       // onChange={props.onChange}\r\n//                       //   disabled={disableFields}\r\n//                     />\r\n//                   </Form.Group>\r\n//                 </Col>\r\n//               </Row>\r\n//             </div>\r\n//           </div>\r\n//         </>\r\n//       );\r\n//     case 3:\r\n//       return (\r\n//         <>\r\n//           <div style={{ width: \"auto\", marginRight: \"2%\", height: \"20%\" }}>\r\n//             <Row>\r\n//               <Container>\r\n//                 <Row className=\"my-3\"></Row>\r\n//               </Container>\r\n//               <div className=\"my-3 d-flex \">\r\n//                 <div className=\"d-flex justify-content-end\">\r\n//                   <Button\r\n//                     className=\"btn ml-2\"\r\n//                     // onClick={()=>{props.onClick}}\r\n//                     onClick={() => {\r\n//                       setShowChildModel(true);\r\n//                     }}\r\n//                   >\r\n//                     Add Employement\r\n//                   </Button>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               <Row className=\"my-3\">\r\n//                 <Table striped bordered hover className=\"ml-4\">\r\n//                   <thead>\r\n//                     <tr>\r\n//                       <th>#</th>\r\n//                       <th style={{ textAlign: \"center\" }}>Company</th>\r\n//                       <th style={{ textAlign: \"center\" }}>Position</th>\r\n//                       <th style={{ textAlign: \"center\" }}>Start Date</th>\r\n//                       <th style={{ textAlign: \"center\" }}>Left Date</th>\r\n//                       <th style={{ textAlign: \"center\" }}>Duration</th>\r\n//                       <th style={{ textAlign: \"center\" }}>Remove</th>\r\n//                     </tr>\r\n//                   </thead>\r\n//                   <tbody>\r\n//                     {employement &&\r\n//                       employement.map((d, i) => {\r\n//                         return (\r\n//                           <>\r\n//                             <tr key={i}>\r\n//                               <th>{i + 1}</th>\r\n//                               <td>{d.company}</td>\r\n//                               <td>{d.position}</td>\r\n//                               <td>{d.joiningdate}</td>\r\n//                               <td>{d.resignationdate}</td>\r\n//                               <td>{d.duration}</td>\r\n//                               <td>\r\n//                                 <i\r\n//                                   class=\"fa fa-trash-can\"\r\n//                                   aria-hidden=\"true\"\r\n//                                   style={{ color: \"red\" }}\r\n//                                   onClick={() => removemployement(i)}\r\n//                                 ></i>\r\n//                               </td>\r\n//                             </tr>\r\n//                           </>\r\n//                         );\r\n//                       })}\r\n//                     {/* {props.employement} */}\r\n//                   </tbody>\r\n//                 </Table>\r\n//               </Row>\r\n//             </Row>\r\n//           </div>\r\n//           <Modal\r\n//             aria-labelledby=\"contained-modal-title-vcenter\"\r\n//             centered\r\n//             show={childModel}\r\n//             onHide={Closechildmodal}\r\n//             size=\"lg\"\r\n//           >\r\n//             <Modal.Header closeButton>\r\n//               <Modal.Title\r\n//                 id=\"contained-modal-title-vcenter \"\r\n//                 style={{ textAlign: \"center\" }}\r\n//               >\r\n//                 <h5>Employement Details</h5>\r\n//               </Modal.Title>\r\n//             </Modal.Header>\r\n//             <Modal.Body>\r\n//               <Container fluid>\r\n//                 <Row>\r\n//                   <div className=\"py-3\">\r\n//                     <h4>Previous Employment</h4>\r\n//                     <hr\r\n//                       style={{\r\n//                         fontWeight: \"bold\",\r\n//                         borderWidth: \"2px\",\r\n//                         border: \"1px solid black\",\r\n//                       }}\r\n//                     ></hr>\r\n//                   </div>\r\n\r\n//                   <Col>\r\n//                     <Form.Group\r\n//                       as={Col}\r\n//                       controlId=\"formGridempcompany\"\r\n//                       className=\"formmargin\"\r\n//                     >\r\n//                       <Form.Label>Company</Form.Label>\r\n//                       <Form.Control\r\n//                         type=\"text\"\r\n//                         required\r\n//                         name=\"company\"\r\n//                         placeholder=\"company name..\"\r\n//                         value={empdetails.company}\r\n//                         // onChange={handleempinput}\r\n//                         onChange={handleempinput}\r\n//                         // disabled={disableFields}\r\n//                       />\r\n//                     </Form.Group>\r\n//                   </Col>\r\n//                   <Col>\r\n//                     <Form.Group\r\n//                       as={Col}\r\n//                       controlId=\"formGridLastName\"\r\n//                       className=\"formmargin\"\r\n//                     >\r\n//                       <Form.Label>Position</Form.Label>\r\n//                       <Form.Control\r\n//                         type=\"text\"\r\n//                         required\r\n//                         name=\"position\"\r\n//                         placeholder=\"position..\"\r\n//                         value={empdetails.position}\r\n//                         onChange={handleempinput}\r\n//                         // disabled={disableFields}\r\n//                       />\r\n//                     </Form.Group>\r\n//                   </Col>\r\n//                 </Row>\r\n//                 <Row>\r\n//                   <Col>\r\n//                     <Form.Group\r\n//                       as={Col}\r\n//                       controlId=\"formGridFirstName\"\r\n//                       className=\"formmargin\"\r\n//                     >\r\n//                       <Form.Label>Joining Date</Form.Label>\r\n//                       <Form.Control\r\n//                         type=\"date\"\r\n//                         required\r\n//                         name=\"joiningdate\"\r\n//                         placeholder=\"joining date\"\r\n//                         value={empdetails.joiningdate}\r\n//                         onChange={async (e) =>\r\n//                           await handleempinputJoiningDate(e)\r\n//                         }\r\n//                         // disabled={disableFields}\r\n//                       />\r\n//                     </Form.Group>\r\n//                   </Col>\r\n//                   <Col>\r\n//                     <Form.Group\r\n//                       as={Col}\r\n//                       controlId=\"formGridFirstName\"\r\n//                       className=\"formmargin\"\r\n//                     >\r\n//                       <Form.Label>Resignation Date</Form.Label>\r\n//                       <Form.Control\r\n//                         type=\"date\"\r\n//                         required\r\n//                         name=\"resignationdate\"\r\n//                         placeholder=\"resignation date\"\r\n//                         value={empdetails.resignationdate}\r\n//                         onChange={async (e) =>\r\n//                           await handleempinputResignationDate(e)\r\n//                         }\r\n//                         // disabled={disableFields}\r\n//                       />\r\n//                     </Form.Group>\r\n//                   </Col>\r\n//                 </Row>\r\n//                 <Row>\r\n//                   <Form.Label>Job Description</Form.Label>\r\n//                   <FormGroup\r\n//                     as={Col}\r\n//                     controlId=\"formGridFirstName\"\r\n//                     className=\"formmargin\"\r\n//                   >\r\n//                     <Form.Control\r\n//                       as=\"textarea\"\r\n//                       rows={\"3\"}\r\n//                       style={{ resize: \"none\" }}\r\n//                       required\r\n//                       name=\"jobdescription\"\r\n//                       placeholder=\"Tell us about your job role & experience in previous company \"\r\n//                       value={empdetails.jobdescription}\r\n//                       onChange={handleempinput}\r\n//                       // disabled={disableFields}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Row>\r\n//                 <div className=\"d-flex justify-content-center my-3\">\r\n//                   <Button\r\n//                     className=\"btn ml-2\"\r\n//                     onClick={() => {\r\n//                       addhistory();\r\n//                       Closechildmodal();\r\n//                     }}\r\n//                   >\r\n//                     Add Employement\r\n//                   </Button>\r\n//                 </div>\r\n//               </Container>\r\n//             </Modal.Body>\r\n//           </Modal>\r\n//         </>\r\n//       );\r\n//     case 4: {\r\n//       return (\r\n//         <div style={{ height: \"20%\" }}>\r\n//           <Row>\r\n//             <Col>\r\n//               <Form.Group\r\n//                 as={Col}\r\n//                 controlId=\"formGridLastName\"\r\n//                 className=\"formmargin\"\r\n//               >\r\n//                 <Form.Label>Username</Form.Label>\r\n//                 <Form.Control\r\n//                   type=\"text\"\r\n//                   required\r\n//                   name=\"username\"\r\n//                   placeholder=\"username\"\r\n//                   value={emp.username}\r\n//                   // value={props.value21}\r\n//                   onChange={handleinput}\r\n//                   // onChange={props.onChange}\r\n//                   //   disabled={disableFields}\r\n//                 />\r\n//               </Form.Group>\r\n//             </Col>\r\n//             <Col>\r\n//               <Form.Group\r\n//                 as={Col}\r\n//                 controlId=\"formGridLastName\"\r\n//                 className=\"formmargin\"\r\n//               >\r\n//                 <Form.Label>Password</Form.Label>\r\n//                 <Form.Control\r\n//                   type=\"password\"\r\n//                   required\r\n//                   name=\"password\"\r\n//                   placeholder=\"password\"\r\n//                   value={emp.password}\r\n//                   // value={props.value22}\r\n//                   onChange={handleinput}\r\n//                   // onChange={props.onChange}\r\n//                   //   disabled={disableFields}\r\n//                 />\r\n//               </Form.Group>\r\n//             </Col>\r\n//             <Col>\r\n//               <Form.Group\r\n//                 as={Col}\r\n//                 controlId=\"formGridFirstName\"\r\n//                 className=\"formmargin\"\r\n//               >\r\n//                 <Form.Label>Joining Date</Form.Label>\r\n//                 <Form.Control\r\n//                   type=\"date\"\r\n//                   required\r\n//                   name=\"joiningdate\"\r\n//                   placeholder=\"joining date\"\r\n//                   value={emp.joiningdate}\r\n//                   // value={props.value19}\r\n//                   onChange={handleinput}\r\n//                   // onChange={props.onChange}\r\n//                   //   disabled={disableFields}\r\n//                 />\r\n//               </Form.Group>\r\n//             </Col>\r\n//           </Row>\r\n//           <Row>\r\n//             <Col>\r\n//               <Form.Group\r\n//                 as={Col}\r\n//                 controlId=\"formGridLastName\"\r\n//                 className=\"formmargin\"\r\n//               >\r\n//                 <Form.Label>Salary</Form.Label>\r\n//                 <Form.Control\r\n//                   type=\"Number\"\r\n//                   required\r\n//                   name=\"currentSalary\"\r\n//                   placeholder=\"salary\"\r\n//                   value={emp.currentSalary}\r\n//                   // value={props.value23}\r\n//                   onChange={handleinput}\r\n//                   // onChange={props.onChange}\r\n//                   //   disabled={disableFields}\r\n//                 />\r\n//               </Form.Group>\r\n//             </Col>\r\n//             <Col>\r\n//               <Form.Group\r\n//                 as={Col}\r\n//                 controlId=\"formGridLastName\"\r\n//                 className=\"formmargin\"\r\n//               >\r\n//                 <Form.Label>Designation</Form.Label>\r\n//                 <Form.Control\r\n//                   type=\"text\"\r\n//                   required\r\n//                   name=\"designation\"\r\n//                   placeholder=\"designation..\"\r\n//                   value={emp.terminationreason}\r\n//                   // value={props.value20}\r\n//                   onChange={handleinput}\r\n//                   // onChange={props.onChange}\r\n//                   //   disabled={disableFields}\r\n//                 />\r\n//               </Form.Group>\r\n//             </Col>\r\n//             <Col>\r\n//               <Form.Group\r\n//                 as={Col}\r\n//                 controlId=\"formGridFirstName\"\r\n//                 className=\"formmargin\"\r\n//               >\r\n//                 <Form.Label>Payment Mode</Form.Label>\r\n//                 <Form.Select\r\n//                   required\r\n//                   name=\"paymentmode\"\r\n//                   value={emp.paymentmode}\r\n//                   // value={props.value25}\r\n//                   onChange={handleinput}\r\n//                   // onChange={props.onChange}\r\n//                   //   disabled={disableFields}\r\n//                 >\r\n//                   <option value=\"\" selected hidden disabled>\r\n//                     Please Select\r\n//                   </option>\r\n//                   <option>Cheque</option>\r\n//                   <option>Cash</option>\r\n//                   <option>Bank Transfer</option>\r\n//                 </Form.Select>\r\n//               </Form.Group>\r\n//             </Col>\r\n//           </Row>\r\n//           <Row>\r\n//             <Col lg={4}>\r\n//               <Form.Group\r\n//                 as={Col}\r\n//                 controlId=\"formGriddepartments\"\r\n//                 className=\"formmargin\"\r\n//               >\r\n//                 <Form.Label>Department</Form.Label>\r\n//                 <Form.Select name=\"departments\">\r\n//                   onChange={handleinput}\r\n//                   {/* onChange={props.onChange} */}\r\n//                   <option disabled selected defaultValue={\"\"}>\r\n//                     Select department..\r\n//                   </option>\r\n//                   {dep.map((d) => {\r\n//                     return (\r\n//                       <>\r\n//                         <option key={d._id} value={d._id}>\r\n//                           {d.departmentname}\r\n//                         </option>\r\n//                       </>\r\n//                     );\r\n//                   })}\r\n//                 </Form.Select>\r\n//               </Form.Group>\r\n//             </Col>\r\n//             <Col xl=\"4\">\r\n//               <Form.Group\r\n//                 as={Col}\r\n//                 controlId=\"formGriddepartments\"\r\n//                 className=\"formmargin\"\r\n//               >\r\n//                 <Form.Label>Employement Status</Form.Label>\r\n//                 <Form.Select\r\n//                   onChange={handleinput}\r\n//                   // onChange={props.onChange}\r\n//                   name=\"employementstatus\"\r\n//                   value={emp.employementstatus}\r\n//                   // value={props.value41}\r\n//                 >\r\n//                   <option defaultValue={\"\"} disbaled selected hidden>\r\n//                     Select Please\r\n//                   </option>\r\n//                   <option>Intern</option>\r\n//                   <option>Probation</option>\r\n//                   <option>Permanent</option>\r\n//                   <option>Left</option>\r\n//                 </Form.Select>\r\n//               </Form.Group>\r\n//             </Col>\r\n//           </Row>\r\n//         </div>\r\n//       );\r\n//     }\r\n//     case 5: {\r\n//       return (\r\n//         <div style={{ height: \"20%\" }}>\r\n//           <Row>\r\n//             <Col>\r\n//               <Form.Group\r\n//                 as={Col}\r\n//                 controlId=\"formGridLastName\"\r\n//                 className=\"formmargin\"\r\n//               >\r\n//                 <Form.Label>Bank Name</Form.Label>\r\n//                 <Form.Select\r\n//                   required\r\n//                   name=\"bankname\"\r\n//                   placeholder=\"bank name..\"\r\n//                   value={emp.bankname}\r\n//                   onChange={handleinput}\r\n//                   //   disabled={disableFields}\r\n//                 >\r\n//                   <option>Please Select</option>\r\n//                   <option>MCB Limited</option>\r\n//                   <option>Bank Islami Limited</option>\r\n//                   <option>Allied Bank Limited</option>\r\n//                   <option>Bank Al-Habib Limited</option>\r\n//                   <option>Faysal Bank Limited</option>\r\n//                   <option>Mezaan Bank Limited</option>\r\n//                   <option>National Bank of Pakistan</option>\r\n//                   <option>MCB Islamic Limited</option>\r\n//                   <option>HBL</option>\r\n//                   <option>UBL</option>\r\n//                   <option>Askari Bank </option>\r\n//                 </Form.Select>\r\n//               </Form.Group>\r\n//             </Col>\r\n//             <Col>\r\n//               <Form.Group\r\n//                 as={Col}\r\n//                 controlId=\"formGridLastName\"\r\n//                 className=\"formmargin\"\r\n//               >\r\n//                 <Form.Label>Account Title</Form.Label>\r\n//                 <Form.Control\r\n//                   type=\"text\"\r\n//                   required\r\n//                   name=\"accounttitle\"\r\n//                   placeholder=\"account title..\"\r\n//                   value={emp.accounttitle}\r\n//                   // value={props.value27}\r\n//                   onChange={handleinput}\r\n//                   // onChange={props.onChange}\r\n//                   //   disabled={disableFields}\r\n//                 />\r\n//               </Form.Group>\r\n//             </Col>\r\n//             <Col>\r\n//               <Form.Group\r\n//                 as={Col}\r\n//                 controlId=\"formGridLastName\"\r\n//                 className=\"formmargin\"\r\n//               >\r\n//                 <Form.Label>Account No</Form.Label>\r\n//                 <Form.Control\r\n//                   type=\"text\"\r\n//                   required\r\n//                   name=\"accountno\"\r\n//                   placeholder=\"account no..\"\r\n//                   value={emp.accountno}\r\n//                   // value={props.value28}\r\n//                   onChange={handleinput}\r\n//                   // onChange={props.onChange}\r\n//                   //   disabled={disableFields}\r\n//                 />\r\n//               </Form.Group>\r\n//             </Col>\r\n//           </Row>\r\n//           <Row className=\"p-0\">\r\n//             <Col xxl={4}>\r\n//               <Form.Group\r\n//                 as={Col}\r\n//                 controlId=\"formGridLastName\"\r\n//                 className=\"formmargin\"\r\n//               >\r\n//                 <Form.Label> IBAN</Form.Label>\r\n//                 <Form.Control\r\n//                   type=\"text\"\r\n//                   required\r\n//                   name=\"IBAN\"\r\n//                   placeholder=\"iban..\"\r\n//                   value={emp.IBAN}\r\n//                   // value={props.value29}\r\n//                   onChange={handleinput}\r\n//                   // onChange={props.onChange}\r\n//                   //  disabled={disableFields}\r\n//                 />\r\n//               </Form.Group>\r\n//             </Col>\r\n\r\n//             <Col xxl={4}>\r\n//               <Form.Group\r\n//                 as={Col}\r\n//                 controlId=\"formGridLastName\"\r\n//                 className=\"formmargin\"\r\n//               >\r\n//                 <Form.Label>Branch code</Form.Label>\r\n//                 <Form.Control\r\n//                   type=\"text\"\r\n//                   required\r\n//                   name=\"branchcode\"\r\n//                   placeholder=\"branch code..\"\r\n//                   value={emp.branchcode}\r\n//                   // value={props.value30}\r\n//                   onChange={handleinput}\r\n//                   // onChange={props.onChange}\r\n//                   //  disabled={disableFields}\r\n//                 />\r\n//               </Form.Group>\r\n//             </Col>\r\n//           </Row>\r\n//         </div>\r\n//       );\r\n//     }\r\n//     default:\r\n//       return \"unknown step\";\r\n//   }\r\n// }\r\n\r\n// const EmployeeData = (props) => {\r\n//   console.log(\"props1\", props);\r\n//   const classes = useStyles();\r\n//   const [activeStep, setActiveStep] = useState(0);\r\n//   const [skippedSteps, setSkippedSteps] = useState([]);\r\n//   const steps = getSteps();\r\n\r\n//   const isStepOptional = (step) => {\r\n//     return step === 1 || step === 2;\r\n//   };\r\n\r\n//   const isStepSkipped = (step) => {\r\n//     return skippedSteps.includes(step);\r\n//   };\r\n\r\n//   const handleNext = () => {\r\n//     setActiveStep(activeStep + 1);\r\n//     setSkippedSteps(skippedSteps.filter((skipItem) => skipItem !== activeStep));\r\n//   };\r\n\r\n//   const handleBack = () => {\r\n//     setActiveStep(activeStep - 1);\r\n//   };\r\n\r\n//   const handleSkip = () => {\r\n//     if (!isStepSkipped(activeStep)) {\r\n//       setSkippedSteps([...skippedSteps, activeStep]);\r\n//     }\r\n//     setActiveStep(activeStep + 1);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"content-wrapper \">\r\n//       <div className=\"col\">\r\n//         <h3 className=\"page-title\">Add Employees</h3>\r\n//         <ul className=\"breadcrumb\" style={{ backgroundColor: \"#f7f7f7\" }}>\r\n//           <li className=\"breadcrumb-item\">\r\n//             <Link to=\"/\" style={{ color: \"#1f1f1f\" }}>\r\n//               Dashboard\r\n//             </Link>\r\n//           </li>\r\n//           <li className=\"breadcrumb-item active\">Add Employee</li>\r\n//         </ul>\r\n//       </div>\r\n//       <div\r\n//         className=\" d-flex justify-content-center \"\r\n//         style={{ marginTop: \"5%\" }}\r\n//       >\r\n//         <Card>\r\n//           <div style={{ height: \"40%\", width: \"auto\" }}>\r\n//             <Card.Body>\r\n//               <div style={{ width: \"auto\" }}>\r\n//                 <Stepper alternativeLabel activeStep={activeStep}>\r\n//                   {steps.map((step, index) => {\r\n//                     const labelProps = {};\r\n//                     const stepProps = {};\r\n//                     // if (isStepOptional(index)) {\r\n//                     //   labelProps.optional = (\r\n//                     //     <Typography\r\n//                     //       variant=\"caption\"\r\n//                     //       align=\"center\"\r\n//                     //       style={{ display: \"block\" }}\r\n//                     //     >\r\n//                     //       optional\r\n//                     //     </Typography>\r\n//                     //   );\r\n//                     // }\r\n//                     if (isStepSkipped(index)) {\r\n//                       stepProps.completed = false;\r\n//                     }\r\n//                     return (\r\n//                       <Step {...stepProps} key={index}>\r\n//                         <StepLabel {...labelProps}>{step}</StepLabel>\r\n//                       </Step>\r\n//                     );\r\n//                   })}\r\n//                 </Stepper>\r\n//               </div>\r\n//               {activeStep === steps.length ? (\r\n//                 <Typography variant=\"h3\" align=\"center\">\r\n//                   Thank You\r\n//                 </Typography>\r\n//               ) : (\r\n//                 <>\r\n//                   <form>{getStepContent({ props, activeStep,handleNext, steps  })}</form>\r\n//                   <Button\r\n//                     className={classes.button}\r\n//                     disabled={activeStep === 0}\r\n//                     onClick={handleBack}\r\n//                   >\r\n//                     back\r\n//                   </Button>\r\n//                   {/* {isStepOptional(activeStep) && (\r\n//                 <Button\r\n//                   className={classes.button}\r\n//                   variant=\"contained\"\r\n//                   color=\"primary\"\r\n//                   onClick={handleSkip}\r\n//                 >\r\n//                   skip\r\n//                 </Button>\r\n//               )} */}\r\n//                   {/* <Button\r\n//                     className={classes.button}\r\n//                     variant=\"contained\"\r\n//                     color=\"primary\"\r\n//                     onClick={handleNext}\r\n//                     type=\"submit\"\r\n//                     //  onSubmit={handleSubmit}\r\n//                   >\r\n//                     {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\r\n//                   </Button> */}\r\n//                 </>\r\n//               )}\r\n//             </Card.Body>\r\n//           </div>\r\n//         </Card>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n// export default EmployeeData;\r\nfunction EmployeeData() {\r\n  <div className=\"col\">\r\n           <h3 className=\"page-title\">Add Employees</h3>\r\n         <ul className=\"breadcrumb\" style={{ backgroundColor: \"#f7f7f7\" }}>\r\n            <li className=\"breadcrumb-item\">\r\n              <Link to=\"/\" style={{ color: \"#1f1f1f\" }}>\r\n                Dashboard\r\n              </Link>\r\n            </li>\r\n            <li className=\"breadcrumb-item active\">Add Employee</li>\r\n         </ul>\r\n         </div>\r\n  const [step, setstep] = useState(1);\r\n\r\n  //state for form data\r\n  const [formData, setFormData] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    age: \"\",\r\n    email: \"\",\r\n    phone:\"\",\r\n    phone1:\"\",\r\n    email1:\"\",\r\n    martialStatus:\"\",\r\n    religion:\"\",\r\n    gender:\"\",\r\n    cnic:\"\",\r\n    dob:\"\",\r\n    temporaryaddress:\"\",\r\n    permanentaddress:\"\",\r\n    city:\"\",\r\n    province:\"\",\r\n    postalcode:\"\",\r\n    company:\"\",\r\n    position:\"\",\r\n    joiningdate:\"\",\r\n    resignationdate:\"\",\r\n    jobdescription:\"\",\r\n    username:\"\",\r\n    password:\"\",\r\n    joiningdate:\"\",\r\n    salary:\"\",\r\n    designation:\"\",\r\n    paymentmode:\"\",\r\n    employementstatus:\"\",\r\n\r\n\r\n\r\n  })\r\n  const nextStep = () => {\r\n    setstep(step + 1);\r\n    console.log(\"nextstep\",nextStep)\r\n  };\r\n  \r\n  const prevStep = () => {\r\n    setstep(step - 1);\r\n  };\r\n  const handleInputData = input => e => {\r\n    // input value from the form\r\n    const {value } = e.target;\r\n\r\n    //updating for data state taking previous state and then adding new value to create new object\r\n    setFormData(prevState => ({\r\n      ...prevState,\r\n      [input]: value\r\n  }));\r\n  }\r\n  switch (step) {\r\n    // case 1 to show stepOne form and passing nextStep, prevStep, and handleInputData as handleFormData method as prop and also formData as value to the fprm\r\n    case 1:\r\n      return (\r\n        <div className=\"App\">\r\n          <Container>\r\n            <Row>\r\n              <Col  md={{ span: 6, offset: 3 }} className=\"custom-margin\">\r\n                <StepOne nextStep={nextStep} handleFormData={handleInputData} values={formData} />\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      );\r\n      case 2:\r\n      return (\r\n        <div className=\"App\">\r\n          <Container>\r\n            <Row>\r\n              <Col  md={{ span: 6, offset: 3 }} className=\"custom-margin\">\r\n                <StepTwo nextStep={nextStep} prevStep={prevStep} handleFormData={handleInputData} values={formData} />\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      );\r\n      case 3:\r\n        return (\r\n          <div className=\"App\">\r\n            <Container>\r\n              <Row>\r\n                <Col  md={{ span: 6, offset: 3 }} className=\"custom-margin\">\r\n                  <StepFive nextStep={nextStep} prevStep={prevStep} handleFormData={handleInputData} values={formData} />\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        );\r\n      case 4:\r\n        return (\r\n          <div className=\"App\">\r\n            <Container>\r\n              <Row>\r\n                <Col  md={{ span: 6, offset: 3 }} className=\"custom-margin\">\r\n                  <StepThree nextStep={nextStep} prevStep={prevStep} handleFormData={handleInputData} values={formData} />\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        );\r\n        \r\n        case 5:\r\n        return (\r\n          <div className=\"App\">\r\n            <Container>\r\n              <Row>\r\n                <Col  md={{ span: 6, offset: 3 }} className=\"custom-margin\">\r\n                  <StepFour nextStep={nextStep} prevStep={prevStep} handleFormData={handleInputData} values={formData} />\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        );\r\n      default:\r\n        return( \"unknown step\");\r\n      }\r\n  \r\n}\r\nexport default EmployeeData;"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,UAAU,EACVC,SAAS,EACTC,MAAM,EACNC,OAAO,EACPC,IAAI,EACJC,SAAS,QACJ,mBAAmB;AAC1B,SAASC,UAAU,QAAQ,0BAA0B;AACrD,SAASC,KAAK,EAAEC,IAAI,EAAEC,GAAG,EAAEC,GAAG,EAAEC,SAAS,EAAEC,SAAS,QAAQ,iBAAiB;AAC7E,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAO,sCAAsC;AAC7C,OAAO,2CAA2C;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SACEC,qBAAqB,EACrBC,mBAAmB,QACd,qBAAqB;AAC5B,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,iBAAiB,MAAM,iCAAiC;AAC/D,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,SAASC,MAAM,QAAQ,UAAU;AACjC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;;AAEjtB;IAAK,SAAS,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACX;IAAI,SAAS,EAAC,YAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,mBAAmB,eAC/C;IAAI,SAAS,EAAC,YAAY;IAAC,KAAK,EAAE;MAAEC,eAAe,EAAE;IAAU,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC9D;IAAI,SAAS,EAAC,iBAAiB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC7B,oBAAC,IAAI;IAAC,EAAE,EAAC,GAAG;IAAC,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAU,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,eAElC,CACJ,eACL;IAAI,SAAS,EAAC,wBAAwB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAAkB,CACtD,CACC;EAAA,gBACWrC,QAAQ,CAAC,CAAC,CAAC;IAAA;IAA5BsC,IAAI;IAAEC,OAAO,kBAEpB;EAAA,iBACgCvC,QAAQ;MACtCwC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,GAAG,EAAE,EAAE;MACPC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAC,EAAE;MACRC,MAAM,EAAC,EAAE;MACTC,MAAM,EAAC,EAAE;MACTC,aAAa,EAAC,EAAE;MAChBC,QAAQ,EAAC,EAAE;MACXC,MAAM,EAAC,EAAE;MACTC,IAAI,EAAC,EAAE;MACPC,GAAG,EAAC,EAAE;MACNC,gBAAgB,EAAC,EAAE;MACnBC,gBAAgB,EAAC,EAAE;MACnBC,IAAI,EAAC,EAAE;MACPC,QAAQ,EAAC,EAAE;MACXC,UAAU,EAAC,EAAE;MACbC,OAAO,EAAC,EAAE;MACVC,QAAQ,EAAC,EAAE;MACXC,WAAW,EAAC,EAAE;MACdC,eAAe,EAAC,EAAE;MAClBC,cAAc,EAAC,EAAE;MACjBC,QAAQ,EAAC,EAAE;MACXC,QAAQ,EAAC;IAAE,8CACC,EAAE,yCACP,EAAE,8CACG,EAAE,8CACF,EAAE,oDACI,EAAE,eAIpB;IAAA;IAjCKC,QAAQ;IAAEC,WAAW;EAkC5B,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,GAAS;IACrB3B,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;IACjB6B,OAAO,CAACC,GAAG,CAAC,UAAU,EAACF,QAAQ,CAAC;EAClC,CAAC;EAED,IAAMG,QAAQ,GAAG,SAAXA,QAAQ,GAAS;IACrB9B,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;EACnB,CAAC;EACD,IAAMgC,eAAe,GAAG,SAAlBA,eAAe,CAAGC,KAAK;IAAA,OAAI,UAAAC,CAAC,EAAI;MACpC;MAAA,IACOC,KAAK,GAAKD,CAAC,CAACE,MAAM,CAAlBD,KAAK,EAEZ;MACAR,WAAW,CAAC,UAAAU,SAAS;QAAA,yBAChBA,SAAS,sBACXJ,KAAK,EAAGE,KAAK;MAAA,CAChB,CAAC;IACH,CAAC;EAAA;EACD,QAAQnC,IAAI;IACV;IACA,KAAK,CAAC;MACJ,oBACE;QAAK,SAAS,EAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAClB,oBAAC,SAAS;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACR,oBAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACF,oBAAC,GAAG;QAAE,EAAE,EAAE;UAAEsC,IAAI,EAAE,CAAC;UAAEC,MAAM,EAAE;QAAE,CAAE;QAAC,SAAS,EAAC,eAAe;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACzD,oBAAC,OAAO;QAAC,QAAQ,EAAEX,QAAS;QAAC,cAAc,EAAEI,eAAgB;QAAC,MAAM,EAAEN,QAAS;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,CAC9E,CACF,CACI,CACR;IAER,KAAK,CAAC;MACN,oBACE;QAAK,SAAS,EAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAClB,oBAAC,SAAS;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACR,oBAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACF,oBAAC,GAAG;QAAE,EAAE,EAAE;UAAEY,IAAI,EAAE,CAAC;UAAEC,MAAM,EAAE;QAAE,CAAE;QAAC,SAAS,EAAC,eAAe;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACzD,oBAAC,OAAO;QAAC,QAAQ,EAAEX,QAAS;QAAC,QAAQ,EAAEG,QAAS;QAAC,cAAc,EAAEC,eAAgB;QAAC,MAAM,EAAEN,QAAS;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,CAClG,CACF,CACI,CACR;IAER,KAAK,CAAC;MACJ,oBACE;QAAK,SAAS,EAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAClB,oBAAC,SAAS;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACR,oBAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACF,oBAAC,GAAG;QAAE,EAAE,EAAE;UAAEY,IAAI,EAAE,CAAC;UAAEC,MAAM,EAAE;QAAE,CAAE;QAAC,SAAS,EAAC,eAAe;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACzD,oBAAC,QAAQ;QAAC,QAAQ,EAAEX,QAAS;QAAC,QAAQ,EAAEG,QAAS;QAAC,cAAc,EAAEC,eAAgB;QAAC,MAAM,EAAEN,QAAS;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,CACnG,CACF,CACI,CACR;IAEV,KAAK,CAAC;MACJ,oBACE;QAAK,SAAS,EAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAClB,oBAAC,SAAS;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACR,oBAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACF,oBAAC,GAAG;QAAE,EAAE,EAAE;UAAEY,IAAI,EAAE,CAAC;UAAEC,MAAM,EAAE;QAAE,CAAE;QAAC,SAAS,EAAC,eAAe;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACzD,oBAAC,SAAS;QAAC,QAAQ,EAAEX,QAAS;QAAC,QAAQ,EAAEG,QAAS;QAAC,cAAc,EAAEC,eAAgB;QAAC,MAAM,EAAEN,QAAS;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,CACpG,CACF,CACI,CACR;IAGR,KAAK,CAAC;MACN,oBACE;QAAK,SAAS,EAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAClB,oBAAC,SAAS;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACR,oBAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACF,oBAAC,GAAG;QAAE,EAAE,EAAE;UAAEY,IAAI,EAAE,CAAC;UAAEC,MAAM,EAAE;QAAE,CAAE;QAAC,SAAS,EAAC,eAAe;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACzD,oBAAC,QAAQ;QAAC,QAAQ,EAAEX,QAAS;QAAC,QAAQ,EAAEG,QAAS;QAAC,cAAc,EAAEC,eAAgB;QAAC,MAAM,EAAEN,QAAS;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,CACnG,CACF,CACI,CACR;IAEV;MACE,OAAQ,cAAc;EAAE;AAGhC;AACA,eAAe7B,YAAY"},"metadata":{},"sourceType":"module"}