{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\hassan.ali\\\\Downloads\\\\HR-SYSTEM-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\hassan.ali\\\\Downloads\\\\HR-SYSTEM-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\hassan.ali\\\\Downloads\\\\HR-SYSTEM-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\hassan.ali\\\\Downloads\\\\HR-SYSTEM-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\hassan.ali\\\\Downloads\\\\HR-SYSTEM-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\hassan.ali\\\\Downloads\\\\HR-SYSTEM-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\hassan.ali\\\\Downloads\\\\HR-SYSTEM-main\\\\client\\\\src\\\\Components\\\\DataTables\\\\Attendance\\\\EcxelImport.js\";\nimport React, { Component } from 'react';\nimport { ExcelRenderer, OutTable } from \"react-excel-renderer\";\nimport './ecxel.css';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Stack from 'react-bootstrap/Stack';\nexport var EcxelImport = /*#__PURE__*/function (_Component) {\n  _inherits(EcxelImport, _Component);\n  function EcxelImport() {\n    var _getPrototypeOf2;\n    var _this;\n    _classCallCheck(this, EcxelImport);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EcxelImport)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      cols: [],\n      rows: []\n    };\n    _this.uploadFile = function (event) {\n      var fileObj = event.target.files[0];\n      ExcelRenderer(fileObj, function (err, resp) {\n        if (err) {\n          console.log(err);\n        } else {\n          var cols = resp.cols,\n            rows = resp.rows;\n          _this.setState({\n            cols: cols,\n            rows: rows\n          }, function () {\n            var data = _toConsumableArray(rows);\n            data.shift();\n            _this.props.uploadHandler(data);\n          });\n        }\n      });\n    };\n    return _this;\n  }\n  _createClass(EcxelImport, [{\n    key: \"render\",\n    value: function render() {\n      return (\n        /*#__PURE__*/\n        // <div className=\"excel-import-container\" >\n        // <div className=\"file-upload\" style={{backgroundColor:\"white\",width:'auto',flexDirection:'row'}}>\n        /* <label>Upload Excel File</label> */\n        /* <input type=\"file\" onChange={this.uploadFile} style={{width:'auto'}} /> */\n        // </div>\n        // <div>\n        // <button style={{width:\"auto\",marginTop:'2%'}}>Upload File</button>/\n        // </div>\n        React.createElement(Stack, {\n          gap: 3,\n          style: {\n            marginTop: '3%'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(Form.Label, {\n          htmlFor: \"button\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 10\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            border: '1px solid black',\n            width: \"9%\",\n            textAlign: \"center\",\n            padding: \"0.5%\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 10\n          }\n        }, \"Upload\")), /*#__PURE__*/React.createElement(Form.Control, {\n          type: \"file\",\n          id: \"button\",\n          onChange: this.uploadFile,\n          style: {\n            width: '40%',\n            display: 'none'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 7\n          }\n        }))\n        // );\n        // }\n\n        // export default FormExample;\n\n        // </div>\n      );\n    }\n  }]);\n  return EcxelImport;\n}(Component);\nexport default EcxelImport;","map":{"version":3,"names":["React","Component","ExcelRenderer","OutTable","Button","Form","Stack","EcxelImport","state","cols","rows","uploadFile","event","fileObj","target","files","err","resp","console","log","setState","data","shift","props","uploadHandler","marginTop","border","width","textAlign","padding","display"],"sources":["C:/Users/hassan.ali/Downloads/HR-SYSTEM-main/client/src/Components/DataTables/Attendance/EcxelImport.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { ExcelRenderer, OutTable } from \"react-excel-renderer\";\r\nimport './ecxel.css'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Stack from 'react-bootstrap/Stack';\r\n\r\nexport class EcxelImport extends Component {\r\n  state = {\r\n    cols: [],\r\n    rows: []\r\n  };\r\n  uploadFile = event => {\r\n    let fileObj = event.target.files[0];\r\n    ExcelRenderer(fileObj, (err, resp) => {\r\n      if (err) {\r\n        console.log(err);\r\n      } else {\r\n        const { cols, rows } = resp;\r\n        this.setState(\r\n          {\r\n            cols: cols,\r\n            rows: rows\r\n          },\r\n          () => {\r\n            const data = [...rows];\r\n            data.shift();\r\n            this.props.uploadHandler(data);\r\n          }\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n      // <div className=\"excel-import-container\" >\r\n        \r\n        // <div className=\"file-upload\" style={{backgroundColor:\"white\",width:'auto',flexDirection:'row'}}>\r\n          /* <label>Upload Excel File</label> */\r\n          /* <input type=\"file\" onChange={this.uploadFile} style={{width:'auto'}} /> */\r\n          // </div>\r\n          // <div>\r\n          // <button style={{width:\"auto\",marginTop:'2%'}}>Upload File</button>/\r\n          \r\n        // </div>\r\n    \r\n\r\n    <Stack  gap={3} style={{marginTop:'3%'}}>\r\n   \r\n         <Form.Label htmlFor=\"button\">\r\n         <div style={{border:'1px solid black',width:\"9%\",textAlign:\"center\", padding:\"0.5%\"}}>Upload</div>\r\n          {/* <Button variant=\"secondary\" className='me-auto'>Upload file</Button> */}\r\n         </Form.Label>\r\n      <Form.Control type='file' id=\"button\"  onChange={this.uploadFile} style={{width:'40%',display:'none'}} />\r\n          \r\n\r\n      {/* <input type=\"file\" placeholder=\"Add your item here...\"   id='button'/> */}\r\n     \r\n      {/* <div className=\"vr\" /> */}\r\n      {/* <Button variant=\"outline-danger\">Reset</Button> */}\r\n    </Stack>\r\n  // );\r\n// }\r\n\r\n// export default FormExample;\r\n      \r\n\r\n      // </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default EcxelImport\r\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,aAAa,EAAEC,QAAQ,QAAQ,sBAAsB;AAC9D,OAAO,aAAa;AACpB,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,KAAK,MAAM,uBAAuB;AAEzC,WAAaC,WAAW;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;MAAA;IAAA;IAAA;IAAA,MACtBC,KAAK,GAAG;MACNC,IAAI,EAAE,EAAE;MACRC,IAAI,EAAE;IACR,CAAC;IAAA,MACDC,UAAU,GAAG,UAAAC,KAAK,EAAI;MACpB,IAAIC,OAAO,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MACnCb,aAAa,CAACW,OAAO,EAAE,UAACG,GAAG,EAAEC,IAAI,EAAK;QACpC,IAAID,GAAG,EAAE;UACPE,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;QAClB,CAAC,MAAM;UAAA,IACGP,IAAI,GAAWQ,IAAI,CAAnBR,IAAI;YAAEC,IAAI,GAAKO,IAAI,CAAbP,IAAI;UAClB,MAAKU,QAAQ,CACX;YACEX,IAAI,EAAEA,IAAI;YACVC,IAAI,EAAEA;UACR,CAAC,EACD,YAAM;YACJ,IAAMW,IAAI,sBAAOX,IAAI,CAAC;YACtBW,IAAI,CAACC,KAAK,EAAE;YACZ,MAAKC,KAAK,CAACC,aAAa,CAACH,IAAI,CAAC;UAChC,CAAC,CACF;QACH;MACF,CAAC,CAAC;IACJ,CAAC;IAAA;EAAA;EAAA;IAAA;IAAA,yBAGQ;MAGP;QAAA;QACE;QAEE;QACE;QACA;QACA;QACA;QACA;QAEF;QAGJ,oBAAC,KAAK;UAAE,GAAG,EAAE,CAAE;UAAC,KAAK,EAAE;YAACI,SAAS,EAAC;UAAI,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAEnC,oBAAC,IAAI,CAAC,KAAK;UAAC,OAAO,EAAC,QAAQ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAC5B;UAAK,KAAK,EAAE;YAACC,MAAM,EAAC,iBAAiB;YAACC,KAAK,EAAC,IAAI;YAACC,SAAS,EAAC,QAAQ;YAAEC,OAAO,EAAC;UAAM,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,YAAa,CAErF,eAChB,oBAAC,IAAI,CAAC,OAAO;UAAC,IAAI,EAAC,MAAM;UAAC,EAAE,EAAC,QAAQ;UAAE,QAAQ,EAAE,IAAI,CAAClB,UAAW;UAAC,KAAK,EAAE;YAACgB,KAAK,EAAC,KAAK;YAACG,OAAO,EAAC;UAAM,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAAG;QAQ7G;QACF;;QAEA;;QAGM;MAAA;IAGJ;EAAC;EAAA;AAAA,EAnE8B7B,SAAS;AAsE1C,eAAeM,WAAW"},"metadata":{},"sourceType":"module"}